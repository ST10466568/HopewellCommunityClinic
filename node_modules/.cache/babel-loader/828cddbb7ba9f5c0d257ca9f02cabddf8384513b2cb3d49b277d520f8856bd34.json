{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { adminAPI, servicesAPI, appointmentsAPI } from '../services/api';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport Modal from '../components/Modal';\nimport FormInput from '../components/forms/FormInput';\nimport FormSelect from '../components/forms/FormSelect';\nimport FormTextarea from '../components/forms/FormTextarea';\nconst AdminDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [services, setServices] = useState([]);\n  const [appointmentStats, setAppointmentStats] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [showServiceModal, setShowServiceModal] = useState(false);\n  const [showReportsModal, setShowReportsModal] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedService, setSelectedService] = useState(null);\n  const [userData, setUserData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    role: 'patient'\n  });\n  const [serviceData, setServiceData] = useState({\n    name: '',\n    description: '',\n    durationMinutes: 30\n  });\n  const [reportData, setReportData] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n  const loadDashboardData = async () => {\n    try {\n      setIsLoading(true);\n      const [usersData, servicesData, statsData] = await Promise.all([adminAPI.getUsers(), servicesAPI.getAll(), adminAPI.getAppointmentStats()]);\n      setUsers(usersData);\n      setServices(servicesData);\n      setAppointmentStats(statsData);\n    } catch (error) {\n      console.error('Error loading dashboard data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleUserInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n  };\n  const handleServiceInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setServiceData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n  };\n  const handleCreateUser = async e => {\n    e.preventDefault();\n    if (!userData.firstName || !userData.lastName || !userData.email || !userData.password) {\n      setError('Please fill in all required fields');\n      return;\n    }\n    setIsSubmitting(true);\n    setError('');\n    try {\n      if (userData.role === 'patient') {\n        await adminAPI.createStaff({\n          ...userData,\n          phone: '000-000-0000',\n          // Default phone for staff\n          dateOfBirth: '1990-01-01',\n          // Default date for staff\n          address: 'N/A' // Default address for staff\n        });\n      } else {\n        await adminAPI.createStaff(userData);\n      }\n      await loadDashboardData();\n      setShowUserModal(false);\n      setUserData({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        role: 'patient'\n      });\n      alert('User created successfully!');\n    } catch (error) {\n      setError(error.error || error.message || 'Failed to create user');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleCreateService = async e => {\n    e.preventDefault();\n    if (!serviceData.name || !serviceData.description || !serviceData.durationMinutes) {\n      setError('Please fill in all required fields');\n      return;\n    }\n    setIsSubmitting(true);\n    setError('');\n    try {\n      await servicesAPI.create(serviceData);\n      await loadDashboardData();\n      setShowServiceModal(false);\n      setServiceData({\n        name: '',\n        description: '',\n        durationMinutes: 30\n      });\n      alert('Service created successfully!');\n    } catch (error) {\n      setError(error.error || error.message || 'Failed to create service');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleUpdateUserStatus = async (userId, isActive) => {\n    try {\n      await adminAPI.updateUserStatus(userId, isActive);\n      await loadDashboardData();\n      alert(`User ${isActive ? 'activated' : 'deactivated'} successfully!`);\n    } catch (error) {\n      alert('Failed to update user status: ' + (error.error || error.message));\n    }\n  };\n  const handleUpdateUserRole = async (userId, newRole) => {\n    try {\n      await adminAPI.updateUserRole(userId, newRole);\n      await loadDashboardData();\n      alert('User role updated successfully!');\n    } catch (error) {\n      alert('Failed to update user role: ' + (error.error || error.message));\n    }\n  };\n  const handleDeleteService = async serviceId => {\n    if (!confirm('Are you sure you want to delete this service?')) {\n      return;\n    }\n    try {\n      await servicesAPI.delete(serviceId);\n      await loadDashboardData();\n      alert('Service deleted successfully!');\n    } catch (error) {\n      alert('Failed to delete service: ' + (error.error || error.message));\n    }\n  };\n  const handleGenerateReport = async e => {\n    e.preventDefault();\n    if (!reportData.startDate || !reportData.endDate) {\n      setError('Please select start and end dates');\n      return;\n    }\n    try {\n      const stats = await adminAPI.getAppointmentStats(reportData.startDate, reportData.endDate);\n      setAppointmentStats(stats);\n      alert('Report generated successfully!');\n    } catch (error) {\n      setError('Failed to generate report: ' + (error.error || error.message));\n    }\n  };\n  const getRoleDisplayName = role => {\n    switch (role) {\n      case 'patient':\n        return 'Patient';\n      case 'doctor':\n        return 'Doctor';\n      case 'nurse':\n        return 'Nurse';\n      case 'admin':\n        return 'Administrator';\n      default:\n        return role;\n    }\n  };\n  const getStatusColor = isActive => {\n    return isActive ? 'text-success' : 'text-error';\n  };\n  const getStatusBadgeColor = isActive => {\n    return isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800';\n  };\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner, {\n      size: 'lg',\n      text: 'Loading admin dashboard...'\n    });\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'space-y-6'\n  },\n  /*#__PURE__*/\n  // Welcome section\n  React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6'\n  }, /*#__PURE__*/React.createElement('h1', {\n    className: 'text-3xl font-bold text-primary mb-2'\n  }, `Welcome, ${user.firstName}!`), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Manage the clinic system, users, and services.')),\n  /*#__PURE__*/\n  // Quick stats\n  React.createElement('div', {\n    className: 'grid grid-cols-1 md:grid-cols-4 gap-6'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-primary mb-2'\n  }, users.length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Total Users')), /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-success mb-2'\n  }, users.filter(u => u.isActive).length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Active Users')), /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-warning mb-2'\n  }, services.length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Services')), /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-error mb-2'\n  }, (appointmentStats === null || appointmentStats === void 0 ? void 0 : appointmentStats.totalAppointments) || 0), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Total Appointments'))),\n  /*#__PURE__*/\n  // Action buttons\n  React.createElement('div', {\n    className: 'flex flex-wrap gap-4'\n  }, /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-primary',\n    onClick: () => setShowUserModal(true)\n  }, '👤 Create User'), /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-success',\n    onClick: () => setShowServiceModal(true)\n  }, '🏥 Create Service'), /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-secondary',\n    onClick: () => setShowReportsModal(true)\n  }, '📊 Generate Reports'), /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-secondary',\n    onClick: loadDashboardData\n  }, '🔄 Refresh')),\n  /*#__PURE__*/\n  // Users management\n  React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'p-6 border-b border-light'\n  }, /*#__PURE__*/React.createElement('h2', {\n    className: 'text-2xl font-semibold text-primary'\n  }, 'User Management')), /*#__PURE__*/React.createElement('div', {\n    className: 'p-6'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'overflow-x-auto'\n  }, /*#__PURE__*/React.createElement('table', {\n    className: 'w-full'\n  }, /*#__PURE__*/React.createElement('thead', null, /*#__PURE__*/React.createElement('tr', {\n    className: 'border-b border-light'\n  }, /*#__PURE__*/React.createElement('th', {\n    className: 'text-left py-3 px-4 font-medium text-primary'\n  }, 'Name'), /*#__PURE__*/React.createElement('th', {\n    className: 'text-left py-3 px-4 font-medium text-primary'\n  }, 'Email'), /*#__PURE__*/React.createElement('th', {\n    className: 'text-left py-3 px-4 font-medium text-primary'\n  }, 'Role'), /*#__PURE__*/React.createElement('th', {\n    className: 'text-left py-3 px-4 font-medium text-primary'\n  }, 'Status'), /*#__PURE__*/React.createElement('th', {\n    className: 'text-left py-3 px-4 font-medium text-primary'\n  }, 'Actions'))), /*#__PURE__*/React.createElement('tbody', null, users.map(user => {\n    var _user$roles;\n    return /*#__PURE__*/React.createElement('tr', {\n      key: user.id,\n      className: 'border-b border-light hover:bg-gray-50'\n    }, /*#__PURE__*/React.createElement('td', {\n      className: 'py-3 px-4'\n    }, `${user.firstName} ${user.lastName}`), /*#__PURE__*/React.createElement('td', {\n      className: 'py-3 px-4'\n    }, user.email), /*#__PURE__*/React.createElement('td', {\n      className: 'py-3 px-4'\n    }, /*#__PURE__*/React.createElement('select', {\n      className: 'form-input form-select',\n      value: ((_user$roles = user.roles) === null || _user$roles === void 0 ? void 0 : _user$roles[0]) || 'patient',\n      onChange: e => handleUpdateUserRole(user.id, e.target.value)\n    }, /*#__PURE__*/React.createElement('option', {\n      value: 'patient'\n    }, 'Patient'), /*#__PURE__*/React.createElement('option', {\n      value: 'doctor'\n    }, 'Doctor'), /*#__PURE__*/React.createElement('option', {\n      value: 'nurse'\n    }, 'Nurse'), /*#__PURE__*/React.createElement('option', {\n      value: 'admin'\n    }, 'Admin'))), /*#__PURE__*/React.createElement('td', {\n      className: 'py-3 px-4'\n    }, /*#__PURE__*/React.createElement('span', {\n      className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(user.isActive)}`\n    }, user.isActive ? 'Active' : 'Inactive')), /*#__PURE__*/React.createElement('td', {\n      className: 'py-3 px-4'\n    }, /*#__PURE__*/React.createElement('button', {\n      className: `btn btn-sm ${user.isActive ? 'btn-danger' : 'btn-success'}`,\n      onClick: () => handleUpdateUserStatus(user.id, !user.isActive)\n    }, user.isActive ? 'Deactivate' : 'Activate')));\n  })))))),\n  /*#__PURE__*/\n  // Services management\n  React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'p-6 border-b border-light'\n  }, /*#__PURE__*/React.createElement('h2', {\n    className: 'text-2xl font-semibold text-primary'\n  }, 'Services Management')), /*#__PURE__*/React.createElement('div', {\n    className: 'p-6'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'\n  }, services.map(service => /*#__PURE__*/React.createElement('div', {\n    key: service.id,\n    className: 'border border-light rounded-lg p-4 hover:shadow-md transition-shadow'\n  }, /*#__PURE__*/React.createElement('h3', {\n    className: 'text-lg font-semibold text-primary mb-2'\n  }, service.name), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary mb-3'\n  }, service.description), /*#__PURE__*/React.createElement('p', {\n    className: 'text-sm text-light mb-4'\n  }, `Duration: ${service.durationMinutes} minutes`), /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-danger btn-sm w-full',\n    onClick: () => handleDeleteService(service.id)\n  }, 'Delete Service')))))),\n  /*#__PURE__*/\n  // Create user modal\n  React.createElement(Modal, {\n    isOpen: showUserModal,\n    onClose: () => setShowUserModal(false),\n    title: 'Create New User',\n    size: 'lg'\n  }, /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleCreateUser\n  }, error && /*#__PURE__*/React.createElement('div', {\n    className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\n  }, error), /*#__PURE__*/React.createElement('div', {\n    className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: 'First Name',\n    name: 'firstName',\n    value: userData.firstName,\n    onChange: handleUserInputChange,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Last Name',\n    name: 'lastName',\n    value: userData.lastName,\n    onChange: handleUserInputChange,\n    required: true\n  })), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Email',\n    name: 'email',\n    type: 'email',\n    value: userData.email,\n    onChange: handleUserInputChange,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    value: userData.password,\n    onChange: handleUserInputChange,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormSelect, {\n    label: 'Role',\n    name: 'role',\n    value: userData.role,\n    onChange: handleUserInputChange,\n    options: [{\n      value: 'patient',\n      label: 'Patient'\n    }, {\n      value: 'doctor',\n      label: 'Doctor'\n    }, {\n      value: 'nurse',\n      label: 'Nurse'\n    }, {\n      value: 'admin',\n      label: 'Administrator'\n    }],\n    required: true\n  }), /*#__PURE__*/React.createElement('div', {\n    className: 'flex gap-4 justify-end mt-6'\n  }, /*#__PURE__*/React.createElement('button', {\n    type: 'button',\n    className: 'btn btn-secondary',\n    onClick: () => setShowUserModal(false)\n  }, 'Cancel'), /*#__PURE__*/React.createElement('button', {\n    type: 'submit',\n    className: 'btn btn-primary',\n    disabled: isSubmitting\n  }, isSubmitting && /*#__PURE__*/React.createElement('div', {\n    className: 'loading-spinner w-4 h-4 mr-2'\n  }), isSubmitting ? 'Creating...' : 'Create User')))),\n  /*#__PURE__*/\n  // Create service modal\n  React.createElement(Modal, {\n    isOpen: showServiceModal,\n    onClose: () => setShowServiceModal(false),\n    title: 'Create New Service',\n    size: 'lg'\n  }, /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleCreateService\n  }, error && /*#__PURE__*/React.createElement('div', {\n    className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\n  }, error), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Service Name',\n    name: 'name',\n    value: serviceData.name,\n    onChange: handleServiceInputChange,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: 'Description',\n    name: 'description',\n    value: serviceData.description,\n    onChange: handleServiceInputChange,\n    required: true,\n    rows: 3\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Duration (minutes)',\n    name: 'durationMinutes',\n    type: 'number',\n    value: serviceData.durationMinutes,\n    onChange: handleServiceInputChange,\n    required: true,\n    min: 1\n  }), /*#__PURE__*/React.createElement('div', {\n    className: 'flex gap-4 justify-end mt-6'\n  }, /*#__PURE__*/React.createElement('button', {\n    type: 'button',\n    className: 'btn btn-secondary',\n    onClick: () => setShowServiceModal(false)\n  }, 'Cancel'), /*#__PURE__*/React.createElement('button', {\n    type: 'submit',\n    className: 'btn btn-primary',\n    disabled: isSubmitting\n  }, isSubmitting && /*#__PURE__*/React.createElement('div', {\n    className: 'loading-spinner w-4 h-4 mr-2'\n  }), isSubmitting ? 'Creating...' : 'Create Service')))),\n  /*#__PURE__*/\n  // Reports modal\n  React.createElement(Modal, {\n    isOpen: showReportsModal,\n    onClose: () => setShowReportsModal(false),\n    title: 'Generate Reports',\n    size: 'lg'\n  }, /*#__PURE__*/React.createElement('div', null, /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleGenerateReport\n  }, error && /*#__PURE__*/React.createElement('div', {\n    className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\n  }, error), /*#__PURE__*/React.createElement('div', {\n    className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Start Date',\n    name: 'startDate',\n    type: 'date',\n    value: reportData.startDate,\n    onChange: e => setReportData(prev => ({\n      ...prev,\n      startDate: e.target.value\n    }))\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'End Date',\n    name: 'endDate',\n    type: 'date',\n    value: reportData.endDate,\n    onChange: e => setReportData(prev => ({\n      ...prev,\n      endDate: e.target.value\n    }))\n  })), /*#__PURE__*/React.createElement('button', {\n    type: 'submit',\n    className: 'btn btn-primary w-full mt-4'\n  }, 'Generate Report')), appointmentStats && /*#__PURE__*/React.createElement('div', {\n    className: 'mt-6 p-4 bg-gray-50 rounded-lg'\n  }, /*#__PURE__*/React.createElement('h3', {\n    className: 'text-lg font-semibold text-primary mb-4'\n  }, 'Appointment Statistics'), /*#__PURE__*/React.createElement('div', {\n    className: 'grid grid-cols-2 md:grid-cols-4 gap-4'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-2xl font-bold text-primary'\n  }, appointmentStats.totalAppointments || 0), /*#__PURE__*/React.createElement('p', {\n    className: 'text-sm text-secondary'\n  }, 'Total Appointments')), /*#__PURE__*/React.createElement('div', {\n    className: 'text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-2xl font-bold text-success'\n  }, appointmentStats.completedAppointments || 0), /*#__PURE__*/React.createElement('p', {\n    className: 'text-sm text-secondary'\n  }, 'Completed')), /*#__PURE__*/React.createElement('div', {\n    className: 'text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-2xl font-bold text-warning'\n  }, appointmentStats.confirmedAppointments || 0), /*#__PURE__*/React.createElement('p', {\n    className: 'text-sm text-secondary'\n  }, 'Confirmed')), /*#__PURE__*/React.createElement('div', {\n    className: 'text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-2xl font-bold text-error'\n  }, appointmentStats.cancelledAppointments || 0), /*#__PURE__*/React.createElement('p', {\n    className: 'text-sm text-secondary'\n  }, 'Cancelled')))))));\n};\n_s(AdminDashboard, \"Enl6EJTAS9EdfcKECDCV4bGWVUI=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","adminAPI","servicesAPI","appointmentsAPI","LoadingSpinner","Modal","FormInput","FormSelect","FormTextarea","AdminDashboard","_s","user","users","setUsers","services","setServices","appointmentStats","setAppointmentStats","isLoading","setIsLoading","showUserModal","setShowUserModal","showServiceModal","setShowServiceModal","showReportsModal","setShowReportsModal","selectedUser","setSelectedUser","selectedService","setSelectedService","userData","setUserData","firstName","lastName","email","password","role","serviceData","setServiceData","name","description","durationMinutes","reportData","setReportData","startDate","endDate","isSubmitting","setIsSubmitting","error","setError","loadDashboardData","usersData","servicesData","statsData","Promise","all","getUsers","getAll","getAppointmentStats","console","handleUserInputChange","e","value","target","prev","handleServiceInputChange","handleCreateUser","preventDefault","createStaff","phone","dateOfBirth","address","alert","message","handleCreateService","create","handleUpdateUserStatus","userId","isActive","updateUserStatus","handleUpdateUserRole","newRole","updateUserRole","handleDeleteService","serviceId","confirm","delete","handleGenerateReport","stats","getRoleDisplayName","getStatusColor","getStatusBadgeColor","createElement","size","text","className","length","filter","u","totalAppointments","onClick","map","_user$roles","key","id","roles","onChange","service","isOpen","onClose","title","onSubmit","label","required","type","options","disabled","rows","min","completedAppointments","confirmedAppointments","cancelledAppointments","_c","$RefreshReg$"],"sources":["C:/Project/HopewellClinic/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { adminAPI, servicesAPI, appointmentsAPI } from '../services/api';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport Modal from '../components/Modal';\r\nimport FormInput from '../components/forms/FormInput';\r\nimport FormSelect from '../components/forms/FormSelect';\r\nimport FormTextarea from '../components/forms/FormTextarea';\r\n\r\nconst AdminDashboard = () => {\r\n  const { user } = useAuth();\r\n  const [users, setUsers] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [appointmentStats, setAppointmentStats] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showUserModal, setShowUserModal] = useState(false);\r\n  const [showServiceModal, setShowServiceModal] = useState(false);\r\n  const [showReportsModal, setShowReportsModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [selectedService, setSelectedService] = useState(null);\r\n  const [userData, setUserData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    role: 'patient'\r\n  });\r\n  const [serviceData, setServiceData] = useState({\r\n    name: '',\r\n    description: '',\r\n    durationMinutes: 30\r\n  });\r\n  const [reportData, setReportData] = useState({\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const [usersData, servicesData, statsData] = await Promise.all([\r\n        adminAPI.getUsers(),\r\n        servicesAPI.getAll(),\r\n        adminAPI.getAppointmentStats()\r\n      ]);\r\n      setUsers(usersData);\r\n      setServices(servicesData);\r\n      setAppointmentStats(statsData);\r\n    } catch (error) {\r\n      console.error('Error loading dashboard data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUserInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    setError('');\r\n  };\r\n\r\n  const handleServiceInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setServiceData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    setError('');\r\n  };\r\n\r\n  const handleCreateUser = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!userData.firstName || !userData.lastName || !userData.email || !userData.password) {\r\n      setError('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setError('');\r\n\r\n    try {\r\n      if (userData.role === 'patient') {\r\n        await adminAPI.createStaff({\r\n          ...userData,\r\n          phone: '000-000-0000', // Default phone for staff\r\n          dateOfBirth: '1990-01-01', // Default date for staff\r\n          address: 'N/A' // Default address for staff\r\n        });\r\n      } else {\r\n        await adminAPI.createStaff(userData);\r\n      }\r\n\r\n      await loadDashboardData();\r\n      setShowUserModal(false);\r\n      setUserData({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        role: 'patient'\r\n      });\r\n      alert('User created successfully!');\r\n    } catch (error) {\r\n      setError(error.error || error.message || 'Failed to create user');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateService = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!serviceData.name || !serviceData.description || !serviceData.durationMinutes) {\r\n      setError('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setError('');\r\n\r\n    try {\r\n      await servicesAPI.create(serviceData);\r\n      await loadDashboardData();\r\n      setShowServiceModal(false);\r\n      setServiceData({\r\n        name: '',\r\n        description: '',\r\n        durationMinutes: 30\r\n      });\r\n      alert('Service created successfully!');\r\n    } catch (error) {\r\n      setError(error.error || error.message || 'Failed to create service');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateUserStatus = async (userId, isActive) => {\r\n    try {\r\n      await adminAPI.updateUserStatus(userId, isActive);\r\n      await loadDashboardData();\r\n      alert(`User ${isActive ? 'activated' : 'deactivated'} successfully!`);\r\n    } catch (error) {\r\n      alert('Failed to update user status: ' + (error.error || error.message));\r\n    }\r\n  };\r\n\r\n  const handleUpdateUserRole = async (userId, newRole) => {\r\n    try {\r\n      await adminAPI.updateUserRole(userId, newRole);\r\n      await loadDashboardData();\r\n      alert('User role updated successfully!');\r\n    } catch (error) {\r\n      alert('Failed to update user role: ' + (error.error || error.message));\r\n    }\r\n  };\r\n\r\n  const handleDeleteService = async (serviceId) => {\r\n    if (!confirm('Are you sure you want to delete this service?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await servicesAPI.delete(serviceId);\r\n      await loadDashboardData();\r\n      alert('Service deleted successfully!');\r\n    } catch (error) {\r\n      alert('Failed to delete service: ' + (error.error || error.message));\r\n    }\r\n  };\r\n\r\n  const handleGenerateReport = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!reportData.startDate || !reportData.endDate) {\r\n      setError('Please select start and end dates');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const stats = await adminAPI.getAppointmentStats(reportData.startDate, reportData.endDate);\r\n      setAppointmentStats(stats);\r\n      alert('Report generated successfully!');\r\n    } catch (error) {\r\n      setError('Failed to generate report: ' + (error.error || error.message));\r\n    }\r\n  };\r\n\r\n  const getRoleDisplayName = (role) => {\r\n    switch (role) {\r\n      case 'patient': return 'Patient';\r\n      case 'doctor': return 'Doctor';\r\n      case 'nurse': return 'Nurse';\r\n      case 'admin': return 'Administrator';\r\n      default: return role;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (isActive) => {\r\n    return isActive ? 'text-success' : 'text-error';\r\n  };\r\n\r\n  const getStatusBadgeColor = (isActive) => {\r\n    return isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800';\r\n  };\r\n\r\n  if (isLoading) {\r\n    return React.createElement(LoadingSpinner, {\r\n      size: 'lg',\r\n      text: 'Loading admin dashboard...'\r\n    });\r\n  }\r\n\r\n  return React.createElement('div', {\r\n    className: 'space-y-6'\r\n  },\r\n    // Welcome section\r\n    React.createElement('div', {\r\n      className: 'bg-white rounded-lg shadow-md p-6'\r\n    },\r\n      React.createElement('h1', {\r\n        className: 'text-3xl font-bold text-primary mb-2'\r\n      }, `Welcome, ${user.firstName}!`),\r\n      React.createElement('p', {\r\n        className: 'text-secondary'\r\n      }, 'Manage the clinic system, users, and services.')\r\n    ),\r\n\r\n    // Quick stats\r\n    React.createElement('div', {\r\n      className: 'grid grid-cols-1 md:grid-cols-4 gap-6'\r\n    },\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-primary mb-2'\r\n        }, users.length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Total Users')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-success mb-2'\r\n        }, users.filter(u => u.isActive).length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Active Users')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-warning mb-2'\r\n        }, services.length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Services')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-error mb-2'\r\n        }, appointmentStats?.totalAppointments || 0),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Total Appointments')\r\n      )\r\n    ),\r\n\r\n    // Action buttons\r\n    React.createElement('div', {\r\n      className: 'flex flex-wrap gap-4'\r\n    },\r\n      React.createElement('button', {\r\n        className: 'btn btn-primary',\r\n        onClick: () => setShowUserModal(true)\r\n      }, '👤 Create User'),\r\n      React.createElement('button', {\r\n        className: 'btn btn-success',\r\n        onClick: () => setShowServiceModal(true)\r\n      }, '🏥 Create Service'),\r\n      React.createElement('button', {\r\n        className: 'btn btn-secondary',\r\n        onClick: () => setShowReportsModal(true)\r\n      }, '📊 Generate Reports'),\r\n      React.createElement('button', {\r\n        className: 'btn btn-secondary',\r\n        onClick: loadDashboardData\r\n      }, '🔄 Refresh')\r\n    ),\r\n\r\n    // Users management\r\n    React.createElement('div', {\r\n      className: 'bg-white rounded-lg shadow-md'\r\n    },\r\n      React.createElement('div', {\r\n        className: 'p-6 border-b border-light'\r\n      },\r\n        React.createElement('h2', {\r\n          className: 'text-2xl font-semibold text-primary'\r\n        }, 'User Management')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'p-6'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'overflow-x-auto'\r\n        },\r\n          React.createElement('table', {\r\n            className: 'w-full'\r\n          },\r\n            React.createElement('thead', null,\r\n              React.createElement('tr', {\r\n                className: 'border-b border-light'\r\n              },\r\n                React.createElement('th', {\r\n                  className: 'text-left py-3 px-4 font-medium text-primary'\r\n                }, 'Name'),\r\n                React.createElement('th', {\r\n                  className: 'text-left py-3 px-4 font-medium text-primary'\r\n                }, 'Email'),\r\n                React.createElement('th', {\r\n                  className: 'text-left py-3 px-4 font-medium text-primary'\r\n                }, 'Role'),\r\n                React.createElement('th', {\r\n                  className: 'text-left py-3 px-4 font-medium text-primary'\r\n                }, 'Status'),\r\n                React.createElement('th', {\r\n                  className: 'text-left py-3 px-4 font-medium text-primary'\r\n                }, 'Actions')\r\n              )\r\n            ),\r\n            React.createElement('tbody', null,\r\n              users.map(user =>\r\n                React.createElement('tr', {\r\n                  key: user.id,\r\n                  className: 'border-b border-light hover:bg-gray-50'\r\n                },\r\n                  React.createElement('td', {\r\n                    className: 'py-3 px-4'\r\n                  }, `${user.firstName} ${user.lastName}`),\r\n                  React.createElement('td', {\r\n                    className: 'py-3 px-4'\r\n                  }, user.email),\r\n                  React.createElement('td', {\r\n                    className: 'py-3 px-4'\r\n                  },\r\n                    React.createElement('select', {\r\n                      className: 'form-input form-select',\r\n                      value: user.roles?.[0] || 'patient',\r\n                      onChange: (e) => handleUpdateUserRole(user.id, e.target.value)\r\n                    },\r\n                      React.createElement('option', { value: 'patient' }, 'Patient'),\r\n                      React.createElement('option', { value: 'doctor' }, 'Doctor'),\r\n                      React.createElement('option', { value: 'nurse' }, 'Nurse'),\r\n                      React.createElement('option', { value: 'admin' }, 'Admin')\r\n                    )\r\n                  ),\r\n                  React.createElement('td', {\r\n                    className: 'py-3 px-4'\r\n                  },\r\n                    React.createElement('span', {\r\n                      className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(user.isActive)}`\r\n                    }, user.isActive ? 'Active' : 'Inactive')\r\n                  ),\r\n                  React.createElement('td', {\r\n                    className: 'py-3 px-4'\r\n                  },\r\n                    React.createElement('button', {\r\n                      className: `btn btn-sm ${user.isActive ? 'btn-danger' : 'btn-success'}`,\r\n                      onClick: () => handleUpdateUserStatus(user.id, !user.isActive)\r\n                    }, user.isActive ? 'Deactivate' : 'Activate')\r\n                  )\r\n                )\r\n              )\r\n            )\r\n          )\r\n        )\r\n      )\r\n    ),\r\n\r\n    // Services management\r\n    React.createElement('div', {\r\n      className: 'bg-white rounded-lg shadow-md'\r\n    },\r\n      React.createElement('div', {\r\n        className: 'p-6 border-b border-light'\r\n      },\r\n        React.createElement('h2', {\r\n          className: 'text-2xl font-semibold text-primary'\r\n        }, 'Services Management')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'p-6'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'\r\n        },\r\n          services.map(service =>\r\n            React.createElement('div', {\r\n              key: service.id,\r\n              className: 'border border-light rounded-lg p-4 hover:shadow-md transition-shadow'\r\n            },\r\n              React.createElement('h3', {\r\n                className: 'text-lg font-semibold text-primary mb-2'\r\n              }, service.name),\r\n              React.createElement('p', {\r\n                className: 'text-secondary mb-3'\r\n              }, service.description),\r\n              React.createElement('p', {\r\n                className: 'text-sm text-light mb-4'\r\n              }, `Duration: ${service.durationMinutes} minutes`),\r\n              React.createElement('button', {\r\n                className: 'btn btn-danger btn-sm w-full',\r\n                onClick: () => handleDeleteService(service.id)\r\n              }, 'Delete Service')\r\n            )\r\n          )\r\n        )\r\n      )\r\n    ),\r\n\r\n    // Create user modal\r\n    React.createElement(Modal, {\r\n      isOpen: showUserModal,\r\n      onClose: () => setShowUserModal(false),\r\n      title: 'Create New User',\r\n      size: 'lg'\r\n    },\r\n      React.createElement('form', {\r\n        onSubmit: handleCreateUser\r\n      },\r\n        error && React.createElement('div', {\r\n          className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\r\n        }, error),\r\n\r\n        React.createElement('div', {\r\n          className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\r\n        },\r\n          React.createElement(FormInput, {\r\n            label: 'First Name',\r\n            name: 'firstName',\r\n            value: userData.firstName,\r\n            onChange: handleUserInputChange,\r\n            required: true\r\n          }),\r\n          React.createElement(FormInput, {\r\n            label: 'Last Name',\r\n            name: 'lastName',\r\n            value: userData.lastName,\r\n            onChange: handleUserInputChange,\r\n            required: true\r\n          })\r\n        ),\r\n\r\n        React.createElement(FormInput, {\r\n          label: 'Email',\r\n          name: 'email',\r\n          type: 'email',\r\n          value: userData.email,\r\n          onChange: handleUserInputChange,\r\n          required: true\r\n        }),\r\n\r\n        React.createElement(FormInput, {\r\n          label: 'Password',\r\n          name: 'password',\r\n          type: 'password',\r\n          value: userData.password,\r\n          onChange: handleUserInputChange,\r\n          required: true\r\n        }),\r\n\r\n        React.createElement(FormSelect, {\r\n          label: 'Role',\r\n          name: 'role',\r\n          value: userData.role,\r\n          onChange: handleUserInputChange,\r\n          options: [\r\n            { value: 'patient', label: 'Patient' },\r\n            { value: 'doctor', label: 'Doctor' },\r\n            { value: 'nurse', label: 'Nurse' },\r\n            { value: 'admin', label: 'Administrator' }\r\n          ],\r\n          required: true\r\n        }),\r\n\r\n        React.createElement('div', {\r\n          className: 'flex gap-4 justify-end mt-6'\r\n        },\r\n          React.createElement('button', {\r\n            type: 'button',\r\n            className: 'btn btn-secondary',\r\n            onClick: () => setShowUserModal(false)\r\n          }, 'Cancel'),\r\n          React.createElement('button', {\r\n            type: 'submit',\r\n            className: 'btn btn-primary',\r\n            disabled: isSubmitting\r\n          },\r\n            isSubmitting && React.createElement('div', {\r\n              className: 'loading-spinner w-4 h-4 mr-2'\r\n            }),\r\n            isSubmitting ? 'Creating...' : 'Create User'\r\n          )\r\n        )\r\n      )\r\n    ),\r\n\r\n    // Create service modal\r\n    React.createElement(Modal, {\r\n      isOpen: showServiceModal,\r\n      onClose: () => setShowServiceModal(false),\r\n      title: 'Create New Service',\r\n      size: 'lg'\r\n    },\r\n      React.createElement('form', {\r\n        onSubmit: handleCreateService\r\n      },\r\n        error && React.createElement('div', {\r\n          className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\r\n        }, error),\r\n\r\n        React.createElement(FormInput, {\r\n          label: 'Service Name',\r\n          name: 'name',\r\n          value: serviceData.name,\r\n          onChange: handleServiceInputChange,\r\n          required: true\r\n        }),\r\n\r\n        React.createElement(FormTextarea, {\r\n          label: 'Description',\r\n          name: 'description',\r\n          value: serviceData.description,\r\n          onChange: handleServiceInputChange,\r\n          required: true,\r\n          rows: 3\r\n        }),\r\n\r\n        React.createElement(FormInput, {\r\n          label: 'Duration (minutes)',\r\n          name: 'durationMinutes',\r\n          type: 'number',\r\n          value: serviceData.durationMinutes,\r\n          onChange: handleServiceInputChange,\r\n          required: true,\r\n          min: 1\r\n        }),\r\n\r\n        React.createElement('div', {\r\n          className: 'flex gap-4 justify-end mt-6'\r\n        },\r\n          React.createElement('button', {\r\n            type: 'button',\r\n            className: 'btn btn-secondary',\r\n            onClick: () => setShowServiceModal(false)\r\n          }, 'Cancel'),\r\n          React.createElement('button', {\r\n            type: 'submit',\r\n            className: 'btn btn-primary',\r\n            disabled: isSubmitting\r\n          },\r\n            isSubmitting && React.createElement('div', {\r\n              className: 'loading-spinner w-4 h-4 mr-2'\r\n            }),\r\n            isSubmitting ? 'Creating...' : 'Create Service'\r\n          )\r\n        )\r\n      )\r\n    ),\r\n\r\n    // Reports modal\r\n    React.createElement(Modal, {\r\n      isOpen: showReportsModal,\r\n      onClose: () => setShowReportsModal(false),\r\n      title: 'Generate Reports',\r\n      size: 'lg'\r\n    },\r\n      React.createElement('div', null,\r\n        React.createElement('form', {\r\n          onSubmit: handleGenerateReport\r\n        },\r\n          error && React.createElement('div', {\r\n            className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\r\n          }, error),\r\n\r\n          React.createElement('div', {\r\n            className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\r\n          },\r\n            React.createElement(FormInput, {\r\n              label: 'Start Date',\r\n              name: 'startDate',\r\n              type: 'date',\r\n              value: reportData.startDate,\r\n              onChange: (e) => setReportData(prev => ({ ...prev, startDate: e.target.value }))\r\n            }),\r\n            React.createElement(FormInput, {\r\n              label: 'End Date',\r\n              name: 'endDate',\r\n              type: 'date',\r\n              value: reportData.endDate,\r\n              onChange: (e) => setReportData(prev => ({ ...prev, endDate: e.target.value }))\r\n            })\r\n          ),\r\n\r\n          React.createElement('button', {\r\n            type: 'submit',\r\n            className: 'btn btn-primary w-full mt-4'\r\n          }, 'Generate Report')\r\n        ),\r\n\r\n        appointmentStats && React.createElement('div', {\r\n          className: 'mt-6 p-4 bg-gray-50 rounded-lg'\r\n        },\r\n          React.createElement('h3', {\r\n            className: 'text-lg font-semibold text-primary mb-4'\r\n          }, 'Appointment Statistics'),\r\n          React.createElement('div', {\r\n            className: 'grid grid-cols-2 md:grid-cols-4 gap-4'\r\n          },\r\n            React.createElement('div', {\r\n              className: 'text-center'\r\n            },\r\n              React.createElement('div', {\r\n                className: 'text-2xl font-bold text-primary'\r\n              }, appointmentStats.totalAppointments || 0),\r\n              React.createElement('p', {\r\n                className: 'text-sm text-secondary'\r\n              }, 'Total Appointments')\r\n            ),\r\n            React.createElement('div', {\r\n              className: 'text-center'\r\n            },\r\n              React.createElement('div', {\r\n                className: 'text-2xl font-bold text-success'\r\n              }, appointmentStats.completedAppointments || 0),\r\n              React.createElement('p', {\r\n                className: 'text-sm text-secondary'\r\n              }, 'Completed')\r\n            ),\r\n            React.createElement('div', {\r\n              className: 'text-center'\r\n            },\r\n              React.createElement('div', {\r\n                className: 'text-2xl font-bold text-warning'\r\n              }, appointmentStats.confirmedAppointments || 0),\r\n              React.createElement('p', {\r\n                className: 'text-sm text-secondary'\r\n              }, 'Confirmed')\r\n            ),\r\n            React.createElement('div', {\r\n              className: 'text-center'\r\n            },\r\n              React.createElement('div', {\r\n                className: 'text-2xl font-bold text-error'\r\n              }, appointmentStats.cancelledAppointments || 0),\r\n              React.createElement('p', {\r\n                className: 'text-sm text-secondary'\r\n              }, 'Cancelled')\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,QAAQ,EAAEC,WAAW,EAAEC,eAAe,QAAQ,iBAAiB;AACxE,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,+BAA+B;AACrD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,YAAY,MAAM,kCAAkC;AAE3D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAK,CAAC,GAAGX,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC;IACvCkC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC;IAC7CyC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,eAAe,EAAE;EACnB,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAC;IAC3C8C,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkD,KAAK,EAAEC,QAAQ,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdmD,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF/B,YAAY,CAAC,IAAI,CAAC;MAClB,MAAM,CAACgC,SAAS,EAAEC,YAAY,EAAEC,SAAS,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC7DtD,QAAQ,CAACuD,QAAQ,CAAC,CAAC,EACnBtD,WAAW,CAACuD,MAAM,CAAC,CAAC,EACpBxD,QAAQ,CAACyD,mBAAmB,CAAC,CAAC,CAC/B,CAAC;MACF7C,QAAQ,CAACsC,SAAS,CAAC;MACnBpC,WAAW,CAACqC,YAAY,CAAC;MACzBnC,mBAAmB,CAACoC,SAAS,CAAC;IAChC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,SAAS;MACR7B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMyC,qBAAqB,GAAIC,CAAC,IAAK;IACnC,MAAM;MAAEtB,IAAI;MAAEuB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChChC,WAAW,CAACiC,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACzB,IAAI,GAAGuB;IACV,CAAC,CAAC,CAAC;IACHb,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMgB,wBAAwB,GAAIJ,CAAC,IAAK;IACtC,MAAM;MAAEtB,IAAI;MAAEuB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCzB,cAAc,CAAC0B,IAAI,KAAK;MACtB,GAAGA,IAAI;MACP,CAACzB,IAAI,GAAGuB;IACV,CAAC,CAAC,CAAC;IACHb,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMiB,gBAAgB,GAAG,MAAOL,CAAC,IAAK;IACpCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAI,CAACrC,QAAQ,CAACE,SAAS,IAAI,CAACF,QAAQ,CAACG,QAAQ,IAAI,CAACH,QAAQ,CAACI,KAAK,IAAI,CAACJ,QAAQ,CAACK,QAAQ,EAAE;MACtFc,QAAQ,CAAC,oCAAoC,CAAC;MAC9C;IACF;IAEAF,eAAe,CAAC,IAAI,CAAC;IACrBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,IAAInB,QAAQ,CAACM,IAAI,KAAK,SAAS,EAAE;QAC/B,MAAMnC,QAAQ,CAACmE,WAAW,CAAC;UACzB,GAAGtC,QAAQ;UACXuC,KAAK,EAAE,cAAc;UAAE;UACvBC,WAAW,EAAE,YAAY;UAAE;UAC3BC,OAAO,EAAE,KAAK,CAAC;QACjB,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAMtE,QAAQ,CAACmE,WAAW,CAACtC,QAAQ,CAAC;MACtC;MAEA,MAAMoB,iBAAiB,CAAC,CAAC;MACzB7B,gBAAgB,CAAC,KAAK,CAAC;MACvBU,WAAW,CAAC;QACVC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE;MACR,CAAC,CAAC;MACFoC,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACyB,OAAO,IAAI,uBAAuB,CAAC;IACnE,CAAC,SAAS;MACR1B,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAM2B,mBAAmB,GAAG,MAAOb,CAAC,IAAK;IACvCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAI,CAAC9B,WAAW,CAACE,IAAI,IAAI,CAACF,WAAW,CAACG,WAAW,IAAI,CAACH,WAAW,CAACI,eAAe,EAAE;MACjFQ,QAAQ,CAAC,oCAAoC,CAAC;MAC9C;IACF;IAEAF,eAAe,CAAC,IAAI,CAAC;IACrBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAM/C,WAAW,CAACyE,MAAM,CAACtC,WAAW,CAAC;MACrC,MAAMa,iBAAiB,CAAC,CAAC;MACzB3B,mBAAmB,CAAC,KAAK,CAAC;MAC1Be,cAAc,CAAC;QACbC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE;MACnB,CAAC,CAAC;MACF+B,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACyB,OAAO,IAAI,0BAA0B,CAAC;IACtE,CAAC,SAAS;MACR1B,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAM6B,sBAAsB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,KAAK;IACzD,IAAI;MACF,MAAM7E,QAAQ,CAAC8E,gBAAgB,CAACF,MAAM,EAAEC,QAAQ,CAAC;MACjD,MAAM5B,iBAAiB,CAAC,CAAC;MACzBsB,KAAK,CAAC,QAAQM,QAAQ,GAAG,WAAW,GAAG,aAAa,gBAAgB,CAAC;IACvE,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACdwB,KAAK,CAAC,gCAAgC,IAAIxB,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACyB,OAAO,CAAC,CAAC;IAC1E;EACF,CAAC;EAED,MAAMO,oBAAoB,GAAG,MAAAA,CAAOH,MAAM,EAAEI,OAAO,KAAK;IACtD,IAAI;MACF,MAAMhF,QAAQ,CAACiF,cAAc,CAACL,MAAM,EAAEI,OAAO,CAAC;MAC9C,MAAM/B,iBAAiB,CAAC,CAAC;MACzBsB,KAAK,CAAC,iCAAiC,CAAC;IAC1C,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdwB,KAAK,CAAC,8BAA8B,IAAIxB,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACyB,OAAO,CAAC,CAAC;IACxE;EACF,CAAC;EAED,MAAMU,mBAAmB,GAAG,MAAOC,SAAS,IAAK;IAC/C,IAAI,CAACC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MAC7D;IACF;IAEA,IAAI;MACF,MAAMnF,WAAW,CAACoF,MAAM,CAACF,SAAS,CAAC;MACnC,MAAMlC,iBAAiB,CAAC,CAAC;MACzBsB,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdwB,KAAK,CAAC,4BAA4B,IAAIxB,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACyB,OAAO,CAAC,CAAC;IACtE;EACF,CAAC;EAED,MAAMc,oBAAoB,GAAG,MAAO1B,CAAC,IAAK;IACxCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAI,CAACzB,UAAU,CAACE,SAAS,IAAI,CAACF,UAAU,CAACG,OAAO,EAAE;MAChDI,QAAQ,CAAC,mCAAmC,CAAC;MAC7C;IACF;IAEA,IAAI;MACF,MAAMuC,KAAK,GAAG,MAAMvF,QAAQ,CAACyD,mBAAmB,CAAChB,UAAU,CAACE,SAAS,EAAEF,UAAU,CAACG,OAAO,CAAC;MAC1F5B,mBAAmB,CAACuE,KAAK,CAAC;MAC1BhB,KAAK,CAAC,gCAAgC,CAAC;IACzC,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,QAAQ,CAAC,6BAA6B,IAAID,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACyB,OAAO,CAAC,CAAC;IAC1E;EACF,CAAC;EAED,MAAMgB,kBAAkB,GAAIrD,IAAI,IAAK;IACnC,QAAQA,IAAI;MACV,KAAK,SAAS;QAAE,OAAO,SAAS;MAChC,KAAK,QAAQ;QAAE,OAAO,QAAQ;MAC9B,KAAK,OAAO;QAAE,OAAO,OAAO;MAC5B,KAAK,OAAO;QAAE,OAAO,eAAe;MACpC;QAAS,OAAOA,IAAI;IACtB;EACF,CAAC;EAED,MAAMsD,cAAc,GAAIZ,QAAQ,IAAK;IACnC,OAAOA,QAAQ,GAAG,cAAc,GAAG,YAAY;EACjD,CAAC;EAED,MAAMa,mBAAmB,GAAIb,QAAQ,IAAK;IACxC,OAAOA,QAAQ,GAAG,6BAA6B,GAAG,yBAAyB;EAC7E,CAAC;EAED,IAAI5D,SAAS,EAAE;IACb,oBAAOrB,KAAK,CAAC+F,aAAa,CAACxF,cAAc,EAAE;MACzCyF,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EAEA,oBAAOjG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IAChCG,SAAS,EAAE;EACb,CAAC;EAAA;EACC;EACAlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAE,YAAYpF,IAAI,CAACqB,SAAS,GAAG,CAAC,eACjCnC,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,gDAAgD,CACrD,CAAC;EAAA;EAED;EACAlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,EAAEnF,KAAK,CAACoF,MAAM,CAAC,eAChBnG,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,aAAa,CAClB,CAAC,eACDlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,EAAEnF,KAAK,CAACqF,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACpB,QAAQ,CAAC,CAACkB,MAAM,CAAC,eACxCnG,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,cAAc,CACnB,CAAC,eACDlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,EAAEjF,QAAQ,CAACkF,MAAM,CAAC,eACnBnG,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,UAAU,CACf,CAAC,eACDlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,EAAE,CAAA/E,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEmF,iBAAiB,KAAI,CAAC,CAAC,eAC5CtG,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,oBAAoB,CACzB,CACF,CAAC;EAAA;EAED;EACAlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BG,SAAS,EAAE,iBAAiB;IAC5BK,OAAO,EAAEA,CAAA,KAAM/E,gBAAgB,CAAC,IAAI;EACtC,CAAC,EAAE,gBAAgB,CAAC,eACpBxB,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BG,SAAS,EAAE,iBAAiB;IAC5BK,OAAO,EAAEA,CAAA,KAAM7E,mBAAmB,CAAC,IAAI;EACzC,CAAC,EAAE,mBAAmB,CAAC,eACvB1B,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BG,SAAS,EAAE,mBAAmB;IAC9BK,OAAO,EAAEA,CAAA,KAAM3E,mBAAmB,CAAC,IAAI;EACzC,CAAC,EAAE,qBAAqB,CAAC,eACzB5B,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BG,SAAS,EAAE,mBAAmB;IAC9BK,OAAO,EAAElD;EACX,CAAC,EAAE,YAAY,CACjB,CAAC;EAAA;EAED;EACArD,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAE,iBAAiB,CACtB,CAAC,eACDlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,OAAO,EAAE;IAC3BG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,OAAO,EAAE,IAAI,eAC/B/F,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAE,MAAM,CAAC,eACVlG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAE,OAAO,CAAC,eACXlG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAE,MAAM,CAAC,eACVlG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAE,QAAQ,CAAC,eACZlG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAE,SAAS,CACd,CACF,CAAC,eACDlG,KAAK,CAAC+F,aAAa,CAAC,OAAO,EAAE,IAAI,EAC/BhF,KAAK,CAACyF,GAAG,CAAC1F,IAAI;IAAA,IAAA2F,WAAA;IAAA,oBACZzG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;MACxBW,GAAG,EAAE5F,IAAI,CAAC6F,EAAE;MACZT,SAAS,EAAE;IACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;MACxBG,SAAS,EAAE;IACb,CAAC,EAAE,GAAGpF,IAAI,CAACqB,SAAS,IAAIrB,IAAI,CAACsB,QAAQ,EAAE,CAAC,eACxCpC,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;MACxBG,SAAS,EAAE;IACb,CAAC,EAAEpF,IAAI,CAACuB,KAAK,CAAC,eACdrC,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;MACxBG,SAAS,EAAE;IACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;MAC5BG,SAAS,EAAE,wBAAwB;MACnCjC,KAAK,EAAE,EAAAwC,WAAA,GAAA3F,IAAI,CAAC8F,KAAK,cAAAH,WAAA,uBAAVA,WAAA,CAAa,CAAC,CAAC,KAAI,SAAS;MACnCI,QAAQ,EAAG7C,CAAC,IAAKmB,oBAAoB,CAACrE,IAAI,CAAC6F,EAAE,EAAE3C,CAAC,CAACE,MAAM,CAACD,KAAK;IAC/D,CAAC,eACCjE,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;MAAE9B,KAAK,EAAE;IAAU,CAAC,EAAE,SAAS,CAAC,eAC9DjE,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;MAAE9B,KAAK,EAAE;IAAS,CAAC,EAAE,QAAQ,CAAC,eAC5DjE,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;MAAE9B,KAAK,EAAE;IAAQ,CAAC,EAAE,OAAO,CAAC,eAC1DjE,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;MAAE9B,KAAK,EAAE;IAAQ,CAAC,EAAE,OAAO,CAC3D,CACF,CAAC,eACDjE,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;MACxBG,SAAS,EAAE;IACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,MAAM,EAAE;MAC1BG,SAAS,EAAE,8CAA8CJ,mBAAmB,CAAChF,IAAI,CAACmE,QAAQ,CAAC;IAC7F,CAAC,EAAEnE,IAAI,CAACmE,QAAQ,GAAG,QAAQ,GAAG,UAAU,CAC1C,CAAC,eACDjF,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;MACxBG,SAAS,EAAE;IACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;MAC5BG,SAAS,EAAE,cAAcpF,IAAI,CAACmE,QAAQ,GAAG,YAAY,GAAG,aAAa,EAAE;MACvEsB,OAAO,EAAEA,CAAA,KAAMxB,sBAAsB,CAACjE,IAAI,CAAC6F,EAAE,EAAE,CAAC7F,IAAI,CAACmE,QAAQ;IAC/D,CAAC,EAAEnE,IAAI,CAACmE,QAAQ,GAAG,YAAY,GAAG,UAAU,CAC9C,CACF,CAAC;EAAA,CACH,CACF,CACF,CACF,CACF,CACF,CAAC;EAAA;EAED;EACAjF,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAE,qBAAqB,CAC1B,CAAC,eACDlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,EACCjF,QAAQ,CAACuF,GAAG,CAACM,OAAO,iBAClB9G,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBW,GAAG,EAAEI,OAAO,CAACH,EAAE;IACfT,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAEY,OAAO,CAACpE,IAAI,CAAC,eAChB1C,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAEY,OAAO,CAACnE,WAAW,CAAC,eACvB3C,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,aAAaY,OAAO,CAAClE,eAAe,UAAU,CAAC,eAClD5C,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BG,SAAS,EAAE,8BAA8B;IACzCK,OAAO,EAAEA,CAAA,KAAMjB,mBAAmB,CAACwB,OAAO,CAACH,EAAE;EAC/C,CAAC,EAAE,gBAAgB,CACrB,CACF,CACF,CACF,CACF,CAAC;EAAA;EAED;EACA3G,KAAK,CAAC+F,aAAa,CAACvF,KAAK,EAAE;IACzBuG,MAAM,EAAExF,aAAa;IACrByF,OAAO,EAAEA,CAAA,KAAMxF,gBAAgB,CAAC,KAAK,CAAC;IACtCyF,KAAK,EAAE,iBAAiB;IACxBjB,IAAI,EAAE;EACR,CAAC,eACChG,KAAK,CAAC+F,aAAa,CAAC,MAAM,EAAE;IAC1BmB,QAAQ,EAAE7C;EACZ,CAAC,EACClB,KAAK,iBAAInD,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IAClCG,SAAS,EAAE;EACb,CAAC,EAAE/C,KAAK,CAAC,eAETnD,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAACtF,SAAS,EAAE;IAC7B0G,KAAK,EAAE,YAAY;IACnBzE,IAAI,EAAE,WAAW;IACjBuB,KAAK,EAAEhC,QAAQ,CAACE,SAAS;IACzB0E,QAAQ,EAAE9C,qBAAqB;IAC/BqD,QAAQ,EAAE;EACZ,CAAC,CAAC,eACFpH,KAAK,CAAC+F,aAAa,CAACtF,SAAS,EAAE;IAC7B0G,KAAK,EAAE,WAAW;IAClBzE,IAAI,EAAE,UAAU;IAChBuB,KAAK,EAAEhC,QAAQ,CAACG,QAAQ;IACxByE,QAAQ,EAAE9C,qBAAqB;IAC/BqD,QAAQ,EAAE;EACZ,CAAC,CACH,CAAC,eAEDpH,KAAK,CAAC+F,aAAa,CAACtF,SAAS,EAAE;IAC7B0G,KAAK,EAAE,OAAO;IACdzE,IAAI,EAAE,OAAO;IACb2E,IAAI,EAAE,OAAO;IACbpD,KAAK,EAAEhC,QAAQ,CAACI,KAAK;IACrBwE,QAAQ,EAAE9C,qBAAqB;IAC/BqD,QAAQ,EAAE;EACZ,CAAC,CAAC,eAEFpH,KAAK,CAAC+F,aAAa,CAACtF,SAAS,EAAE;IAC7B0G,KAAK,EAAE,UAAU;IACjBzE,IAAI,EAAE,UAAU;IAChB2E,IAAI,EAAE,UAAU;IAChBpD,KAAK,EAAEhC,QAAQ,CAACK,QAAQ;IACxBuE,QAAQ,EAAE9C,qBAAqB;IAC/BqD,QAAQ,EAAE;EACZ,CAAC,CAAC,eAEFpH,KAAK,CAAC+F,aAAa,CAACrF,UAAU,EAAE;IAC9ByG,KAAK,EAAE,MAAM;IACbzE,IAAI,EAAE,MAAM;IACZuB,KAAK,EAAEhC,QAAQ,CAACM,IAAI;IACpBsE,QAAQ,EAAE9C,qBAAqB;IAC/BuD,OAAO,EAAE,CACP;MAAErD,KAAK,EAAE,SAAS;MAAEkD,KAAK,EAAE;IAAU,CAAC,EACtC;MAAElD,KAAK,EAAE,QAAQ;MAAEkD,KAAK,EAAE;IAAS,CAAC,EACpC;MAAElD,KAAK,EAAE,OAAO;MAAEkD,KAAK,EAAE;IAAQ,CAAC,EAClC;MAAElD,KAAK,EAAE,OAAO;MAAEkD,KAAK,EAAE;IAAgB,CAAC,CAC3C;IACDC,QAAQ,EAAE;EACZ,CAAC,CAAC,eAEFpH,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BsB,IAAI,EAAE,QAAQ;IACdnB,SAAS,EAAE,mBAAmB;IAC9BK,OAAO,EAAEA,CAAA,KAAM/E,gBAAgB,CAAC,KAAK;EACvC,CAAC,EAAE,QAAQ,CAAC,eACZxB,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BsB,IAAI,EAAE,QAAQ;IACdnB,SAAS,EAAE,iBAAiB;IAC5BqB,QAAQ,EAAEtE;EACZ,CAAC,EACCA,YAAY,iBAAIjD,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzCG,SAAS,EAAE;EACb,CAAC,CAAC,EACFjD,YAAY,GAAG,aAAa,GAAG,aACjC,CACF,CACF,CACF,CAAC;EAAA;EAED;EACAjD,KAAK,CAAC+F,aAAa,CAACvF,KAAK,EAAE;IACzBuG,MAAM,EAAEtF,gBAAgB;IACxBuF,OAAO,EAAEA,CAAA,KAAMtF,mBAAmB,CAAC,KAAK,CAAC;IACzCuF,KAAK,EAAE,oBAAoB;IAC3BjB,IAAI,EAAE;EACR,CAAC,eACChG,KAAK,CAAC+F,aAAa,CAAC,MAAM,EAAE;IAC1BmB,QAAQ,EAAErC;EACZ,CAAC,EACC1B,KAAK,iBAAInD,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IAClCG,SAAS,EAAE;EACb,CAAC,EAAE/C,KAAK,CAAC,eAETnD,KAAK,CAAC+F,aAAa,CAACtF,SAAS,EAAE;IAC7B0G,KAAK,EAAE,cAAc;IACrBzE,IAAI,EAAE,MAAM;IACZuB,KAAK,EAAEzB,WAAW,CAACE,IAAI;IACvBmE,QAAQ,EAAEzC,wBAAwB;IAClCgD,QAAQ,EAAE;EACZ,CAAC,CAAC,eAEFpH,KAAK,CAAC+F,aAAa,CAACpF,YAAY,EAAE;IAChCwG,KAAK,EAAE,aAAa;IACpBzE,IAAI,EAAE,aAAa;IACnBuB,KAAK,EAAEzB,WAAW,CAACG,WAAW;IAC9BkE,QAAQ,EAAEzC,wBAAwB;IAClCgD,QAAQ,EAAE,IAAI;IACdI,IAAI,EAAE;EACR,CAAC,CAAC,eAEFxH,KAAK,CAAC+F,aAAa,CAACtF,SAAS,EAAE;IAC7B0G,KAAK,EAAE,oBAAoB;IAC3BzE,IAAI,EAAE,iBAAiB;IACvB2E,IAAI,EAAE,QAAQ;IACdpD,KAAK,EAAEzB,WAAW,CAACI,eAAe;IAClCiE,QAAQ,EAAEzC,wBAAwB;IAClCgD,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC,CAAC,eAEFzH,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BsB,IAAI,EAAE,QAAQ;IACdnB,SAAS,EAAE,mBAAmB;IAC9BK,OAAO,EAAEA,CAAA,KAAM7E,mBAAmB,CAAC,KAAK;EAC1C,CAAC,EAAE,QAAQ,CAAC,eACZ1B,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BsB,IAAI,EAAE,QAAQ;IACdnB,SAAS,EAAE,iBAAiB;IAC5BqB,QAAQ,EAAEtE;EACZ,CAAC,EACCA,YAAY,iBAAIjD,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzCG,SAAS,EAAE;EACb,CAAC,CAAC,EACFjD,YAAY,GAAG,aAAa,GAAG,gBACjC,CACF,CACF,CACF,CAAC;EAAA;EAED;EACAjD,KAAK,CAAC+F,aAAa,CAACvF,KAAK,EAAE;IACzBuG,MAAM,EAAEpF,gBAAgB;IACxBqF,OAAO,EAAEA,CAAA,KAAMpF,mBAAmB,CAAC,KAAK,CAAC;IACzCqF,KAAK,EAAE,kBAAkB;IACzBjB,IAAI,EAAE;EACR,CAAC,eACChG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE,IAAI,eAC7B/F,KAAK,CAAC+F,aAAa,CAAC,MAAM,EAAE;IAC1BmB,QAAQ,EAAExB;EACZ,CAAC,EACCvC,KAAK,iBAAInD,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IAClCG,SAAS,EAAE;EACb,CAAC,EAAE/C,KAAK,CAAC,eAETnD,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAACtF,SAAS,EAAE;IAC7B0G,KAAK,EAAE,YAAY;IACnBzE,IAAI,EAAE,WAAW;IACjB2E,IAAI,EAAE,MAAM;IACZpD,KAAK,EAAEpB,UAAU,CAACE,SAAS;IAC3B8D,QAAQ,EAAG7C,CAAC,IAAKlB,aAAa,CAACqB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEpB,SAAS,EAAEiB,CAAC,CAACE,MAAM,CAACD;IAAM,CAAC,CAAC;EACjF,CAAC,CAAC,eACFjE,KAAK,CAAC+F,aAAa,CAACtF,SAAS,EAAE;IAC7B0G,KAAK,EAAE,UAAU;IACjBzE,IAAI,EAAE,SAAS;IACf2E,IAAI,EAAE,MAAM;IACZpD,KAAK,EAAEpB,UAAU,CAACG,OAAO;IACzB6D,QAAQ,EAAG7C,CAAC,IAAKlB,aAAa,CAACqB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEnB,OAAO,EAAEgB,CAAC,CAACE,MAAM,CAACD;IAAM,CAAC,CAAC;EAC/E,CAAC,CACH,CAAC,eAEDjE,KAAK,CAAC+F,aAAa,CAAC,QAAQ,EAAE;IAC5BsB,IAAI,EAAE,QAAQ;IACdnB,SAAS,EAAE;EACb,CAAC,EAAE,iBAAiB,CACtB,CAAC,EAED/E,gBAAgB,iBAAInB,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IAC7CG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,IAAI,EAAE;IACxBG,SAAS,EAAE;EACb,CAAC,EAAE,wBAAwB,CAAC,eAC5BlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,EAAE/E,gBAAgB,CAACmF,iBAAiB,IAAI,CAAC,CAAC,eAC3CtG,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,oBAAoB,CACzB,CAAC,eACDlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,EAAE/E,gBAAgB,CAACuG,qBAAqB,IAAI,CAAC,CAAC,eAC/C1H,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,WAAW,CAChB,CAAC,eACDlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,EAAE/E,gBAAgB,CAACwG,qBAAqB,IAAI,CAAC,CAAC,eAC/C3H,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,WAAW,CAChB,CAAC,eACDlG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,eACClG,KAAK,CAAC+F,aAAa,CAAC,KAAK,EAAE;IACzBG,SAAS,EAAE;EACb,CAAC,EAAE/E,gBAAgB,CAACyG,qBAAqB,IAAI,CAAC,CAAC,eAC/C5H,KAAK,CAAC+F,aAAa,CAAC,GAAG,EAAE;IACvBG,SAAS,EAAE;EACb,CAAC,EAAE,WAAW,CAChB,CACF,CACF,CACF,CACF,CACF,CAAC;AACH,CAAC;AAACrF,EAAA,CAhqBID,cAAc;EAAA,QACDT,OAAO;AAAA;AAAA0H,EAAA,GADpBjH,cAAc;AAkqBpB,eAAeA,cAAc;AAAC,IAAAiH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}