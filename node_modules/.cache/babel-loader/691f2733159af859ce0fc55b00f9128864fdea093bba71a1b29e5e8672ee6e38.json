{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,CardContent,CardDescription,CardHeader,CardTitle}from'./ui/card';import{Button}from'./ui/button';import{Badge}from'./ui/badge';import{Label}from'./ui/label';import{Calendar,Clock,User,Phone,MapPin,ChevronLeft,ChevronRight,Plus,AlertCircle}from'lucide-react';import{appointmentsAPI,staffAPI}from'../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DailySchedule=_ref=>{let{doctorId:initialDoctorId,isAdmin=false,onBookAppointment}=_ref;const[selectedDate,setSelectedDate]=useState(new Date());const[appointments,setAppointments]=useState([]);const[doctors,setDoctors]=useState([]);const[selectedDoctorId,setSelectedDoctorId]=useState(initialDoctorId||'');const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState('');// Load doctors list for admin\nuseEffect(()=>{console.log('🔍 DailySchedule useEffect - isAdmin:',isAdmin,'initialDoctorId:',initialDoctorId);if(isAdmin){loadDoctors();}else if(initialDoctorId){console.log('✅ Setting selectedDoctorId to:',initialDoctorId);setSelectedDoctorId(initialDoctorId);}else{console.log('❌ No initialDoctorId provided');}},[isAdmin,initialDoctorId]);// Load appointments when doctor or date changes\nuseEffect(()=>{console.log('🔄 DailySchedule useEffect - selectedDoctorId:',selectedDoctorId,'selectedDate:',selectedDate);if(selectedDoctorId){loadAppointments();}else{console.log('❌ No selectedDoctorId, cannot load appointments');setAppointments([]);}},[selectedDoctorId,selectedDate]);const loadDoctors=async()=>{try{const staffData=await staffAPI.getAll();// Filter for doctors only\nconst doctorsData=staffData.filter(staff=>staff.role==='doctor'&&staff.isActive);setDoctors(doctorsData);if(doctorsData.length>0&&!selectedDoctorId){setSelectedDoctorId(doctorsData[0].id);}}catch(error){console.error('Error loading doctors:',error);setError('Failed to load doctors list');}};const loadAppointments=async()=>{if(!selectedDoctorId){console.log('❌ No doctor ID selected, cannot load appointments');return;}try{setIsLoading(true);setError('');// Format date as YYYY-MM-DD\nconst dateStr=selectedDate.toISOString().split('T')[0];console.log('📅 Loading appointments for:',{doctorId:selectedDoctorId,date:dateStr,selectedDate:selectedDate});const appointmentsData=await appointmentsAPI.getByDoctorAndDate(selectedDoctorId,dateStr);console.log('📋 Appointments loaded:',appointmentsData);setAppointments(appointmentsData);}catch(error){console.error('❌ Error loading appointments:',error);setError('Failed to load appointments');setAppointments([]);}finally{setIsLoading(false);}};const formatDate=date=>{return date.toLocaleDateString('en-US',{weekday:'long',year:'numeric',month:'long',day:'numeric'});};const formatTime=timeString=>{try{const[hours,minutes]=timeString.split(':');const date=new Date();date.setHours(parseInt(hours,10));date.setMinutes(parseInt(minutes,10));return date.toLocaleTimeString('en-US',{hour:'numeric',minute:'2-digit',hour12:true});}catch(_unused){return timeString;}};const getStatusBadge=status=>{const statusColors={scheduled:'bg-blue-100 text-blue-800',confirmed:'bg-green-100 text-green-800',completed:'bg-gray-100 text-gray-800',cancelled:'bg-red-100 text-red-800',pending:'bg-yellow-100 text-yellow-800'};return/*#__PURE__*/_jsx(Badge,{className:\"\".concat(statusColors[status.toLowerCase()]||'bg-gray-100 text-gray-800'),children:status});};const navigateDate=direction=>{const newDate=new Date(selectedDate);newDate.setDate(newDate.getDate()+(direction==='next'?1:-1));setSelectedDate(newDate);};const goToToday=()=>{setSelectedDate(new Date());};const isToday=selectedDate.toDateString()===new Date().toDateString();const selectedDoctor=doctors.find(d=>d.id===selectedDoctorId);return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CardTitle,{children:\"Daily Schedule\"}),/*#__PURE__*/_jsx(CardDescription,{children:isAdmin&&selectedDoctor?\"\".concat(selectedDoctor.firstName,\" \").concat(selectedDoctor.lastName,\"'s appointments\"):'Your appointments for the day'})]}),onBookAppointment&&/*#__PURE__*/_jsxs(Button,{onClick:onBookAppointment,size:\"sm\",children:[/*#__PURE__*/_jsx(Plus,{className:\"h-4 w-4 mr-2\"}),\"New Appointment\"]})]})}),/*#__PURE__*/_jsxs(CardContent,{className:\"space-y-6\",children:[isAdmin&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 p-4 bg-muted/50 rounded-lg\",children:[/*#__PURE__*/_jsx(User,{className:\"h-5 w-5 text-muted-foreground\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"doctor-select\",className:\"text-sm font-medium\",children:\"Select Doctor\"}),/*#__PURE__*/_jsx(\"select\",{id:\"doctor-select\",value:selectedDoctorId,onChange:e=>setSelectedDoctorId(e.target.value),className:\"mt-1 w-full px-3 py-2 bg-background border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring\",children:doctors.map(doctor=>/*#__PURE__*/_jsxs(\"option\",{value:doctor.id,children:[\"Dr. \",doctor.firstName,\" \",doctor.lastName]},doctor.id))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between gap-4\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:()=>navigateDate('prev'),children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"h-5 w-5 text-primary\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-lg\",children:formatDate(selectedDate)})]}),!isToday&&/*#__PURE__*/_jsx(Button,{variant:\"link\",size:\"sm\",onClick:goToToday,className:\"text-xs\",children:\"Go to Today\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:()=>navigateDate('next'),children:/*#__PURE__*/_jsx(ChevronRight,{className:\"h-4 w-4\"})})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"p-4 bg-red-50 border border-red-200 rounded-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-600\",children:error})}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center py-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"})}),!isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:!selectedDoctorId?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-12 w-12 text-red-500 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600 font-medium\",children:\"Doctor ID not found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-muted-foreground mt-2\",children:\"Your account may not be properly linked to a doctor record. Please contact support.\"})]}):appointments.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"h-12 w-12 text-muted-foreground mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted-foreground\",children:\"No appointments scheduled for this day\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-between mb-2\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-muted-foreground\",children:[appointments.length,\" appointment\",appointments.length!==1?'s':'']})}),appointments.sort((a,b)=>a.startTime.localeCompare(b.startTime)).map(appointment=>/*#__PURE__*/_jsx(Card,{className:\"border-l-4 border-l-primary\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Clock,{className:\"h-4 w-4 text-muted-foreground\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-semibold\",children:[formatTime(appointment.startTime),appointment.endTime&&\" - \".concat(formatTime(appointment.endTime))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center gap-2\",children:getStatusBadge(appointment.status)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(User,{className:\"h-4 w-4 text-muted-foreground\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[appointment.patient.firstName,\" \",appointment.patient.lastName]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-muted-foreground ml-2\",children:appointment.patient.email})]})]}),appointment.patient.phone&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Phone,{className:\"h-4 w-4 text-muted-foreground\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:appointment.patient.phone})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(MapPin,{className:\"h-4 w-4 text-muted-foreground\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm\",children:[appointment.service.name,/*#__PURE__*/_jsxs(\"span\",{className:\"text-muted-foreground ml-2\",children:[\"(\",appointment.service.durationMinutes,\" min)\"]})]})]}),appointment.notes&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 p-2 bg-muted/50 rounded text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Notes: \"}),appointment.notes]})]})]})},appointment.id))]})})]})]});};export default DailySchedule;","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","CardDescription","CardHeader","CardTitle","Button","Badge","Label","Calendar","Clock","User","Phone","MapPin","ChevronLeft","ChevronRight","Plus","AlertCircle","appointmentsAPI","staffAPI","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DailySchedule","_ref","doctorId","initialDoctorId","isAdmin","onBookAppointment","selectedDate","setSelectedDate","Date","appointments","setAppointments","doctors","setDoctors","selectedDoctorId","setSelectedDoctorId","isLoading","setIsLoading","error","setError","console","log","loadDoctors","loadAppointments","staffData","getAll","doctorsData","filter","staff","role","isActive","length","id","dateStr","toISOString","split","date","appointmentsData","getByDoctorAndDate","formatDate","toLocaleDateString","weekday","year","month","day","formatTime","timeString","hours","minutes","setHours","parseInt","setMinutes","toLocaleTimeString","hour","minute","hour12","_unused","getStatusBadge","status","statusColors","scheduled","confirmed","completed","cancelled","pending","className","concat","toLowerCase","children","navigateDate","direction","newDate","setDate","getDate","goToToday","isToday","toDateString","selectedDoctor","find","d","firstName","lastName","onClick","size","htmlFor","value","onChange","e","target","map","doctor","variant","sort","a","b","startTime","localeCompare","appointment","endTime","patient","email","phone","service","name","durationMinutes","notes"],"sources":["C:/Project/HopewellClinic/src/components/DailySchedule.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Label } from './ui/label';\nimport { Calendar, Clock, User, Phone, MapPin, ChevronLeft, ChevronRight, Plus, AlertCircle } from 'lucide-react';\nimport { appointmentsAPI, staffAPI } from '../services/api';\n\ninterface Doctor {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  role: string;\n}\n\ninterface Appointment {\n  id: string;\n  appointmentDate: string;\n  startTime: string;\n  endTime: string;\n  status: string;\n  notes?: string;\n  staffId?: string;\n  doctorId?: string;\n  staff?: {\n    id?: string;\n    staffId?: string;\n    userId?: string;\n    firstName?: string;\n    lastName?: string;\n    email?: string;\n    role?: string;\n  };\n  patient: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone?: string;\n  };\n  service: {\n    id: string;\n    name: string;\n    durationMinutes: number;\n    price?: number;\n  };\n}\n\ninterface DailyScheduleProps {\n  doctorId?: string;\n  isAdmin?: boolean;\n  onBookAppointment?: () => void;\n}\n\nconst DailySchedule: React.FC<DailyScheduleProps> = ({ \n  doctorId: initialDoctorId, \n  isAdmin = false,\n  onBookAppointment \n}) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [selectedDoctorId, setSelectedDoctorId] = useState<string>(initialDoctorId || '');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Load doctors list for admin\n  useEffect(() => {\n    console.log('🔍 DailySchedule useEffect - isAdmin:', isAdmin, 'initialDoctorId:', initialDoctorId);\n    if (isAdmin) {\n      loadDoctors();\n    } else if (initialDoctorId) {\n      console.log('✅ Setting selectedDoctorId to:', initialDoctorId);\n      setSelectedDoctorId(initialDoctorId);\n    } else {\n      console.log('❌ No initialDoctorId provided');\n    }\n  }, [isAdmin, initialDoctorId]);\n\n  // Load appointments when doctor or date changes\n  useEffect(() => {\n    console.log('🔄 DailySchedule useEffect - selectedDoctorId:', selectedDoctorId, 'selectedDate:', selectedDate);\n    if (selectedDoctorId) {\n      loadAppointments();\n    } else {\n      console.log('❌ No selectedDoctorId, cannot load appointments');\n      setAppointments([]);\n    }\n  }, [selectedDoctorId, selectedDate]);\n\n  const loadDoctors = async () => {\n    try {\n      const staffData = await staffAPI.getAll();\n      // Filter for doctors only\n      const doctorsData = staffData.filter((staff: any) => staff.role === 'doctor' && staff.isActive);\n      setDoctors(doctorsData);\n      if (doctorsData.length > 0 && !selectedDoctorId) {\n        setSelectedDoctorId(doctorsData[0].id);\n      }\n    } catch (error) {\n      console.error('Error loading doctors:', error);\n      setError('Failed to load doctors list');\n    }\n  };\n\n  const loadAppointments = async () => {\n    if (!selectedDoctorId) {\n      console.log('❌ No doctor ID selected, cannot load appointments');\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      setError('');\n      \n      // Format date as YYYY-MM-DD\n      const dateStr = selectedDate.toISOString().split('T')[0];\n      \n      console.log('📅 Loading appointments for:', {\n        doctorId: selectedDoctorId,\n        date: dateStr,\n        selectedDate: selectedDate\n      });\n      \n      const appointmentsData = await appointmentsAPI.getByDoctorAndDate(selectedDoctorId, dateStr);\n      console.log('📋 Appointments loaded:', appointmentsData);\n      \n      setAppointments(appointmentsData);\n    } catch (error: any) {\n      console.error('❌ Error loading appointments:', error);\n      setError('Failed to load appointments');\n      setAppointments([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const formatDate = (date: Date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const formatTime = (timeString: string) => {\n    try {\n      const [hours, minutes] = timeString.split(':');\n      const date = new Date();\n      date.setHours(parseInt(hours, 10));\n      date.setMinutes(parseInt(minutes, 10));\n      return date.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true\n      });\n    } catch {\n      return timeString;\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusColors: { [key: string]: string } = {\n      scheduled: 'bg-blue-100 text-blue-800',\n      confirmed: 'bg-green-100 text-green-800',\n      completed: 'bg-gray-100 text-gray-800',\n      cancelled: 'bg-red-100 text-red-800',\n      pending: 'bg-yellow-100 text-yellow-800'\n    };\n\n    return (\n      <Badge className={`${statusColors[status.toLowerCase()] || 'bg-gray-100 text-gray-800'}`}>\n        {status}\n      </Badge>\n    );\n  };\n\n  const navigateDate = (direction: 'prev' | 'next') => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(newDate.getDate() + (direction === 'next' ? 1 : -1));\n    setSelectedDate(newDate);\n  };\n\n  const goToToday = () => {\n    setSelectedDate(new Date());\n  };\n\n  const isToday = selectedDate.toDateString() === new Date().toDateString();\n\n  const selectedDoctor = doctors.find(d => d.id === selectedDoctorId);\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle>Daily Schedule</CardTitle>\n            <CardDescription>\n              {isAdmin && selectedDoctor \n                ? `${selectedDoctor.firstName} ${selectedDoctor.lastName}'s appointments`\n                : 'Your appointments for the day'}\n            </CardDescription>\n          </div>\n          {onBookAppointment && (\n            <Button onClick={onBookAppointment} size=\"sm\">\n              <Plus className=\"h-4 w-4 mr-2\" />\n              New Appointment\n            </Button>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Doctor Selector for Admin */}\n        {isAdmin && (\n          <div className=\"flex items-center gap-4 p-4 bg-muted/50 rounded-lg\">\n            <User className=\"h-5 w-5 text-muted-foreground\" />\n            <div className=\"flex-1\">\n              <Label htmlFor=\"doctor-select\" className=\"text-sm font-medium\">\n                Select Doctor\n              </Label>\n              <select\n                id=\"doctor-select\"\n                value={selectedDoctorId}\n                onChange={(e) => setSelectedDoctorId(e.target.value)}\n                className=\"mt-1 w-full px-3 py-2 bg-background border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring\"\n              >\n                {doctors.map((doctor) => (\n                  <option key={doctor.id} value={doctor.id}>\n                    Dr. {doctor.firstName} {doctor.lastName}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        )}\n\n        {/* Date Navigation */}\n        <div className=\"flex items-center justify-between gap-4\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => navigateDate('prev')}\n          >\n            <ChevronLeft className=\"h-4 w-4\" />\n          </Button>\n          \n          <div className=\"flex flex-col items-center flex-1\">\n            <div className=\"flex items-center gap-2\">\n              <Calendar className=\"h-5 w-5 text-primary\" />\n              <span className=\"font-semibold text-lg\">{formatDate(selectedDate)}</span>\n            </div>\n            {!isToday && (\n              <Button\n                variant=\"link\"\n                size=\"sm\"\n                onClick={goToToday}\n                className=\"text-xs\"\n              >\n                Go to Today\n              </Button>\n            )}\n          </div>\n          \n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => navigateDate('next')}\n          >\n            <ChevronRight className=\"h-4 w-4\" />\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <p className=\"text-sm text-red-600\">{error}</p>\n          </div>\n        )}\n\n        {/* Loading State */}\n        {isLoading && (\n          <div className=\"flex items-center justify-center py-8\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n          </div>\n        )}\n\n        {/* Appointments List */}\n        {!isLoading && (\n          <div className=\"space-y-3\">\n            {!selectedDoctorId ? (\n              <div className=\"text-center py-8\">\n                <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n                <p className=\"text-red-600 font-medium\">Doctor ID not found</p>\n                <p className=\"text-sm text-muted-foreground mt-2\">\n                  Your account may not be properly linked to a doctor record. Please contact support.\n                </p>\n              </div>\n            ) : appointments.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <Calendar className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                <p className=\"text-muted-foreground\">No appointments scheduled for this day</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-sm font-medium text-muted-foreground\">\n                    {appointments.length} appointment{appointments.length !== 1 ? 's' : ''}\n                  </span>\n                </div>\n                \n                {appointments\n                  .sort((a, b) => a.startTime.localeCompare(b.startTime))\n                  .map((appointment) => (\n                    <Card key={appointment.id} className=\"border-l-4 border-l-primary\">\n                      <CardContent className=\"p-4\">\n                        <div className=\"flex items-start justify-between mb-3\">\n                          <div className=\"flex items-center gap-2\">\n                            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                            <span className=\"font-semibold\">\n                              {formatTime(appointment.startTime)}\n                              {appointment.endTime && ` - ${formatTime(appointment.endTime)}`}\n                            </span>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            {getStatusBadge(appointment.status)}\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-2\">\n                          {/* Patient Info */}\n                          <div className=\"flex items-center gap-2\">\n                            <User className=\"h-4 w-4 text-muted-foreground\" />\n                            <div>\n                              <span className=\"font-medium\">\n                                {appointment.patient.firstName} {appointment.patient.lastName}\n                              </span>\n                              <span className=\"text-sm text-muted-foreground ml-2\">\n                                {appointment.patient.email}\n                              </span>\n                            </div>\n                          </div>\n\n                          {/* Phone if available */}\n                          {appointment.patient.phone && (\n                            <div className=\"flex items-center gap-2\">\n                              <Phone className=\"h-4 w-4 text-muted-foreground\" />\n                              <span className=\"text-sm\">{appointment.patient.phone}</span>\n                            </div>\n                          )}\n\n                          {/* Service Info */}\n                          <div className=\"flex items-center gap-2\">\n                            <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n                            <span className=\"text-sm\">\n                              {appointment.service.name}\n                              <span className=\"text-muted-foreground ml-2\">\n                                ({appointment.service.durationMinutes} min)\n                              </span>\n                            </span>\n                          </div>\n\n                          {/* Notes */}\n                          {appointment.notes && (\n                            <div className=\"mt-2 p-2 bg-muted/50 rounded text-sm\">\n                              <span className=\"font-medium\">Notes: </span>\n                              {appointment.notes}\n                            </div>\n                          )}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n              </>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DailySchedule;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}