{"ast":null,"code":"import React from 'react';\nconst FormSelect = ({\n  label,\n  name,\n  value,\n  onChange,\n  onBlur,\n  error,\n  options = [],\n  placeholder = 'Select an option',\n  required = false,\n  disabled = false,\n  className = '',\n  ...props\n}) => {\n  const inputId = `select-${name}`;\n  return /*#__PURE__*/React.createElement('div', {\n    className: `form-group ${className}`\n  }, label && /*#__PURE__*/React.createElement('label', {\n    htmlFor: inputId,\n    className: 'form-label'\n  }, label, required && /*#__PURE__*/React.createElement('span', {\n    className: 'text-error ml-1'\n  }, '*')), /*#__PURE__*/React.createElement('select', {\n    id: inputId,\n    name: name,\n    value: value || '',\n    onChange: onChange,\n    onBlur: onBlur,\n    required: required,\n    disabled: disabled,\n    className: `form-input form-select ${error ? 'error' : ''}`,\n    ...props\n  }, /*#__PURE__*/React.createElement('option', {\n    value: '',\n    disabled: true\n  }, placeholder), options.map((option, index) => {\n    if (typeof option === 'string') {\n      return /*#__PURE__*/React.createElement('option', {\n        key: index,\n        value: option\n      }, option);\n    }\n    return /*#__PURE__*/React.createElement('option', {\n      key: option.key || option.value || index,\n      value: option.value\n    }, option.label || option.name || option.value);\n  })), error && /*#__PURE__*/React.createElement('div', {\n    className: 'form-error'\n  }, error));\n};\n_c = FormSelect;\nexport default FormSelect;\nvar _c;\n$RefreshReg$(_c, \"FormSelect\");","map":{"version":3,"names":["React","FormSelect","label","name","value","onChange","onBlur","error","options","placeholder","required","disabled","className","props","inputId","createElement","htmlFor","id","map","option","index","key","_c","$RefreshReg$"],"sources":["C:/Project/HopewellClinic/src/components/forms/FormSelect.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst FormSelect = ({ \r\n  label, \r\n  name, \r\n  value, \r\n  onChange, \r\n  onBlur,\r\n  error, \r\n  options = [], \r\n  placeholder = 'Select an option',\r\n  required = false,\r\n  disabled = false,\r\n  className = '',\r\n  ...props \r\n}) => {\r\n  const inputId = `select-${name}`;\r\n\r\n  return React.createElement('div', {\r\n    className: `form-group ${className}`\r\n  },\r\n    label && React.createElement('label', {\r\n      htmlFor: inputId,\r\n      className: 'form-label'\r\n    }, label, required && React.createElement('span', {\r\n      className: 'text-error ml-1'\r\n    }, '*')),\r\n    React.createElement('select', {\r\n      id: inputId,\r\n      name: name,\r\n      value: value || '',\r\n      onChange: onChange,\r\n      onBlur: onBlur,\r\n      required: required,\r\n      disabled: disabled,\r\n      className: `form-input form-select ${error ? 'error' : ''}`,\r\n      ...props\r\n    },\r\n      React.createElement('option', {\r\n        value: '',\r\n        disabled: true\r\n      }, placeholder),\r\n      options.map((option, index) => {\r\n        if (typeof option === 'string') {\r\n          return React.createElement('option', {\r\n            key: index,\r\n            value: option\r\n          }, option);\r\n        }\r\n        return React.createElement('option', {\r\n          key: option.key || option.value || index,\r\n          value: option.value\r\n        }, option.label || option.name || option.value);\r\n      })\r\n    ),\r\n    error && React.createElement('div', {\r\n      className: 'form-error'\r\n    }, error)\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGA,CAAC;EAClBC,KAAK;EACLC,IAAI;EACJC,KAAK;EACLC,QAAQ;EACRC,MAAM;EACNC,KAAK;EACLC,OAAO,GAAG,EAAE;EACZC,WAAW,GAAG,kBAAkB;EAChCC,QAAQ,GAAG,KAAK;EAChBC,QAAQ,GAAG,KAAK;EAChBC,SAAS,GAAG,EAAE;EACd,GAAGC;AACL,CAAC,KAAK;EACJ,MAAMC,OAAO,GAAG,UAAUX,IAAI,EAAE;EAEhC,oBAAOH,KAAK,CAACe,aAAa,CAAC,KAAK,EAAE;IAChCH,SAAS,EAAE,cAAcA,SAAS;EACpC,CAAC,EACCV,KAAK,iBAAIF,KAAK,CAACe,aAAa,CAAC,OAAO,EAAE;IACpCC,OAAO,EAAEF,OAAO;IAChBF,SAAS,EAAE;EACb,CAAC,EAAEV,KAAK,EAAEQ,QAAQ,iBAAIV,KAAK,CAACe,aAAa,CAAC,MAAM,EAAE;IAChDH,SAAS,EAAE;EACb,CAAC,EAAE,GAAG,CAAC,CAAC,eACRZ,KAAK,CAACe,aAAa,CAAC,QAAQ,EAAE;IAC5BE,EAAE,EAAEH,OAAO;IACXX,IAAI,EAAEA,IAAI;IACVC,KAAK,EAAEA,KAAK,IAAI,EAAE;IAClBC,QAAQ,EAAEA,QAAQ;IAClBC,MAAM,EAAEA,MAAM;IACdI,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAE,0BAA0BL,KAAK,GAAG,OAAO,GAAG,EAAE,EAAE;IAC3D,GAAGM;EACL,CAAC,eACCb,KAAK,CAACe,aAAa,CAAC,QAAQ,EAAE;IAC5BX,KAAK,EAAE,EAAE;IACTO,QAAQ,EAAE;EACZ,CAAC,EAAEF,WAAW,CAAC,EACfD,OAAO,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;IAC7B,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;MAC9B,oBAAOnB,KAAK,CAACe,aAAa,CAAC,QAAQ,EAAE;QACnCM,GAAG,EAAED,KAAK;QACVhB,KAAK,EAAEe;MACT,CAAC,EAAEA,MAAM,CAAC;IACZ;IACA,oBAAOnB,KAAK,CAACe,aAAa,CAAC,QAAQ,EAAE;MACnCM,GAAG,EAAEF,MAAM,CAACE,GAAG,IAAIF,MAAM,CAACf,KAAK,IAAIgB,KAAK;MACxChB,KAAK,EAAEe,MAAM,CAACf;IAChB,CAAC,EAAEe,MAAM,CAACjB,KAAK,IAAIiB,MAAM,CAAChB,IAAI,IAAIgB,MAAM,CAACf,KAAK,CAAC;EACjD,CAAC,CACH,CAAC,EACDG,KAAK,iBAAIP,KAAK,CAACe,aAAa,CAAC,KAAK,EAAE;IAClCH,SAAS,EAAE;EACb,CAAC,EAAEL,KAAK,CACV,CAAC;AACH,CAAC;AAACe,EAAA,GAzDIrB,UAAU;AA2DhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}