{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport Layout from './components/Layout';\nimport LandingPage from './pages/LandingPage';\nimport AuthPage from './pages/AuthPage';\nimport PatientDashboard from './pages/PatientDashboard';\nimport DoctorDashboard from './pages/DoctorDashboard';\nimport NurseDashboard from './pages/NurseDashboard';\nimport AdminDashboard from './pages/AdminDashboard';\nimport LoadingSpinner from './components/LoadingSpinner';\n\n// Protected Route component\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = []\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isLoading,\n    hasAnyRole\n  } = useAuth();\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: '/auth',\n      replace: true\n    });\n  }\n  if (allowedRoles.length > 0 && !hasAnyRole(allowedRoles)) {\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: '/unauthorized',\n      replace: true\n    });\n  }\n  return children;\n};\n\n// Public Route component (redirects to dashboard if authenticated)\n_s(ProtectedRoute, \"QRsE/tUD7olIanpaPmCviy1w10g=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nconst PublicRoute = ({\n  children\n}) => {\n  _s2();\n  const {\n    isAuthenticated,\n    isLoading,\n    getPrimaryRole\n  } = useAuth();\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner);\n  }\n  if (isAuthenticated) {\n    const primaryRole = getPrimaryRole();\n    const dashboardPath = getDashboardPath(primaryRole);\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: dashboardPath,\n      replace: true\n    });\n  }\n  return children;\n};\n\n// Get dashboard path based on user role\n_s2(PublicRoute, \"0A+VzZVA8uj22mY8tUDL8rhfrAU=\", false, function () {\n  return [useAuth];\n});\n_c2 = PublicRoute;\nconst getDashboardPath = role => {\n  switch (role) {\n    case 'patient':\n      return '/patient-dashboard';\n    case 'doctor':\n      return '/doctor-dashboard';\n    case 'nurse':\n      return '/nurse-dashboard';\n    case 'admin':\n      return '/admin-dashboard';\n    default:\n      return '/patient-dashboard';\n  }\n};\n\n// Unauthorized page component\nconst UnauthorizedPage = () => {\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'min-h-screen flex items-center justify-center bg-light'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-center'\n  }, /*#__PURE__*/React.createElement('h1', {\n    className: 'text-4xl font-bold text-error mb-4'\n  }, '403'), /*#__PURE__*/React.createElement('h2', {\n    className: 'text-2xl font-semibold text-primary mb-4'\n  }, 'Access Denied'), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary mb-6'\n  }, 'You do not have permission to access this page.'), /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-primary',\n    onClick: () => window.history.back()\n  }, 'Go Back')));\n};\n\n// Main App Routes component\n_c3 = UnauthorizedPage;\nconst AppRoutes = () => {\n  return /*#__PURE__*/React.createElement(Router, null, /*#__PURE__*/React.createElement(Routes, null,\n  /*#__PURE__*/\n  // Public routes\n  React.createElement(Route, {\n    path: '/',\n    element: /*#__PURE__*/React.createElement(PublicRoute, null, /*#__PURE__*/React.createElement(LandingPage))\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: '/auth',\n    element: /*#__PURE__*/React.createElement(PublicRoute, null, /*#__PURE__*/React.createElement(AuthPage))\n  }),\n  /*#__PURE__*/\n  // Protected routes with layout\n  React.createElement(Route, {\n    path: '/dashboard/patient',\n    element: /*#__PURE__*/React.createElement(ProtectedRoute, {\n      allowedRoles: ['patient']\n    }, /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(PatientDashboard)))\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: '/dashboard/doctor',\n    element: /*#__PURE__*/React.createElement(ProtectedRoute, {\n      allowedRoles: ['doctor']\n    }, /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(DoctorDashboard)))\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: '/dashboard/nurse',\n    element: /*#__PURE__*/React.createElement(ProtectedRoute, {\n      allowedRoles: ['nurse']\n    }, /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(NurseDashboard)))\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: '/dashboard/admin',\n    element: /*#__PURE__*/React.createElement(ProtectedRoute, {\n      allowedRoles: ['admin']\n    }, /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(AdminDashboard)))\n  }),\n  /*#__PURE__*/\n  // Unauthorized page\n  React.createElement(Route, {\n    path: '/unauthorized',\n    element: /*#__PURE__*/React.createElement(UnauthorizedPage)\n  }),\n  /*#__PURE__*/\n  // Catch all route - redirect to home\n  React.createElement(Route, {\n    path: '*',\n    element: /*#__PURE__*/React.createElement(Navigate, {\n      to: '/',\n      replace: true\n    })\n  })));\n};\n\n// Main App component\n_c4 = AppRoutes;\nconst App = () => {\n  return /*#__PURE__*/React.createElement(AuthProvider, null, /*#__PURE__*/React.createElement(AppRoutes));\n};\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"PublicRoute\");\n$RefreshReg$(_c3, \"UnauthorizedPage\");\n$RefreshReg$(_c4, \"AppRoutes\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","AuthProvider","useAuth","Layout","LandingPage","AuthPage","PatientDashboard","DoctorDashboard","NurseDashboard","AdminDashboard","LoadingSpinner","ProtectedRoute","children","allowedRoles","_s","isAuthenticated","isLoading","hasAnyRole","createElement","to","replace","length","_c","PublicRoute","_s2","getPrimaryRole","primaryRole","dashboardPath","getDashboardPath","_c2","role","UnauthorizedPage","className","onClick","window","history","back","_c3","AppRoutes","path","element","_c4","App","_c5","$RefreshReg$"],"sources":["C:/Project/HopewellClinic/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\r\nimport Layout from './components/Layout';\r\nimport LandingPage from './pages/LandingPage';\r\nimport AuthPage from './pages/AuthPage';\r\nimport PatientDashboard from './pages/PatientDashboard';\r\nimport DoctorDashboard from './pages/DoctorDashboard';\r\nimport NurseDashboard from './pages/NurseDashboard';\r\nimport AdminDashboard from './pages/AdminDashboard';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\n\r\n// Protected Route component\r\nconst ProtectedRoute = ({ children, allowedRoles = [] }) => {\r\n  const { isAuthenticated, isLoading, hasAnyRole } = useAuth();\r\n\r\n  if (isLoading) {\r\n    return React.createElement(LoadingSpinner);\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return React.createElement(Navigate, { to: '/auth', replace: true });\r\n  }\r\n\r\n  if (allowedRoles.length > 0 && !hasAnyRole(allowedRoles)) {\r\n    return React.createElement(Navigate, { to: '/unauthorized', replace: true });\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\n// Public Route component (redirects to dashboard if authenticated)\r\nconst PublicRoute = ({ children }) => {\r\n  const { isAuthenticated, isLoading, getPrimaryRole } = useAuth();\r\n\r\n  if (isLoading) {\r\n    return React.createElement(LoadingSpinner);\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    const primaryRole = getPrimaryRole();\r\n    const dashboardPath = getDashboardPath(primaryRole);\r\n    return React.createElement(Navigate, { to: dashboardPath, replace: true });\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\n// Get dashboard path based on user role\r\nconst getDashboardPath = (role) => {\r\n  switch (role) {\r\n    case 'patient':\r\n      return '/patient-dashboard';\r\n    case 'doctor':\r\n      return '/doctor-dashboard';\r\n    case 'nurse':\r\n      return '/nurse-dashboard';\r\n    case 'admin':\r\n      return '/admin-dashboard';\r\n    default:\r\n      return '/patient-dashboard';\r\n  }\r\n};\r\n\r\n// Unauthorized page component\r\nconst UnauthorizedPage = () => {\r\n  return React.createElement('div', {\r\n    className: 'min-h-screen flex items-center justify-center bg-light'\r\n  }, React.createElement('div', {\r\n    className: 'text-center'\r\n  }, React.createElement('h1', {\r\n    className: 'text-4xl font-bold text-error mb-4'\r\n  }, '403'), React.createElement('h2', {\r\n    className: 'text-2xl font-semibold text-primary mb-4'\r\n  }, 'Access Denied'), React.createElement('p', {\r\n    className: 'text-secondary mb-6'\r\n  }, 'You do not have permission to access this page.'), React.createElement('button', {\r\n    className: 'btn btn-primary',\r\n    onClick: () => window.history.back()\r\n  }, 'Go Back')));\r\n};\r\n\r\n// Main App Routes component\r\nconst AppRoutes = () => {\r\n  return React.createElement(Router, null,\r\n    React.createElement(Routes, null,\r\n      // Public routes\r\n      React.createElement(Route, {\r\n        path: '/',\r\n        element: React.createElement(PublicRoute, null,\r\n          React.createElement(LandingPage)\r\n        )\r\n      }),\r\n      React.createElement(Route, {\r\n        path: '/auth',\r\n        element: React.createElement(PublicRoute, null,\r\n          React.createElement(AuthPage)\r\n        )\r\n      }),\r\n\r\n      // Protected routes with layout\r\n      React.createElement(Route, {\r\n        path: '/dashboard/patient',\r\n        element: React.createElement(ProtectedRoute, { allowedRoles: ['patient'] },\r\n          React.createElement(Layout, null,\r\n            React.createElement(PatientDashboard)\r\n          )\r\n        )\r\n      }),\r\n      React.createElement(Route, {\r\n        path: '/dashboard/doctor',\r\n        element: React.createElement(ProtectedRoute, { allowedRoles: ['doctor'] },\r\n          React.createElement(Layout, null,\r\n            React.createElement(DoctorDashboard)\r\n          )\r\n        )\r\n      }),\r\n      React.createElement(Route, {\r\n        path: '/dashboard/nurse',\r\n        element: React.createElement(ProtectedRoute, { allowedRoles: ['nurse'] },\r\n          React.createElement(Layout, null,\r\n            React.createElement(NurseDashboard)\r\n          )\r\n        )\r\n      }),\r\n      React.createElement(Route, {\r\n        path: '/dashboard/admin',\r\n        element: React.createElement(ProtectedRoute, { allowedRoles: ['admin'] },\r\n          React.createElement(Layout, null,\r\n            React.createElement(AdminDashboard)\r\n          )\r\n        )\r\n      }),\r\n\r\n      // Unauthorized page\r\n      React.createElement(Route, {\r\n        path: '/unauthorized',\r\n        element: React.createElement(UnauthorizedPage)\r\n      }),\r\n\r\n      // Catch all route - redirect to home\r\n      React.createElement(Route, {\r\n        path: '*',\r\n        element: React.createElement(Navigate, { to: '/', replace: true })\r\n      })\r\n    )\r\n  );\r\n};\r\n\r\n// Main App component\r\nconst App = () => {\r\n  return React.createElement(AuthProvider, null,\r\n    React.createElement(AppRoutes)\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}