{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\HopewellClinic\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport LandingPage from './components/LandingPage';\nimport AuthPage from './components/AuthPage';\nimport PatientDashboard from './components/PatientDashboard';\nimport LoadingSpinner from './components/LoadingSpinner';\n\n// Import the existing API functions\nimport { appointmentsAPI, servicesAPI, patientsAPI } from './services/api';\n\n// Protected Route component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = []\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isLoading,\n    hasAnyRole\n  } = useAuth();\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/auth\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (allowedRoles.length > 0 && !hasAnyRole(allowedRoles)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n// Dashboard wrapper component that handles data loading\n_s(ProtectedRoute, \"QRsE/tUD7olIanpaPmCviy1w10g=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nconst DashboardWrapper = ({\n  children,\n  user\n}) => {\n  _s2();\n  const [appointments, setAppointments] = React.useState([]);\n  const [services, setServices] = React.useState([]);\n  const [doctors, setDoctors] = React.useState([]);\n  const [availableSlots, setAvailableSlots] = React.useState([]);\n  const [patientId, setPatientId] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [isBooking, setIsBooking] = React.useState(false);\n  const [bookingError, setBookingError] = React.useState('');\n  const loadDashboardData = async () => {\n    try {\n      setIsLoading(true);\n\n      // Get the Patient ID from the ApplicationUser ID\n      const patient = await patientsAPI.getByUserId(user.id);\n      setPatientId(patient.id);\n      const [appointmentsData, servicesData] = await Promise.all([appointmentsAPI.getByPatient(patient.id), servicesAPI.getAll()]);\n      setAppointments(appointmentsData);\n      setServices(servicesData);\n    } catch (error) {\n      console.error('Error loading dashboard data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const loadAvailableSlots = async date => {\n    try {\n      const slots = await appointmentsAPI.getAvailable(date);\n      setAvailableSlots(slots);\n    } catch (error) {\n      console.error('Error loading available slots:', error);\n      setAvailableSlots([]);\n    }\n  };\n  const handleBookAppointment = async bookingData => {\n    try {\n      setIsBooking(true);\n      setBookingError('');\n\n      // Calculate end time based on service duration\n      const selectedService = services.find(s => s.id === bookingData.serviceId);\n\n      // Ensure startTime is in HH:mm:ss format\n      const startTimeFormatted = bookingData.startTime.includes(':') && bookingData.startTime.split(':').length === 2 ? bookingData.startTime + ':00' : bookingData.startTime;\n      const startTime = new Date(`2000-01-01T${startTimeFormatted}`);\n      const endTime = new Date(startTime.getTime() + ((selectedService === null || selectedService === void 0 ? void 0 : selectedService.durationMinutes) || 30) * 60000);\n      const endTimeString = endTime.toTimeString().slice(0, 8); // Format as HH:mm:ss\n\n      await appointmentsAPI.create({\n        patientId: patientId,\n        serviceId: bookingData.serviceId,\n        appointmentDate: bookingData.appointmentDate,\n        startTime: startTimeFormatted,\n        endTime: endTimeString,\n        notes: bookingData.notes || ''\n      });\n\n      // Refresh appointments\n      await loadDashboardData();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error booking appointment:', error);\n      setBookingError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || 'Failed to book appointment');\n    } finally {\n      setIsBooking(false);\n    }\n  };\n  React.useEffect(() => {\n    loadDashboardData();\n  }, [user.id]);\n\n  // Call children as a function with props\n  return children({\n    user,\n    appointments,\n    services,\n    availableSlots,\n    isLoading,\n    isBooking,\n    bookingError,\n    onBookAppointment: handleBookAppointment,\n    onLoadAvailableSlots: loadAvailableSlots\n  });\n};\n\n// Main App Routes component\n_s2(DashboardWrapper, \"QjIZ9+KrVBr9O7c8AGMnUuNJ29A=\");\n_c2 = DashboardWrapper;\nconst AppRoutes = () => {\n  _s3();\n  const {\n    isAuthenticated,\n    user,\n    login,\n    register,\n    logout,\n    isLoading,\n    error,\n    clearError\n  } = useAuth();\n  const handleLogin = async (email, password) => {\n    try {\n      await login({\n        email,\n        password\n      });\n    } catch (err) {\n      // Error is handled by AuthContext\n    }\n  };\n  const handleRegister = async userData => {\n    try {\n      await register(userData);\n    } catch (err) {\n      // Error is handled by AuthContext\n    }\n  };\n  const handleLogout = () => {\n    logout();\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/auth\",\n      element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/patient-dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AuthPage, {\n        onLogin: handleLogin,\n        onRegister: handleRegister,\n        isLoading: isLoading,\n        error: error,\n        clearError: clearError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/patient-dashboard\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        allowedRoles: ['patient'],\n        children: /*#__PURE__*/_jsxDEV(DashboardWrapper, {\n          user: user,\n          children: props => /*#__PURE__*/_jsxDEV(PatientDashboard, {\n            ...props,\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/unauthorized\",\n      element: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-screen flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-foreground mb-4\",\n            children: \"Unauthorized\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted-foreground mb-4\",\n            children: \"You don't have permission to access this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90\",\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App component\n_s3(AppRoutes, \"GaGKisbCmmD5CAA51vWhAmj0u90=\", false, function () {\n  return [useAuth];\n});\n_c3 = AppRoutes;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"DashboardWrapper\");\n$RefreshReg$(_c3, \"AppRoutes\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","AuthProvider","useAuth","LandingPage","AuthPage","PatientDashboard","LoadingSpinner","appointmentsAPI","servicesAPI","patientsAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","allowedRoles","_s","isAuthenticated","isLoading","hasAnyRole","className","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","length","_c","DashboardWrapper","user","_s2","appointments","setAppointments","useState","services","setServices","doctors","setDoctors","availableSlots","setAvailableSlots","patientId","setPatientId","setIsLoading","isBooking","setIsBooking","bookingError","setBookingError","loadDashboardData","patient","getByUserId","id","appointmentsData","servicesData","Promise","all","getByPatient","getAll","error","console","loadAvailableSlots","date","slots","getAvailable","handleBookAppointment","bookingData","selectedService","find","s","serviceId","startTimeFormatted","startTime","includes","split","Date","endTime","getTime","durationMinutes","endTimeString","toTimeString","slice","create","appointmentDate","notes","_error$response","_error$response$data","response","data","message","useEffect","onBookAppointment","onLoadAvailableSlots","_c2","AppRoutes","_s3","login","register","logout","clearError","handleLogin","email","password","err","handleRegister","userData","handleLogout","path","element","onLogin","onRegister","props","onLogout","onClick","_c3","App","_c4","$RefreshReg$"],"sources":["C:/Project/HopewellClinic/src/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\r\nimport LandingPage from './components/LandingPage';\r\nimport AuthPage from './components/AuthPage';\r\nimport PatientDashboard from './components/PatientDashboard';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\n\r\n// Import the existing API functions\r\nimport { appointmentsAPI, servicesAPI, patientsAPI } from './services/api';\r\n\r\n// Protected Route component\r\nconst ProtectedRoute: React.FC<{ \r\n  children: React.ReactNode; \r\n  allowedRoles?: string[] \r\n}> = ({ children, allowedRoles = [] }) => {\r\n  const { isAuthenticated, isLoading, hasAnyRole } = useAuth();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/auth\" replace />;\r\n  }\r\n\r\n  if (allowedRoles.length > 0 && !hasAnyRole(allowedRoles)) {\r\n    return <Navigate to=\"/unauthorized\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\n// Dashboard wrapper component that handles data loading\r\nconst DashboardWrapper: React.FC<{ \r\n  children: (props: any) => React.ReactNode;\r\n  user: any;\r\n}> = ({ children, user }) => {\r\n  const [appointments, setAppointments] = React.useState([]);\r\n  const [services, setServices] = React.useState([]);\r\n  const [doctors, setDoctors] = React.useState([]);\r\n  const [availableSlots, setAvailableSlots] = React.useState([]);\r\n  const [patientId, setPatientId] = React.useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [isBooking, setIsBooking] = React.useState(false);\r\n  const [bookingError, setBookingError] = React.useState('');\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      // Get the Patient ID from the ApplicationUser ID\r\n      const patient = await patientsAPI.getByUserId(user.id);\r\n      setPatientId(patient.id);\r\n      \r\n      const [appointmentsData, servicesData] = await Promise.all([\r\n        appointmentsAPI.getByPatient(patient.id),\r\n        servicesAPI.getAll()\r\n      ]);\r\n      setAppointments(appointmentsData);\r\n      setServices(servicesData);\r\n    } catch (error) {\r\n      console.error('Error loading dashboard data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadAvailableSlots = async (date: string) => {\r\n    try {\r\n      const slots = await appointmentsAPI.getAvailable(date);\r\n      setAvailableSlots(slots);\r\n    } catch (error) {\r\n      console.error('Error loading available slots:', error);\r\n      setAvailableSlots([]);\r\n    }\r\n  };\r\n\r\n  const handleBookAppointment = async (bookingData: any) => {\r\n    try {\r\n      setIsBooking(true);\r\n      setBookingError('');\r\n      \r\n      // Calculate end time based on service duration\r\n      const selectedService = services.find((s: any) => s.id === bookingData.serviceId) as any;\r\n      \r\n      // Ensure startTime is in HH:mm:ss format\r\n      const startTimeFormatted = bookingData.startTime.includes(':') && bookingData.startTime.split(':').length === 2 \r\n        ? bookingData.startTime + ':00' \r\n        : bookingData.startTime;\r\n      \r\n      const startTime = new Date(`2000-01-01T${startTimeFormatted}`);\r\n      const endTime = new Date(startTime.getTime() + (selectedService?.durationMinutes || 30) * 60000);\r\n      \r\n      const endTimeString = endTime.toTimeString().slice(0, 8); // Format as HH:mm:ss\r\n      \r\n      await appointmentsAPI.create({\r\n        patientId: patientId,\r\n        serviceId: bookingData.serviceId,\r\n        appointmentDate: bookingData.appointmentDate,\r\n        startTime: startTimeFormatted,\r\n        endTime: endTimeString,\r\n        notes: bookingData.notes || ''\r\n      });\r\n\r\n      // Refresh appointments\r\n      await loadDashboardData();\r\n    } catch (error: any) {\r\n      console.error('Error booking appointment:', error);\r\n      setBookingError(error.response?.data?.error || error.message || 'Failed to book appointment');\r\n    } finally {\r\n      setIsBooking(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    loadDashboardData();\r\n  }, [user.id]);\r\n\r\n  // Call children as a function with props\r\n  return children({\r\n    user,\r\n    appointments,\r\n    services,\r\n    availableSlots,\r\n    isLoading,\r\n    isBooking,\r\n    bookingError,\r\n    onBookAppointment: handleBookAppointment,\r\n    onLoadAvailableSlots: loadAvailableSlots\r\n  });\r\n};\r\n\r\n// Main App Routes component\r\nconst AppRoutes: React.FC = () => {\r\n  const { isAuthenticated, user, login, register, logout, isLoading, error, clearError } = useAuth();\r\n\r\n  const handleLogin = async (email: string, password: string) => {\r\n    try {\r\n      await login({ email, password });\r\n    } catch (err) {\r\n      // Error is handled by AuthContext\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (userData: any) => {\r\n    try {\r\n      await register(userData);\r\n    } catch (err) {\r\n      // Error is handled by AuthContext\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Routes>\r\n      {/* Public Routes */}\r\n      <Route path=\"/\" element={<LandingPage />} />\r\n      <Route \r\n        path=\"/auth\" \r\n        element={\r\n          isAuthenticated ? (\r\n            <Navigate to=\"/patient-dashboard\" replace />\r\n          ) : (\r\n            <AuthPage\r\n              onLogin={handleLogin}\r\n              onRegister={handleRegister}\r\n              isLoading={isLoading}\r\n              error={error}\r\n              clearError={clearError}\r\n            />\r\n          )\r\n        } \r\n      />\r\n\r\n      {/* Protected Routes */}\r\n      <Route\r\n        path=\"/patient-dashboard\"\r\n        element={\r\n          <ProtectedRoute allowedRoles={['patient']}>\r\n            <DashboardWrapper user={user}>\r\n              {(props) => <PatientDashboard {...props} onLogout={handleLogout} />}\r\n            </DashboardWrapper>\r\n          </ProtectedRoute>\r\n        }\r\n      />\r\n\r\n      {/* Fallback Routes */}\r\n      <Route path=\"/unauthorized\" element={\r\n        <div className=\"min-h-screen flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold text-foreground mb-4\">Unauthorized</h1>\r\n            <p className=\"text-muted-foreground mb-4\">You don't have permission to access this page.</p>\r\n            <button \r\n              onClick={handleLogout}\r\n              className=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90\"\r\n            >\r\n              Sign Out\r\n            </button>\r\n          </div>\r\n        </div>\r\n      } />\r\n      \r\n      <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\n// Main App component\r\nconst App: React.FC = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <AppRoutes />\r\n        </div>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}