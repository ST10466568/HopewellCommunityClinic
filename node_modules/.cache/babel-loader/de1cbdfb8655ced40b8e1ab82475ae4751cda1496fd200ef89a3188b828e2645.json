{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { appointmentsAPI, servicesAPI } from '../services/api';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport Modal from '../components/Modal';\nimport FormSelect from '../components/forms/FormSelect';\nimport FormInput from '../components/forms/FormInput';\nimport FormTextarea from '../components/forms/FormTextarea';\nconst PatientDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [appointments, setAppointments] = useState([]);\n  const [services, setServices] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showBookingModal, setShowBookingModal] = useState(false);\n  const [bookingData, setBookingData] = useState({\n    serviceId: '',\n    appointmentDate: '',\n    startTime: '',\n    notes: ''\n  });\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [isBooking, setIsBooking] = useState(false);\n  const [bookingError, setBookingError] = useState('');\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n  const loadDashboardData = async () => {\n    try {\n      setIsLoading(true);\n      const [appointmentsData, servicesData] = await Promise.all([appointmentsAPI.getByPatient(user.id), servicesAPI.getAll()]);\n      setAppointments(appointmentsData);\n      setServices(servicesData);\n    } catch (error) {\n      console.error('Error loading dashboard data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleBookingInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBookingData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setBookingError('');\n\n    // Load available slots when date is selected\n    if (name === 'appointmentDate' && value) {\n      loadAvailableSlots(value);\n    }\n  };\n  const loadAvailableSlots = async date => {\n    try {\n      const slots = await appointmentsAPI.getAvailable(date);\n      setAvailableSlots(slots);\n    } catch (error) {\n      console.error('Error loading available slots:', error);\n    }\n  };\n  const handleBookAppointment = async e => {\n    e.preventDefault();\n    if (!bookingData.serviceId || !bookingData.appointmentDate || !bookingData.startTime) {\n      setBookingError('Please fill in all required fields');\n      return;\n    }\n    setIsBooking(true);\n    setBookingError('');\n    try {\n      // Calculate end time based on service duration\n      const selectedService = services.find(s => s.id === bookingData.serviceId);\n\n      // Ensure startTime is in HH:mm:ss format\n      const startTimeFormatted = bookingData.startTime.includes(':') && bookingData.startTime.split(':').length === 2 ? bookingData.startTime + ':00' : bookingData.startTime;\n      const startTime = new Date(`2000-01-01T${startTimeFormatted}`);\n      const endTime = new Date(startTime.getTime() + ((selectedService === null || selectedService === void 0 ? void 0 : selectedService.durationMinutes) || 30) * 60000);\n      const endTimeString = endTime.toTimeString().slice(0, 8); // Format as HH:mm:ss\n\n      await appointmentsAPI.create({\n        patientId: user.id,\n        serviceId: bookingData.serviceId,\n        appointmentDate: bookingData.appointmentDate,\n        startTime: startTimeFormatted,\n        endTime: endTimeString,\n        notes: bookingData.notes || ''\n      });\n\n      // Refresh appointments\n      await loadDashboardData();\n\n      // Close modal and reset form\n      setShowBookingModal(false);\n      setBookingData({\n        serviceId: '',\n        appointmentDate: '',\n        startTime: '',\n        notes: ''\n      });\n      setAvailableSlots([]);\n      alert('Appointment booked successfully!');\n    } catch (error) {\n      setBookingError(error.error || error.message || 'Failed to book appointment');\n    } finally {\n      setIsBooking(false);\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    if (!confirm('Are you sure you want to cancel this appointment?')) {\n      return;\n    }\n    try {\n      await appointmentsAPI.delete(appointmentId);\n      await loadDashboardData();\n      alert('Appointment cancelled successfully!');\n    } catch (error) {\n      alert('Failed to cancel appointment: ' + (error.error || error.message));\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const formatTime = timeString => {\n    return new Date(`2000-01-01T${timeString}`).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'confirmed':\n        return 'text-success';\n      case 'scheduled':\n        return 'text-primary';\n      case 'cancelled':\n        return 'text-error';\n      case 'completed':\n        return 'text-secondary';\n      default:\n        return 'text-secondary';\n    }\n  };\n  const upcomingAppointments = appointments.filter(apt => new Date(apt.appointmentDate) >= new Date() && apt.status !== 'cancelled' && apt.status !== 'completed');\n  const pastAppointments = appointments.filter(apt => new Date(apt.appointmentDate) < new Date() || apt.status === 'cancelled' || apt.status === 'completed');\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner, {\n      size: 'lg',\n      text: 'Loading your dashboard...'\n    });\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'space-y-6'\n  },\n  /*#__PURE__*/\n  // Welcome section\n  React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6'\n  }, /*#__PURE__*/React.createElement('h1', {\n    className: 'text-3xl font-bold text-primary mb-2'\n  }, `Welcome back, ${user.firstName}!`), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Here\\'s an overview of your appointments and health information.')),\n  /*#__PURE__*/\n  // Quick stats\n  React.createElement('div', {\n    className: 'grid grid-cols-1 md:grid-cols-3 gap-6'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-primary mb-2'\n  }, upcomingAppointments.length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Upcoming Appointments')), /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-success mb-2'\n  }, pastAppointments.filter(apt => apt.status === 'completed').length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Completed Visits')), /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-warning mb-2'\n  }, appointments.length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Total Appointments'))),\n  /*#__PURE__*/\n  // Book new appointment button\n  React.createElement('div', {\n    className: 'text-center'\n  }, /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-primary btn-lg',\n    onClick: () => setShowBookingModal(true)\n  }, 'ðŸ“… Book New Appointment')),\n  /*#__PURE__*/\n  // Upcoming appointments\n  React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'p-6 border-b border-light'\n  }, /*#__PURE__*/React.createElement('h2', {\n    className: 'text-2xl font-semibold text-primary'\n  }, 'Upcoming Appointments')), /*#__PURE__*/React.createElement('div', {\n    className: 'p-6'\n  }, upcomingAppointments.length === 0 ? /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary text-center py-8'\n  }, 'No upcoming appointments. Book one now!') : /*#__PURE__*/React.createElement('div', {\n    className: 'space-y-4'\n  }, upcomingAppointments.map(appointment => {\n    var _appointment$service;\n    return /*#__PURE__*/React.createElement('div', {\n      key: appointment.id,\n      className: 'border border-light rounded-lg p-4 hover:shadow-md transition-shadow'\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'flex flex-col md:flex-row md:items-center md:justify-between gap-4'\n    }, /*#__PURE__*/React.createElement('div', null, /*#__PURE__*/React.createElement('h3', {\n      className: 'text-lg font-semibold text-primary'\n    }, ((_appointment$service = appointment.service) === null || _appointment$service === void 0 ? void 0 : _appointment$service.name) || 'Service'), /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary'\n    }, formatDate(appointment.appointmentDate)), /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary'\n    }, formatTime(appointment.startTime)), appointment.staff && /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary'\n    }, `Dr. ${appointment.staff.firstName} ${appointment.staff.lastName}`)), /*#__PURE__*/React.createElement('div', {\n      className: 'flex flex-col md:items-end gap-2'\n    }, /*#__PURE__*/React.createElement('span', {\n      className: `font-medium capitalize ${getStatusColor(appointment.status)}`\n    }, appointment.status), /*#__PURE__*/React.createElement('button', {\n      className: 'btn btn-danger btn-sm',\n      onClick: () => handleCancelAppointment(appointment.id)\n    }, 'Cancel'))));\n  })))),\n  // Past appointments\n  pastAppointments.length > 0 && /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'p-6 border-b border-light'\n  }, /*#__PURE__*/React.createElement('h2', {\n    className: 'text-2xl font-semibold text-primary'\n  }, 'Appointment History')), /*#__PURE__*/React.createElement('div', {\n    className: 'p-6'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'space-y-4'\n  }, pastAppointments.slice(0, 5).map(appointment => {\n    var _appointment$service2;\n    return /*#__PURE__*/React.createElement('div', {\n      key: appointment.id,\n      className: 'border border-light rounded-lg p-4'\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'flex flex-col md:flex-row md:items-center md:justify-between gap-4'\n    }, /*#__PURE__*/React.createElement('div', null, /*#__PURE__*/React.createElement('h3', {\n      className: 'text-lg font-semibold text-primary'\n    }, ((_appointment$service2 = appointment.service) === null || _appointment$service2 === void 0 ? void 0 : _appointment$service2.name) || 'Service'), /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary'\n    }, formatDate(appointment.appointmentDate)), /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary'\n    }, formatTime(appointment.startTime))), /*#__PURE__*/React.createElement('span', {\n      className: `font-medium capitalize ${getStatusColor(appointment.status)}`\n    }, appointment.status)));\n  })))),\n  /*#__PURE__*/\n  // Booking modal\n  React.createElement(Modal, {\n    isOpen: showBookingModal,\n    onClose: () => setShowBookingModal(false),\n    title: 'Book New Appointment',\n    size: 'lg'\n  }, /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleBookAppointment\n  }, bookingError && /*#__PURE__*/React.createElement('div', {\n    className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\n  }, bookingError), /*#__PURE__*/React.createElement('div', {\n    className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    label: 'Service',\n    name: 'serviceId',\n    value: bookingData.serviceId,\n    onChange: handleBookingInputChange,\n    options: services.map(service => ({\n      value: service.id,\n      label: service.name\n    })),\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Date',\n    name: 'appointmentDate',\n    type: 'date',\n    value: bookingData.appointmentDate,\n    onChange: handleBookingInputChange,\n    required: true,\n    min: new Date().toISOString().split('T')[0]\n  })), bookingData.appointmentDate && availableSlots.length > 0 && /*#__PURE__*/React.createElement(FormSelect, {\n    label: 'Available Time',\n    name: 'startTime',\n    value: bookingData.startTime,\n    onChange: handleBookingInputChange,\n    options: availableSlots.map(slot => ({\n      value: slot.startTime,\n      label: formatTime(slot.startTime)\n    })),\n    required: true\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: 'Notes (Optional)',\n    name: 'notes',\n    value: bookingData.notes,\n    onChange: handleBookingInputChange,\n    placeholder: 'Any additional information or concerns...'\n  }), /*#__PURE__*/React.createElement('div', {\n    className: 'flex gap-4 justify-end mt-6'\n  }, /*#__PURE__*/React.createElement('button', {\n    type: 'button',\n    className: 'btn btn-secondary',\n    onClick: () => setShowBookingModal(false)\n  }, 'Cancel'), /*#__PURE__*/React.createElement('button', {\n    type: 'submit',\n    className: 'btn btn-primary',\n    disabled: isBooking\n  }, isBooking && /*#__PURE__*/React.createElement('div', {\n    className: 'loading-spinner w-4 h-4 mr-2'\n  }), isBooking ? 'Booking...' : 'Book Appointment')))));\n};\n_s(PatientDashboard, \"SVemsVhI2/5XsPmXh6Aj3nZHgRQ=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","appointmentsAPI","servicesAPI","LoadingSpinner","Modal","FormSelect","FormInput","FormTextarea","PatientDashboard","_s","user","appointments","setAppointments","services","setServices","isLoading","setIsLoading","showBookingModal","setShowBookingModal","bookingData","setBookingData","serviceId","appointmentDate","startTime","notes","availableSlots","setAvailableSlots","isBooking","setIsBooking","bookingError","setBookingError","loadDashboardData","appointmentsData","servicesData","Promise","all","getByPatient","id","getAll","error","console","handleBookingInputChange","e","name","value","target","prev","loadAvailableSlots","date","slots","getAvailable","handleBookAppointment","preventDefault","selectedService","find","s","startTimeFormatted","includes","split","length","Date","endTime","getTime","durationMinutes","endTimeString","toTimeString","slice","create","patientId","alert","message","handleCancelAppointment","appointmentId","confirm","delete","formatDate","dateString","toLocaleDateString","weekday","year","month","day","formatTime","timeString","toLocaleTimeString","hour","minute","hour12","getStatusColor","status","toLowerCase","upcomingAppointments","filter","apt","pastAppointments","createElement","size","text","className","firstName","onClick","map","appointment","_appointment$service","key","service","staff","lastName","_appointment$service2","isOpen","onClose","title","onSubmit","label","onChange","options","required","type","min","toISOString","slot","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Project/HopewellClinic/src/pages/PatientDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { appointmentsAPI, servicesAPI } from '../services/api';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport Modal from '../components/Modal';\r\nimport FormSelect from '../components/forms/FormSelect';\r\nimport FormInput from '../components/forms/FormInput';\r\nimport FormTextarea from '../components/forms/FormTextarea';\r\n\r\nconst PatientDashboard = () => {\r\n  const { user } = useAuth();\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showBookingModal, setShowBookingModal] = useState(false);\r\n  const [bookingData, setBookingData] = useState({\r\n    serviceId: '',\r\n    appointmentDate: '',\r\n    startTime: '',\r\n    notes: ''\r\n  });\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n  const [isBooking, setIsBooking] = useState(false);\r\n  const [bookingError, setBookingError] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const [appointmentsData, servicesData] = await Promise.all([\r\n        appointmentsAPI.getByPatient(user.id),\r\n        servicesAPI.getAll()\r\n      ]);\r\n      setAppointments(appointmentsData);\r\n      setServices(servicesData);\r\n    } catch (error) {\r\n      console.error('Error loading dashboard data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBookingInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setBookingData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    setBookingError('');\r\n\r\n    // Load available slots when date is selected\r\n    if (name === 'appointmentDate' && value) {\r\n      loadAvailableSlots(value);\r\n    }\r\n  };\r\n\r\n  const loadAvailableSlots = async (date) => {\r\n    try {\r\n      const slots = await appointmentsAPI.getAvailable(date);\r\n      setAvailableSlots(slots);\r\n    } catch (error) {\r\n      console.error('Error loading available slots:', error);\r\n    }\r\n  };\r\n\r\n  const handleBookAppointment = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!bookingData.serviceId || !bookingData.appointmentDate || !bookingData.startTime) {\r\n      setBookingError('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    setIsBooking(true);\r\n    setBookingError('');\r\n\r\n    try {\r\n      // Calculate end time based on service duration\r\n      const selectedService = services.find(s => s.id === bookingData.serviceId);\r\n      \r\n      // Ensure startTime is in HH:mm:ss format\r\n      const startTimeFormatted = bookingData.startTime.includes(':') && bookingData.startTime.split(':').length === 2 \r\n        ? bookingData.startTime + ':00' \r\n        : bookingData.startTime;\r\n      \r\n      const startTime = new Date(`2000-01-01T${startTimeFormatted}`);\r\n      const endTime = new Date(startTime.getTime() + (selectedService?.durationMinutes || 30) * 60000);\r\n      \r\n      const endTimeString = endTime.toTimeString().slice(0, 8); // Format as HH:mm:ss\r\n      \r\n      await appointmentsAPI.create({\r\n        patientId: user.id,\r\n        serviceId: bookingData.serviceId,\r\n        appointmentDate: bookingData.appointmentDate,\r\n        startTime: startTimeFormatted,\r\n        endTime: endTimeString,\r\n        notes: bookingData.notes || ''\r\n      });\r\n\r\n      // Refresh appointments\r\n      await loadDashboardData();\r\n      \r\n      // Close modal and reset form\r\n      setShowBookingModal(false);\r\n      setBookingData({\r\n        serviceId: '',\r\n        appointmentDate: '',\r\n        startTime: '',\r\n        notes: ''\r\n      });\r\n      setAvailableSlots([]);\r\n      \r\n      alert('Appointment booked successfully!');\r\n    } catch (error) {\r\n      setBookingError(error.error || error.message || 'Failed to book appointment');\r\n    } finally {\r\n      setIsBooking(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelAppointment = async (appointmentId) => {\r\n    if (!confirm('Are you sure you want to cancel this appointment?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await appointmentsAPI.delete(appointmentId);\r\n      await loadDashboardData();\r\n      alert('Appointment cancelled successfully!');\r\n    } catch (error) {\r\n      alert('Failed to cancel appointment: ' + (error.error || error.message));\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatTime = (timeString) => {\r\n    return new Date(`2000-01-01T${timeString}`).toLocaleTimeString('en-US', {\r\n      hour: 'numeric',\r\n      minute: '2-digit',\r\n      hour12: true\r\n    });\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'confirmed': return 'text-success';\r\n      case 'scheduled': return 'text-primary';\r\n      case 'cancelled': return 'text-error';\r\n      case 'completed': return 'text-secondary';\r\n      default: return 'text-secondary';\r\n    }\r\n  };\r\n\r\n  const upcomingAppointments = appointments.filter(apt => \r\n    new Date(apt.appointmentDate) >= new Date() && \r\n    apt.status !== 'cancelled' && \r\n    apt.status !== 'completed'\r\n  );\r\n\r\n  const pastAppointments = appointments.filter(apt => \r\n    new Date(apt.appointmentDate) < new Date() || \r\n    apt.status === 'cancelled' || \r\n    apt.status === 'completed'\r\n  );\r\n\r\n  if (isLoading) {\r\n    return React.createElement(LoadingSpinner, {\r\n      size: 'lg',\r\n      text: 'Loading your dashboard...'\r\n    });\r\n  }\r\n\r\n  return React.createElement('div', {\r\n    className: 'space-y-6'\r\n  },\r\n    // Welcome section\r\n    React.createElement('div', {\r\n      className: 'bg-white rounded-lg shadow-md p-6'\r\n    },\r\n      React.createElement('h1', {\r\n        className: 'text-3xl font-bold text-primary mb-2'\r\n      }, `Welcome back, ${user.firstName}!`),\r\n      React.createElement('p', {\r\n        className: 'text-secondary'\r\n      }, 'Here\\'s an overview of your appointments and health information.')\r\n    ),\r\n\r\n    // Quick stats\r\n    React.createElement('div', {\r\n      className: 'grid grid-cols-1 md:grid-cols-3 gap-6'\r\n    },\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-primary mb-2'\r\n        }, upcomingAppointments.length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Upcoming Appointments')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-success mb-2'\r\n        }, pastAppointments.filter(apt => apt.status === 'completed').length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Completed Visits')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-warning mb-2'\r\n        }, appointments.length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Total Appointments')\r\n      )\r\n    ),\r\n\r\n    // Book new appointment button\r\n    React.createElement('div', {\r\n      className: 'text-center'\r\n    },\r\n      React.createElement('button', {\r\n        className: 'btn btn-primary btn-lg',\r\n        onClick: () => setShowBookingModal(true)\r\n      }, 'ðŸ“… Book New Appointment')\r\n    ),\r\n\r\n    // Upcoming appointments\r\n    React.createElement('div', {\r\n      className: 'bg-white rounded-lg shadow-md'\r\n    },\r\n      React.createElement('div', {\r\n        className: 'p-6 border-b border-light'\r\n      },\r\n        React.createElement('h2', {\r\n          className: 'text-2xl font-semibold text-primary'\r\n        }, 'Upcoming Appointments')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'p-6'\r\n      },\r\n        upcomingAppointments.length === 0 ? \r\n          React.createElement('p', {\r\n            className: 'text-secondary text-center py-8'\r\n          }, 'No upcoming appointments. Book one now!') :\r\n          React.createElement('div', {\r\n            className: 'space-y-4'\r\n          },\r\n            upcomingAppointments.map(appointment =>\r\n              React.createElement('div', {\r\n                key: appointment.id,\r\n                className: 'border border-light rounded-lg p-4 hover:shadow-md transition-shadow'\r\n              },\r\n                React.createElement('div', {\r\n                  className: 'flex flex-col md:flex-row md:items-center md:justify-between gap-4'\r\n                },\r\n                  React.createElement('div', null,\r\n                    React.createElement('h3', {\r\n                      className: 'text-lg font-semibold text-primary'\r\n                    }, appointment.service?.name || 'Service'),\r\n                    React.createElement('p', {\r\n                      className: 'text-secondary'\r\n                    }, formatDate(appointment.appointmentDate)),\r\n                    React.createElement('p', {\r\n                      className: 'text-secondary'\r\n                    }, formatTime(appointment.startTime)),\r\n                    appointment.staff && React.createElement('p', {\r\n                      className: 'text-secondary'\r\n                    }, `Dr. ${appointment.staff.firstName} ${appointment.staff.lastName}`)\r\n                  ),\r\n                  React.createElement('div', {\r\n                    className: 'flex flex-col md:items-end gap-2'\r\n                  },\r\n                    React.createElement('span', {\r\n                      className: `font-medium capitalize ${getStatusColor(appointment.status)}`\r\n                    }, appointment.status),\r\n                    React.createElement('button', {\r\n                      className: 'btn btn-danger btn-sm',\r\n                      onClick: () => handleCancelAppointment(appointment.id)\r\n                    }, 'Cancel')\r\n                  )\r\n                )\r\n              )\r\n            )\r\n          )\r\n      )\r\n    ),\r\n\r\n    // Past appointments\r\n    pastAppointments.length > 0 && React.createElement('div', {\r\n      className: 'bg-white rounded-lg shadow-md'\r\n    },\r\n      React.createElement('div', {\r\n        className: 'p-6 border-b border-light'\r\n      },\r\n        React.createElement('h2', {\r\n          className: 'text-2xl font-semibold text-primary'\r\n        }, 'Appointment History')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'p-6'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'space-y-4'\r\n        },\r\n          pastAppointments.slice(0, 5).map(appointment =>\r\n            React.createElement('div', {\r\n              key: appointment.id,\r\n              className: 'border border-light rounded-lg p-4'\r\n            },\r\n              React.createElement('div', {\r\n                className: 'flex flex-col md:flex-row md:items-center md:justify-between gap-4'\r\n              },\r\n                React.createElement('div', null,\r\n                  React.createElement('h3', {\r\n                    className: 'text-lg font-semibold text-primary'\r\n                  }, appointment.service?.name || 'Service'),\r\n                  React.createElement('p', {\r\n                    className: 'text-secondary'\r\n                  }, formatDate(appointment.appointmentDate)),\r\n                  React.createElement('p', {\r\n                    className: 'text-secondary'\r\n                  }, formatTime(appointment.startTime))\r\n                ),\r\n                React.createElement('span', {\r\n                  className: `font-medium capitalize ${getStatusColor(appointment.status)}`\r\n                }, appointment.status)\r\n              )\r\n            )\r\n          )\r\n        )\r\n      )\r\n    ),\r\n\r\n    // Booking modal\r\n    React.createElement(Modal, {\r\n      isOpen: showBookingModal,\r\n      onClose: () => setShowBookingModal(false),\r\n      title: 'Book New Appointment',\r\n      size: 'lg'\r\n    },\r\n      React.createElement('form', {\r\n        onSubmit: handleBookAppointment\r\n      },\r\n        bookingError && React.createElement('div', {\r\n          className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\r\n        }, bookingError),\r\n\r\n        React.createElement('div', {\r\n          className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\r\n        },\r\n          React.createElement(FormSelect, {\r\n            label: 'Service',\r\n            name: 'serviceId',\r\n            value: bookingData.serviceId,\r\n            onChange: handleBookingInputChange,\r\n            options: services.map(service => ({\r\n              value: service.id,\r\n              label: service.name\r\n            })),\r\n            required: true\r\n          }),\r\n          React.createElement(FormInput, {\r\n            label: 'Date',\r\n            name: 'appointmentDate',\r\n            type: 'date',\r\n            value: bookingData.appointmentDate,\r\n            onChange: handleBookingInputChange,\r\n            required: true,\r\n            min: new Date().toISOString().split('T')[0]\r\n          })\r\n        ),\r\n\r\n        bookingData.appointmentDate && availableSlots.length > 0 && React.createElement(FormSelect, {\r\n          label: 'Available Time',\r\n          name: 'startTime',\r\n          value: bookingData.startTime,\r\n          onChange: handleBookingInputChange,\r\n          options: availableSlots.map(slot => ({\r\n            value: slot.startTime,\r\n            label: formatTime(slot.startTime)\r\n          })),\r\n          required: true\r\n        }),\r\n\r\n        React.createElement(FormTextarea, {\r\n          label: 'Notes (Optional)',\r\n          name: 'notes',\r\n          value: bookingData.notes,\r\n          onChange: handleBookingInputChange,\r\n          placeholder: 'Any additional information or concerns...'\r\n        }),\r\n\r\n        React.createElement('div', {\r\n          className: 'flex gap-4 justify-end mt-6'\r\n        },\r\n          React.createElement('button', {\r\n            type: 'button',\r\n            className: 'btn btn-secondary',\r\n            onClick: () => setShowBookingModal(false)\r\n          }, 'Cancel'),\r\n          React.createElement('button', {\r\n            type: 'submit',\r\n            className: 'btn btn-primary',\r\n            disabled: isBooking\r\n          },\r\n            isBooking && React.createElement('div', {\r\n              className: 'loading-spinner w-4 h-4 mr-2'\r\n            }),\r\n            isBooking ? 'Booking...' : 'Book Appointment'\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}