{"ast":null,"code":"import _objectSpread from\"C:/Project/HopewellClinic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{Calendar,Clock,Plus,User,Heart,LogOut,Bell,FileText,CheckCircle,XCircle,AlertCircle}from'lucide-react';import{Button}from'./ui/button';import{Card,CardContent,CardDescription,CardHeader,CardTitle}from'./ui/card';import{Input}from'./ui/input';import{Label}from'./ui/label';import{Badge}from'./ui/badge';import{cn}from'../lib/utils';import BookingWizard from'./BookingWizard';import{appointmentsAPI}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PatientDashboard=_ref=>{let{user,appointments,services,availableSlots,doctors,patientId,isLoading,isBooking,bookingError,error,onBookAppointment,onUpdateAppointment,onCancelAppointment,onLogout,onLoadAvailableSlots,onRefreshAppointments}=_ref;const[showBookingWizard,setShowBookingWizard]=useState(false);const[showEditModal,setShowEditModal]=useState(false);const[editingAppointment,setEditingAppointment]=useState(null);const[editData,setEditData]=useState({serviceId:'',staffId:'',appointmentDate:'',startTime:'',notes:''});const[editDoctors,setEditDoctors]=useState([]);const[editTimeSlots,setEditTimeSlots]=useState([]);const[editLoading,setEditLoading]=useState(false);const[editError,setEditError]=useState('');const handleBookingSuccess=async()=>{setShowBookingWizard(false);// Refresh appointments after successful booking\nawait onRefreshAppointments();};const loadEditDoctors=async date=>{if(!date)return;setEditLoading(true);setEditError('');try{const response=await appointmentsAPI.getDoctorsOnDuty(date);setEditDoctors(response.doctors||response||[]);}catch(error){var _error$response,_error$response2,_error$response3;console.error('Error loading doctors for edit:',error);// If API fails, use fallback doctors from the main doctors list\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===500||((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===404){console.log('API failed, using fallback doctors');setEditDoctors(doctors||[]);}else if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)!==401){setEditError('Failed to load available doctors. Using all doctors as fallback.');setEditDoctors(doctors||[]);}}finally{setEditLoading(false);}};const loadEditTimeSlots=async(doctorId,date)=>{if(!doctorId||!date){console.log('loadEditTimeSlots: Missing doctorId or date',{doctorId,date});return;}console.log('loadEditTimeSlots: Loading time slots for',{doctorId,date});setEditLoading(true);setEditError('');try{const response=await appointmentsAPI.getAvailableSlotsByDoctor(doctorId,date);console.log('loadEditTimeSlots: API response',response);// Handle different response formats\nlet slots=[];if(response.availableSlots){slots=response.availableSlots;}else if(Array.isArray(response)){slots=response;}else if(response&&typeof response==='object'){// Try to find any array property\nconst arrayProps=Object.values(response).filter(Array.isArray);if(arrayProps.length>0){slots=arrayProps[0];}}console.log('loadEditTimeSlots: Processed slots',slots);setEditTimeSlots(slots);// If no slots from API, generate some fallback slots\nif(slots.length===0){console.log('No slots from API, generating fallback slots');const fallbackSlots=generateFallbackTimeSlots();setEditTimeSlots(fallbackSlots);}}catch(error){var _error$response4,_error$response5;console.error('Error loading time slots for edit:',error);// Generate fallback slots on any error\nconsole.log('API failed, generating fallback slots');const fallbackSlots=generateFallbackTimeSlots();setEditTimeSlots(fallbackSlots);// Only show error for non-500/404 errors (authentication issues)\nif(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)!==500&&((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.status)!==404){setEditError('Using fallback time slots due to API issues.');}}finally{setEditLoading(false);}};const generateFallbackTimeSlots=()=>{const slots=[];const startHour=9;// 9 AM\nconst endHour=17;// 5 PM\nfor(let hour=startHour;hour<endHour;hour++){for(let minute=0;minute<60;minute+=30){const timeString=\"\".concat(hour.toString().padStart(2,'0'),\":\").concat(minute.toString().padStart(2,'0'),\":00\");slots.push({id:\"fallback-\".concat(timeString),startTime:timeString,endTime:minute===30?\"\".concat((hour+1).toString().padStart(2,'0'),\":00:00\"):\"\".concat(hour.toString().padStart(2,'0'),\":30:00\")});}}return slots;};const handleEditAppointment=async appointment=>{var _appointment$staff,_appointment$staff2;setEditingAppointment(appointment);const appointmentDate=appointment.appointmentDate.split('T')[0];setEditData({serviceId:appointment.service.id,staffId:((_appointment$staff=appointment.staff)===null||_appointment$staff===void 0?void 0:_appointment$staff.id)||'',appointmentDate:appointmentDate,startTime:appointment.startTime,notes:appointment.notes||''});// Load doctors for the appointment date\nawait loadEditDoctors(appointmentDate);// If we have a staff ID, load time slots for that doctor\nif((_appointment$staff2=appointment.staff)!==null&&_appointment$staff2!==void 0&&_appointment$staff2.id){await loadEditTimeSlots(appointment.staff.id,appointmentDate);}setShowEditModal(true);};const handleEditInputChange=async e=>{const{name,value}=e.target;if(name==='appointmentDate'&&value){// Clear the start time and staff when date changes\nsetEditData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value,startTime:'',staffId:''}));setEditTimeSlots([]);// Load doctors for the new date\nawait loadEditDoctors(value);}else if(name==='staffId'&&value){console.log('Doctor changed:',{value,currentDate:editData.appointmentDate});// Clear the start time when doctor changes\nsetEditData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value,startTime:''}));// Load time slots for the selected doctor and date\nif(editData.appointmentDate){await loadEditTimeSlots(value,editData.appointmentDate);}else{console.log('No appointment date available for time slot loading');}}else{// For other fields, just update the state\nsetEditData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));}};const handleUpdateAppointment=async e=>{e.preventDefault();if(!editingAppointment)return;try{await onUpdateAppointment(editingAppointment.id,editData);setShowEditModal(false);setEditingAppointment(null);setEditData({serviceId:'',staffId:'',appointmentDate:'',startTime:'',notes:''});setEditDoctors([]);setEditTimeSlots([]);setEditError('');}catch(error){console.error('Error updating appointment:',error);}};const handleCloseEditModal=()=>{setShowEditModal(false);setEditingAppointment(null);setEditData({serviceId:'',staffId:'',appointmentDate:'',startTime:'',notes:''});setEditDoctors([]);setEditTimeSlots([]);setEditError('');};const handleCancelAppointment=async appointmentId=>{if(!confirm('Are you sure you want to cancel this appointment?')){return;}try{await onCancelAppointment(appointmentId);}catch(error){console.error('Error canceling appointment:',error);}};const getStatusBadge=status=>{const statusConfig={confirmed:{variant:'default',icon:CheckCircle,className:'bg-green-100 text-green-800'},pending:{variant:'secondary',icon:AlertCircle,className:'bg-yellow-100 text-yellow-800'},cancelled:{variant:'destructive',icon:XCircle,className:'bg-red-100 text-red-800'},completed:{variant:'default',icon:CheckCircle,className:'bg-blue-100 text-blue-800'},walkin:{variant:'secondary',icon:Clock,className:'bg-purple-100 text-purple-800'}};const config=statusConfig[status]||statusConfig.pending;const Icon=config.icon;return/*#__PURE__*/_jsxs(Badge,{className:cn('status-badge',config.className),children:[/*#__PURE__*/_jsx(Icon,{className:\"h-3 w-3 mr-1\"}),status.charAt(0).toUpperCase()+status.slice(1)]});};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('en-US',{weekday:'long',year:'numeric',month:'long',day:'numeric'});};const formatTime=timeString=>{return new Date(\"2000-01-01T\".concat(timeString)).toLocaleTimeString('en-US',{hour:'numeric',minute:'2-digit',hour12:true});};const upcomingAppointments=appointments.filter(apt=>new Date(apt.appointmentDate)>=new Date()&&apt.status!=='cancelled');const pastAppointments=appointments.filter(apt=>new Date(apt.appointmentDate)<new Date()||apt.status==='completed');return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-background\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container mx-auto px-4 py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Heart,{className:\"h-8 w-8 text-primary heartbeat\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl font-bold text-foreground\",children:\"Hopewell Clinic\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm font-medium text-foreground\",children:[user.firstName,\" \",user.lastName]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-muted-foreground\",children:user.email})]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"sm\",onClick:onLogout,children:[/*#__PURE__*/_jsx(LogOut,{className:\"h-4 w-4 mr-2\"}),\"Sign Out\"]})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8\",children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"h-5 w-5 text-red-500 mr-2\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-700\",children:error})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"text-3xl font-bold text-foreground mb-2\",children:[\"Welcome back, \",user.firstName,\"!\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted-foreground\",children:\"Manage your appointments and health information\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\",children:[/*#__PURE__*/_jsxs(Card,{className:\"medical-card\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"flex flex-row items-center justify-between space-y-0 pb-2\",children:[/*#__PURE__*/_jsx(CardTitle,{className:\"text-sm font-medium\",children:\"Upcoming Appointments\"}),/*#__PURE__*/_jsx(Calendar,{className:\"h-4 w-4 text-muted-foreground\"})]}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold\",children:upcomingAppointments.length}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-muted-foreground\",children:[\"Next appointment \",upcomingAppointments.length>0?formatDate(upcomingAppointments[0].appointmentDate):'Not scheduled']})]})]}),/*#__PURE__*/_jsxs(Card,{className:\"medical-card\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"flex flex-row items-center justify-between space-y-0 pb-2\",children:[/*#__PURE__*/_jsx(CardTitle,{className:\"text-sm font-medium\",children:\"Total Visits\"}),/*#__PURE__*/_jsx(User,{className:\"h-4 w-4 text-muted-foreground\"})]}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold\",children:pastAppointments.length}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-muted-foreground\",children:\"Completed appointments\"})]})]}),/*#__PURE__*/_jsxs(Card,{className:\"medical-card\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"flex flex-row items-center justify-between space-y-0 pb-2\",children:[/*#__PURE__*/_jsx(CardTitle,{className:\"text-sm font-medium\",children:\"Quick Actions\"}),/*#__PURE__*/_jsx(Bell,{className:\"h-4 w-4 text-muted-foreground\"})]}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Button,{className:\"w-full\",onClick:()=>setShowBookingWizard(true),children:[/*#__PURE__*/_jsx(Plus,{className:\"h-4 w-4 mr-2\"}),\"Book New Appointment\"]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid lg:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(Card,{className:\"medical-card\",children:[/*#__PURE__*/_jsxs(CardHeader,{children:[/*#__PURE__*/_jsxs(CardTitle,{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"h-5 w-5 text-primary\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Upcoming Appointments\"})]}),/*#__PURE__*/_jsx(CardDescription,{children:\"Your scheduled appointments\"})]}),/*#__PURE__*/_jsx(CardContent,{children:upcomingAppointments.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"h-12 w-12 text-muted-foreground mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted-foreground\",children:\"No upcoming appointments\"}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",className:\"mt-4\",onClick:()=>setShowBookingWizard(true),children:[/*#__PURE__*/_jsx(Plus,{className:\"h-4 w-4 mr-2\"}),\"Book Appointment\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:upcomingAppointments.map(appointment=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4 hover:bg-muted/50 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-foreground\",children:appointment.service.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-muted-foreground\",children:[formatDate(appointment.appointmentDate),\" at \",formatTime(appointment.startTime)]})]}),getStatusBadge(appointment.status)]}),appointment.staff&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-muted-foreground mb-2\",children:[\"With \",appointment.staff.firstName,\" \",appointment.staff.lastName]}),appointment.notes&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-muted-foreground\",children:[/*#__PURE__*/_jsx(FileText,{className:\"h-3 w-3 inline mr-1\"}),appointment.notes]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2 mt-3\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:()=>handleEditAppointment(appointment),disabled:appointment.status==='cancelled'||appointment.status==='completed',children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{variant:\"destructive\",size:\"sm\",onClick:()=>handleCancelAppointment(appointment.id),disabled:appointment.status==='cancelled'||appointment.status==='completed',children:\"Cancel\"})]})]},appointment.id))})})]}),/*#__PURE__*/_jsxs(Card,{className:\"medical-card\",children:[/*#__PURE__*/_jsxs(CardHeader,{children:[/*#__PURE__*/_jsxs(CardTitle,{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Clock,{className:\"h-5 w-5 text-primary\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Appointment History\"})]}),/*#__PURE__*/_jsx(CardDescription,{children:\"Your past appointments\"})]}),/*#__PURE__*/_jsx(CardContent,{children:pastAppointments.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(Clock,{className:\"h-12 w-12 text-muted-foreground mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted-foreground\",children:\"No appointment history\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4 max-h-96 overflow-y-auto\",children:pastAppointments.map(appointment=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4 hover:bg-muted/50 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-foreground\",children:appointment.service.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-muted-foreground\",children:[formatDate(appointment.appointmentDate),\" at \",formatTime(appointment.startTime)]})]}),getStatusBadge(appointment.status)]}),appointment.staff&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-muted-foreground\",children:[\"With \",appointment.staff.firstName,\" \",appointment.staff.lastName]})]},appointment.id))})})]})]})]}),/*#__PURE__*/_jsx(BookingWizard,{isOpen:showBookingWizard,onClose:()=>setShowBookingWizard(false),onSuccess:handleBookingSuccess,services:services,patientId:patientId}),showEditModal&&editingAppointment&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(Card,{className:\"w-full max-w-md max-h-[90vh] overflow-hidden flex flex-col\",children:[/*#__PURE__*/_jsxs(CardHeader,{children:[/*#__PURE__*/_jsx(CardTitle,{children:\"Edit Appointment\"}),/*#__PURE__*/_jsx(CardDescription,{children:\"Update your appointment details\"})]}),/*#__PURE__*/_jsx(CardContent,{className:\"overflow-y-auto flex-1\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUpdateAppointment,className:\"space-y-4\",children:[editError&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\",children:editError}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"edit-serviceId\",children:\"Service\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"edit-serviceId\",name:\"serviceId\",value:editData.serviceId,onChange:handleEditInputChange,className:\"w-full h-10 px-3 py-2 border border-input bg-background rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a service\"}),services.map(service=>/*#__PURE__*/_jsxs(\"option\",{value:service.id,children:[service.name,\" (\",service.durationMinutes,\" min)\"]},service.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"edit-staffId\",children:\"Doctor *\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"edit-staffId\",name:\"staffId\",value:editData.staffId,onChange:handleEditInputChange,className:\"w-full h-10 px-3 py-2 border border-input bg-background rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",required:true,disabled:!editData.appointmentDate||editLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a doctor\"}),editDoctors.map(doctor=>/*#__PURE__*/_jsxs(\"option\",{value:doctor.id,children:[\"Dr. \",doctor.firstName,\" \",doctor.lastName]},doctor.id))]}),editLoading&&editData.appointmentDate&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-muted-foreground mt-1\",children:\"Loading doctors...\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"edit-appointmentDate\",children:\"Date\"}),/*#__PURE__*/_jsx(Input,{id:\"edit-appointmentDate\",name:\"appointmentDate\",type:\"date\",value:editData.appointmentDate,onChange:handleEditInputChange,min:new Date().toISOString().split('T')[0],required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"edit-startTime\",children:\"Available Time\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"edit-startTime\",name:\"startTime\",value:editData.startTime,onChange:handleEditInputChange,className:\"w-full h-10 px-3 py-2 border border-input bg-background rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",required:true,disabled:!editData.appointmentDate||!editData.staffId||editLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a time\"}),editTimeSlots.map((slot,index)=>/*#__PURE__*/_jsx(\"option\",{value:slot.startTime,children:formatTime(slot.startTime)},slot.id||\"\".concat(slot.startTime,\"-\").concat(index)))]}),editLoading&&editData.staffId&&editData.appointmentDate&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-muted-foreground mt-1\",children:\"Loading time slots...\"}),!editLoading&&editData.staffId&&editData.appointmentDate&&editTimeSlots.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-muted-foreground mt-1\",children:\"No available time slots for this doctor on this date\"}),process.env.NODE_ENV==='development'&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Debug: \",editTimeSlots.length,\" slots loaded\",editTimeSlots.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[\"First slot: \",JSON.stringify(editTimeSlots[0])]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>{console.log('Manual time slot test');const testSlots=generateFallbackTimeSlots();setEditTimeSlots(testSlots);},className:\"text-blue-500 underline\",children:\"Test Load Slots\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"edit-notes\",children:\"Notes (Optional)\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"edit-notes\",name:\"notes\",value:editData.notes,onChange:handleEditInputChange,className:\"w-full h-20 px-3 py-2 border border-input bg-background rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 resize-none\",placeholder:\"Any specific concerns or requests...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3 pt-4\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",className:\"flex-1\",onClick:handleCloseEditModal,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"flex-1\",disabled:isBooking||editLoading,children:isBooking||editLoading?'Updating...':'Update Appointment'})]})]})})]})})]});};export default PatientDashboard;","map":{"version":3,"names":["React","useState","Calendar","Clock","Plus","User","Heart","LogOut","Bell","FileText","CheckCircle","XCircle","AlertCircle","Button","Card","CardContent","CardDescription","CardHeader","CardTitle","Input","Label","Badge","cn","BookingWizard","appointmentsAPI","jsx","_jsx","jsxs","_jsxs","PatientDashboard","_ref","user","appointments","services","availableSlots","doctors","patientId","isLoading","isBooking","bookingError","error","onBookAppointment","onUpdateAppointment","onCancelAppointment","onLogout","onLoadAvailableSlots","onRefreshAppointments","showBookingWizard","setShowBookingWizard","showEditModal","setShowEditModal","editingAppointment","setEditingAppointment","editData","setEditData","serviceId","staffId","appointmentDate","startTime","notes","editDoctors","setEditDoctors","editTimeSlots","setEditTimeSlots","editLoading","setEditLoading","editError","setEditError","handleBookingSuccess","loadEditDoctors","date","response","getDoctorsOnDuty","_error$response","_error$response2","_error$response3","console","status","log","loadEditTimeSlots","doctorId","getAvailableSlotsByDoctor","slots","Array","isArray","arrayProps","Object","values","filter","length","fallbackSlots","generateFallbackTimeSlots","_error$response4","_error$response5","startHour","endHour","hour","minute","timeString","concat","toString","padStart","push","id","endTime","handleEditAppointment","appointment","_appointment$staff","_appointment$staff2","split","service","staff","handleEditInputChange","e","name","value","target","prev","_objectSpread","currentDate","handleUpdateAppointment","preventDefault","handleCloseEditModal","handleCancelAppointment","appointmentId","confirm","getStatusBadge","statusConfig","confirmed","variant","icon","className","pending","cancelled","completed","walkin","config","Icon","children","charAt","toUpperCase","slice","formatDate","dateString","Date","toLocaleDateString","weekday","year","month","day","formatTime","toLocaleTimeString","hour12","upcomingAppointments","apt","pastAppointments","firstName","lastName","email","size","onClick","map","disabled","isOpen","onClose","onSuccess","onSubmit","htmlFor","onChange","required","durationMinutes","doctor","type","min","toISOString","slot","index","process","env","NODE_ENV","JSON","stringify","testSlots","placeholder"],"sources":["C:/Project/HopewellClinic/src/components/PatientDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Calendar, \n  Clock, \n  Plus, \n  User, \n  Phone, \n  MapPin, \n  Heart,\n  LogOut,\n  Bell,\n  FileText,\n  CheckCircle,\n  XCircle,\n  AlertCircle\n} from 'lucide-react';\nimport { Button } from './ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Badge } from './ui/badge';\nimport { cn } from '../lib/utils';\nimport BookingWizard from './BookingWizard';\nimport { appointmentsAPI } from '../services/api';\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  roles: string[];\n}\n\ninterface Service {\n  id: string;\n  name: string;\n  description: string;\n  durationMinutes: number;\n}\n\ninterface Appointment {\n  id: string;\n  appointmentDate: string;\n  startTime: string;\n  endTime: string;\n  status: string;\n  notes?: string;\n  service: Service;\n  staff?: {\n    firstName: string;\n    lastName: string;\n    role: string;\n  };\n}\n\ninterface PatientDashboardProps {\n  user: User;\n  appointments: Appointment[];\n  services: Service[];\n  availableSlots: any[];\n  doctors: any[];\n  patientId: string | null;\n  isLoading: boolean;\n  isBooking: boolean;\n  bookingError: string;\n  error: string;\n  onBookAppointment: (data: any) => Promise<void>;\n  onUpdateAppointment: (id: string, data: any) => Promise<void>;\n  onCancelAppointment: (id: string) => Promise<void>;\n  onLogout: () => void;\n  onLoadAvailableSlots: (date: string) => Promise<void>;\n  onRefreshAppointments: () => Promise<void>;\n}\n\nconst PatientDashboard: React.FC<PatientDashboardProps> = ({\n  user,\n  appointments,\n  services,\n  availableSlots,\n  doctors,\n  patientId,\n  isLoading,\n  isBooking,\n  bookingError,\n  error,\n  onBookAppointment,\n  onUpdateAppointment,\n  onCancelAppointment,\n  onLogout,\n  onLoadAvailableSlots,\n  onRefreshAppointments\n}) => {\n  const [showBookingWizard, setShowBookingWizard] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editingAppointment, setEditingAppointment] = useState<any>(null);\n  const [editData, setEditData] = useState({\n    serviceId: '',\n    staffId: '',\n    appointmentDate: '',\n    startTime: '',\n    notes: ''\n  });\n  const [editDoctors, setEditDoctors] = useState<any[]>([]);\n  const [editTimeSlots, setEditTimeSlots] = useState<any[]>([]);\n  const [editLoading, setEditLoading] = useState(false);\n  const [editError, setEditError] = useState('');\n\n  const handleBookingSuccess = async () => {\n    setShowBookingWizard(false);\n    // Refresh appointments after successful booking\n    await onRefreshAppointments();\n  };\n\n  const loadEditDoctors = async (date: string) => {\n    if (!date) return;\n    \n    setEditLoading(true);\n    setEditError('');\n    \n    try {\n      const response = await appointmentsAPI.getDoctorsOnDuty(date);\n      setEditDoctors(response.doctors || response || []);\n    } catch (error: any) {\n      console.error('Error loading doctors for edit:', error);\n      \n      // If API fails, use fallback doctors from the main doctors list\n      if (error.response?.status === 500 || error.response?.status === 404) {\n        console.log('API failed, using fallback doctors');\n        setEditDoctors(doctors || []);\n      } else if (error.response?.status !== 401) {\n        setEditError('Failed to load available doctors. Using all doctors as fallback.');\n        setEditDoctors(doctors || []);\n      }\n    } finally {\n      setEditLoading(false);\n    }\n  };\n\n  const loadEditTimeSlots = async (doctorId: string, date: string) => {\n    if (!doctorId || !date) {\n      console.log('loadEditTimeSlots: Missing doctorId or date', { doctorId, date });\n      return;\n    }\n    \n    console.log('loadEditTimeSlots: Loading time slots for', { doctorId, date });\n    setEditLoading(true);\n    setEditError('');\n    \n    try {\n      const response = await appointmentsAPI.getAvailableSlotsByDoctor(doctorId, date);\n      console.log('loadEditTimeSlots: API response', response);\n      \n      // Handle different response formats\n      let slots = [];\n      if (response.availableSlots) {\n        slots = response.availableSlots;\n      } else if (Array.isArray(response)) {\n        slots = response;\n      } else if (response && typeof response === 'object') {\n        // Try to find any array property\n        const arrayProps = Object.values(response).filter(Array.isArray);\n        if (arrayProps.length > 0) {\n          slots = arrayProps[0];\n        }\n      }\n      \n      console.log('loadEditTimeSlots: Processed slots', slots);\n      setEditTimeSlots(slots);\n      \n      // If no slots from API, generate some fallback slots\n      if (slots.length === 0) {\n        console.log('No slots from API, generating fallback slots');\n        const fallbackSlots = generateFallbackTimeSlots();\n        setEditTimeSlots(fallbackSlots);\n      }\n    } catch (error: any) {\n      console.error('Error loading time slots for edit:', error);\n      \n      // Generate fallback slots on any error\n      console.log('API failed, generating fallback slots');\n      const fallbackSlots = generateFallbackTimeSlots();\n      setEditTimeSlots(fallbackSlots);\n      \n      // Only show error for non-500/404 errors (authentication issues)\n      if (error.response?.status !== 500 && error.response?.status !== 404) {\n        setEditError('Using fallback time slots due to API issues.');\n      }\n    } finally {\n      setEditLoading(false);\n    }\n  };\n\n  const generateFallbackTimeSlots = () => {\n    const slots = [];\n    const startHour = 9; // 9 AM\n    const endHour = 17; // 5 PM\n    \n    for (let hour = startHour; hour < endHour; hour++) {\n      for (let minute = 0; minute < 60; minute += 30) {\n        const timeString = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}:00`;\n        slots.push({\n          id: `fallback-${timeString}`,\n          startTime: timeString,\n          endTime: minute === 30 ? `${(hour + 1).toString().padStart(2, '0')}:00:00` : `${hour.toString().padStart(2, '0')}:30:00`\n        });\n      }\n    }\n    \n    return slots;\n  };\n\n  const handleEditAppointment = async (appointment: any) => {\n    setEditingAppointment(appointment);\n    const appointmentDate = appointment.appointmentDate.split('T')[0];\n    setEditData({\n      serviceId: appointment.service.id,\n      staffId: appointment.staff?.id || '',\n      appointmentDate: appointmentDate,\n      startTime: appointment.startTime,\n      notes: appointment.notes || ''\n    });\n    \n    // Load doctors for the appointment date\n    await loadEditDoctors(appointmentDate);\n    \n    // If we have a staff ID, load time slots for that doctor\n    if (appointment.staff?.id) {\n      await loadEditTimeSlots(appointment.staff.id, appointmentDate);\n    }\n    \n    setShowEditModal(true);\n  };\n\n  const handleEditInputChange = async (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    \n    if (name === 'appointmentDate' && value) {\n      // Clear the start time and staff when date changes\n      setEditData(prev => ({ ...prev, [name]: value, startTime: '', staffId: '' }));\n      setEditTimeSlots([]);\n      // Load doctors for the new date\n      await loadEditDoctors(value);\n    } else if (name === 'staffId' && value) {\n      console.log('Doctor changed:', { value, currentDate: editData.appointmentDate });\n      // Clear the start time when doctor changes\n      setEditData(prev => ({ ...prev, [name]: value, startTime: '' }));\n      // Load time slots for the selected doctor and date\n      if (editData.appointmentDate) {\n        await loadEditTimeSlots(value, editData.appointmentDate);\n      } else {\n        console.log('No appointment date available for time slot loading');\n      }\n    } else {\n      // For other fields, just update the state\n      setEditData(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleUpdateAppointment = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingAppointment) return;\n    \n    try {\n      await onUpdateAppointment(editingAppointment.id, editData);\n      setShowEditModal(false);\n      setEditingAppointment(null);\n      setEditData({ serviceId: '', staffId: '', appointmentDate: '', startTime: '', notes: '' });\n      setEditDoctors([]);\n      setEditTimeSlots([]);\n      setEditError('');\n    } catch (error) {\n      console.error('Error updating appointment:', error);\n    }\n  };\n\n  const handleCloseEditModal = () => {\n    setShowEditModal(false);\n    setEditingAppointment(null);\n    setEditData({ serviceId: '', staffId: '', appointmentDate: '', startTime: '', notes: '' });\n    setEditDoctors([]);\n    setEditTimeSlots([]);\n    setEditError('');\n  };\n\n  const handleCancelAppointment = async (appointmentId: string) => {\n    if (!confirm('Are you sure you want to cancel this appointment?')) {\n      return;\n    }\n    \n    try {\n      await onCancelAppointment(appointmentId);\n    } catch (error) {\n      console.error('Error canceling appointment:', error);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      confirmed: { variant: 'default' as const, icon: CheckCircle, className: 'bg-green-100 text-green-800' },\n      pending: { variant: 'secondary' as const, icon: AlertCircle, className: 'bg-yellow-100 text-yellow-800' },\n      cancelled: { variant: 'destructive' as const, icon: XCircle, className: 'bg-red-100 text-red-800' },\n      completed: { variant: 'default' as const, icon: CheckCircle, className: 'bg-blue-100 text-blue-800' },\n      walkin: { variant: 'secondary' as const, icon: Clock, className: 'bg-purple-100 text-purple-800' }\n    };\n\n    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig.pending;\n    const Icon = config.icon;\n\n    return (\n      <Badge className={cn('status-badge', config.className)}>\n        <Icon className=\"h-3 w-3 mr-1\" />\n        {status.charAt(0).toUpperCase() + status.slice(1)}\n      </Badge>\n    );\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const formatTime = (timeString: string) => {\n    return new Date(`2000-01-01T${timeString}`).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  const upcomingAppointments = appointments.filter(apt => \n    new Date(apt.appointmentDate) >= new Date() && apt.status !== 'cancelled'\n  );\n\n  const pastAppointments = appointments.filter(apt => \n    new Date(apt.appointmentDate) < new Date() || apt.status === 'completed'\n  );\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <Heart className=\"h-8 w-8 text-primary heartbeat\" />\n              <span className=\"text-2xl font-bold text-foreground\">Hopewell Clinic</span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-right\">\n                <p className=\"text-sm font-medium text-foreground\">\n                  {user.firstName} {user.lastName}\n                </p>\n                <p className=\"text-xs text-muted-foreground\">{user.email}</p>\n              </div>\n              <Button variant=\"outline\" size=\"sm\" onClick={onLogout}>\n                <LogOut className=\"h-4 w-4 mr-2\" />\n                Sign Out\n              </Button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"h-5 w-5 text-red-500 mr-2\" />\n              <p className=\"text-red-700\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Welcome Section */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-foreground mb-2\">\n            Welcome back, {user.firstName}!\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Manage your appointments and health information\n          </p>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          <Card className=\"medical-card\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Upcoming Appointments</CardTitle>\n              <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{upcomingAppointments.length}</div>\n              <p className=\"text-xs text-muted-foreground\">\n                Next appointment {upcomingAppointments.length > 0 ? formatDate(upcomingAppointments[0].appointmentDate) : 'Not scheduled'}\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"medical-card\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Total Visits</CardTitle>\n              <User className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{pastAppointments.length}</div>\n              <p className=\"text-xs text-muted-foreground\">\n                Completed appointments\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"medical-card\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Quick Actions</CardTitle>\n              <Bell className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <Button \n                className=\"w-full\" \n                onClick={() => setShowBookingWizard(true)}\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Book New Appointment\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Appointments Section */}\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          {/* Upcoming Appointments */}\n          <Card className=\"medical-card\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Calendar className=\"h-5 w-5 text-primary\" />\n                <span>Upcoming Appointments</span>\n              </CardTitle>\n              <CardDescription>\n                Your scheduled appointments\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {upcomingAppointments.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Calendar className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                  <p className=\"text-muted-foreground\">No upcoming appointments</p>\n                  <Button \n                    variant=\"outline\" \n                    className=\"mt-4\"\n                    onClick={() => setShowBookingWizard(true)}\n                  >\n                    <Plus className=\"h-4 w-4 mr-2\" />\n                    Book Appointment\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {upcomingAppointments.map((appointment) => (\n                    <div key={appointment.id} className=\"border rounded-lg p-4 hover:bg-muted/50 transition-colors\">\n                      <div className=\"flex items-start justify-between mb-2\">\n                        <div>\n                          <h4 className=\"font-medium text-foreground\">{appointment.service.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {formatDate(appointment.appointmentDate)} at {formatTime(appointment.startTime)}\n                          </p>\n                        </div>\n                        {getStatusBadge(appointment.status)}\n                      </div>\n                      {appointment.staff && (\n                        <p className=\"text-sm text-muted-foreground mb-2\">\n                          With {appointment.staff.firstName} {appointment.staff.lastName}\n                        </p>\n                      )}\n                      {appointment.notes && (\n                        <p className=\"text-sm text-muted-foreground\">\n                          <FileText className=\"h-3 w-3 inline mr-1\" />\n                          {appointment.notes}\n                        </p>\n                      )}\n                      <div className=\"flex space-x-2 mt-3\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleEditAppointment(appointment)}\n                          disabled={appointment.status === 'cancelled' || appointment.status === 'completed'}\n                        >\n                          Edit\n                        </Button>\n                        <Button\n                          variant=\"destructive\"\n                          size=\"sm\"\n                          onClick={() => handleCancelAppointment(appointment.id)}\n                          disabled={appointment.status === 'cancelled' || appointment.status === 'completed'}\n                        >\n                          Cancel\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Appointment History */}\n          <Card className=\"medical-card\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Clock className=\"h-5 w-5 text-primary\" />\n                <span>Appointment History</span>\n              </CardTitle>\n              <CardDescription>\n                Your past appointments\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {pastAppointments.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Clock className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                  <p className=\"text-muted-foreground\">No appointment history</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n                  {pastAppointments.map((appointment) => (\n                    <div key={appointment.id} className=\"border rounded-lg p-4 hover:bg-muted/50 transition-colors\">\n                      <div className=\"flex items-start justify-between mb-2\">\n                        <div>\n                          <h4 className=\"font-medium text-foreground\">{appointment.service.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {formatDate(appointment.appointmentDate)} at {formatTime(appointment.startTime)}\n                          </p>\n                        </div>\n                        {getStatusBadge(appointment.status)}\n                      </div>\n                      {appointment.staff && (\n                        <p className=\"text-sm text-muted-foreground\">\n                          With {appointment.staff.firstName} {appointment.staff.lastName}\n                        </p>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* New Booking Wizard */}\n      <BookingWizard\n        isOpen={showBookingWizard}\n        onClose={() => setShowBookingWizard(false)}\n        onSuccess={handleBookingSuccess}\n        services={services}\n        patientId={patientId}\n      />\n\n      {/* Edit Appointment Modal */}\n      {showEditModal && editingAppointment && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n          <Card className=\"w-full max-w-md max-h-[90vh] overflow-hidden flex flex-col\">\n            <CardHeader>\n              <CardTitle>Edit Appointment</CardTitle>\n              <CardDescription>\n                Update your appointment details\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"overflow-y-auto flex-1\">\n              <form onSubmit={handleUpdateAppointment} className=\"space-y-4\">\n                {/* Error Display */}\n                {editError && (\n                  <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n                    {editError}\n                  </div>\n                )}\n\n                {/* Service Selection */}\n                <div>\n                  <Label htmlFor=\"edit-serviceId\">Service</Label>\n                  <select\n                    id=\"edit-serviceId\"\n                    name=\"serviceId\"\n                    value={editData.serviceId}\n                    onChange={handleEditInputChange}\n                    className=\"w-full h-10 px-3 py-2 border border-input bg-background rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\n                    required\n                  >\n                    <option value=\"\">Select a service</option>\n                    {services.map((service) => (\n                      <option key={service.id} value={service.id}>\n                        {service.name} ({service.durationMinutes} min)\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Doctor Selection */}\n                <div>\n                  <Label htmlFor=\"edit-staffId\">Doctor *</Label>\n                  <select\n                    id=\"edit-staffId\"\n                    name=\"staffId\"\n                    value={editData.staffId}\n                    onChange={handleEditInputChange}\n                    className=\"w-full h-10 px-3 py-2 border border-input bg-background rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\n                    required\n                    disabled={!editData.appointmentDate || editLoading}\n                  >\n                    <option value=\"\">Select a doctor</option>\n                    {editDoctors.map((doctor) => (\n                      <option key={doctor.id} value={doctor.id}>\n                        Dr. {doctor.firstName} {doctor.lastName}\n                      </option>\n                    ))}\n                  </select>\n                  {editLoading && editData.appointmentDate && (\n                    <p className=\"text-sm text-muted-foreground mt-1\">Loading doctors...</p>\n                  )}\n                </div>\n\n                {/* Date Selection */}\n                <div>\n                  <Label htmlFor=\"edit-appointmentDate\">Date</Label>\n                  <Input\n                    id=\"edit-appointmentDate\"\n                    name=\"appointmentDate\"\n                    type=\"date\"\n                    value={editData.appointmentDate}\n                    onChange={handleEditInputChange}\n                    min={new Date().toISOString().split('T')[0]}\n                    required\n                  />\n                </div>\n\n                {/* Time Selection */}\n                <div>\n                  <Label htmlFor=\"edit-startTime\">Available Time</Label>\n                  <select\n                    id=\"edit-startTime\"\n                    name=\"startTime\"\n                    value={editData.startTime}\n                    onChange={handleEditInputChange}\n                    className=\"w-full h-10 px-3 py-2 border border-input bg-background rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\n                    required\n                    disabled={!editData.appointmentDate || !editData.staffId || editLoading}\n                  >\n                    <option value=\"\">Select a time</option>\n                    {editTimeSlots.map((slot, index) => (\n                      <option key={slot.id || `${slot.startTime}-${index}`} value={slot.startTime}>\n                        {formatTime(slot.startTime)}\n                      </option>\n                    ))}\n                  </select>\n                  {editLoading && editData.staffId && editData.appointmentDate && (\n                    <p className=\"text-sm text-muted-foreground mt-1\">Loading time slots...</p>\n                  )}\n                  {!editLoading && editData.staffId && editData.appointmentDate && editTimeSlots.length === 0 && (\n                    <p className=\"text-sm text-muted-foreground mt-1\">No available time slots for this doctor on this date</p>\n                  )}\n                  {/* Debug info */}\n                  {process.env.NODE_ENV === 'development' && (\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      Debug: {editTimeSlots.length} slots loaded\n                      {editTimeSlots.length > 0 && (\n                        <div>First slot: {JSON.stringify(editTimeSlots[0])}</div>\n                      )}\n                      <button \n                        type=\"button\"\n                        onClick={() => {\n                          console.log('Manual time slot test');\n                          const testSlots = generateFallbackTimeSlots();\n                          setEditTimeSlots(testSlots);\n                        }}\n                        className=\"text-blue-500 underline\"\n                      >\n                        Test Load Slots\n                      </button>\n                    </div>\n                  )}\n                </div>\n\n                {/* Notes */}\n                <div>\n                  <Label htmlFor=\"edit-notes\">Notes (Optional)</Label>\n                  <textarea\n                    id=\"edit-notes\"\n                    name=\"notes\"\n                    value={editData.notes}\n                    onChange={handleEditInputChange}\n                    className=\"w-full h-20 px-3 py-2 border border-input bg-background rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 resize-none\"\n                    placeholder=\"Any specific concerns or requests...\"\n                  />\n                </div>\n\n                {/* Actions */}\n                <div className=\"flex space-x-3 pt-4\">\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    className=\"flex-1\"\n                    onClick={handleCloseEditModal}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    className=\"flex-1\"\n                    disabled={isBooking || editLoading}\n                  >\n                    {isBooking || editLoading ? 'Updating...' : 'Update Appointment'}\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PatientDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}