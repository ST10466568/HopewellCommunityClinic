{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport FormInput from '../components/forms/FormInput';\nimport LoadingSpinner from '../components/LoadingSpinner';\nconst AuthPage = () => {\n  _s();\n  const {\n    login,\n    register,\n    isLoading,\n    error,\n    clearError\n  } = useAuth();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    phone: '',\n    dateOfBirth: '',\n    address: '',\n    confirmPassword: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Clear errors when switching modes\n  useEffect(() => {\n    clearError();\n    setFormErrors({});\n  }, [isLoginMode, clearError]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear field error when user starts typing\n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const errors = {};\n\n    // Common validations\n    if (!formData.email) {\n      errors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      errors.email = 'Email is invalid';\n    }\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      errors.password = 'Password must be at least 6 characters';\n    }\n\n    // Registration specific validations\n    if (!isLoginMode) {\n      if (!formData.firstName) {\n        errors.firstName = 'First name is required';\n      }\n      if (!formData.lastName) {\n        errors.lastName = 'Last name is required';\n      }\n      if (!formData.phone) {\n        errors.phone = 'Phone number is required';\n      }\n      if (!formData.dateOfBirth) {\n        errors.dateOfBirth = 'Date of birth is required';\n      } else {\n        const birthDate = new Date(formData.dateOfBirth);\n        const today = new Date();\n        if (birthDate >= today) {\n          errors.dateOfBirth = 'Date of birth must be in the past';\n        }\n      }\n      if (!formData.address) {\n        errors.address = 'Address is required';\n      }\n      if (!formData.confirmPassword) {\n        errors.confirmPassword = 'Please confirm your password';\n      } else if (formData.password !== formData.confirmPassword) {\n        errors.confirmPassword = 'Passwords do not match';\n      }\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      if (isLoginMode) {\n        const result = await login({\n          email: formData.email,\n          password: formData.password\n        });\n        if (result.success) {\n          // Redirect will be handled by the router\n        } else {\n          setFormErrors({\n            submit: result.error\n          });\n        }\n      } else {\n        const result = await register({\n          firstName: formData.firstName,\n          lastName: formData.lastName,\n          email: formData.email,\n          password: formData.password,\n          phone: formData.phone,\n          dateOfBirth: formData.dateOfBirth,\n          address: formData.address\n        });\n        if (result.success) {\n          // Show success message and switch to login\n          alert(result.message || 'Registration successful! Please login.');\n          setIsLoginMode(true);\n          setFormData({\n            email: formData.email,\n            password: '',\n            firstName: '',\n            lastName: '',\n            phone: '',\n            dateOfBirth: '',\n            address: '',\n            confirmPassword: ''\n          });\n        } else {\n          setFormErrors({\n            submit: result.error\n          });\n        }\n      }\n    } catch (err) {\n      setFormErrors({\n        submit: 'An unexpected error occurred'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode);\n    setFormData({\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      phone: '',\n      dateOfBirth: '',\n      address: '',\n      confirmPassword: ''\n    });\n    setFormErrors({});\n  };\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner, {\n      size: 'lg',\n      text: 'Loading...'\n    });\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'min-h-screen bg-gradient-to-br from-primary to-blue-600 flex items-center justify-center p-4'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'w-full max-w-md'\n  },\n  /*#__PURE__*/\n  // Logo and title\n  React.createElement('div', {\n    className: 'text-center mb-8'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'w-16 h-16 bg-white bg-opacity-20 rounded-full flex items-center justify-center text-3xl mx-auto mb-4'\n  }, 'üíö'), /*#__PURE__*/React.createElement('h1', {\n    className: 'text-3xl font-bold text-white mb-2'\n  }, 'Hopewell Clinic'), /*#__PURE__*/React.createElement('p', {\n    className: 'text-white opacity-90'\n  }, isLoginMode ? 'Welcome back!' : 'Create your account')),\n  /*#__PURE__*/\n  // Auth form\n  React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-xl p-8'\n  }, /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleSubmit\n  },\n  // Error message\n  (error || formErrors.submit) && /*#__PURE__*/React.createElement('div', {\n    className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\n  }, error || formErrors.submit),\n  // Registration fields\n  !isLoginMode && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement('div', {\n    className: 'grid grid-cols-2 gap-4'\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: 'First Name',\n    name: 'firstName',\n    value: formData.firstName,\n    onChange: handleInputChange,\n    error: formErrors.firstName,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Last Name',\n    name: 'lastName',\n    value: formData.lastName,\n    onChange: handleInputChange,\n    error: formErrors.lastName,\n    required: true\n  })), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Phone Number',\n    name: 'phone',\n    type: 'tel',\n    value: formData.phone,\n    onChange: handleInputChange,\n    error: formErrors.phone,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Date of Birth',\n    name: 'dateOfBirth',\n    type: 'date',\n    value: formData.dateOfBirth,\n    onChange: handleInputChange,\n    error: formErrors.dateOfBirth,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Address',\n    name: 'address',\n    value: formData.address,\n    onChange: handleInputChange,\n    error: formErrors.address,\n    required: true\n  })),\n  /*#__PURE__*/\n  // Common fields\n  React.createElement(FormInput, {\n    label: 'Email',\n    name: 'email',\n    type: 'email',\n    value: formData.email,\n    onChange: handleInputChange,\n    error: formErrors.email,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    value: formData.password,\n    onChange: handleInputChange,\n    error: formErrors.password,\n    required: true\n  }),\n  // Confirm password for registration\n  !isLoginMode && /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Confirm Password',\n    name: 'confirmPassword',\n    type: 'password',\n    value: formData.confirmPassword,\n    onChange: handleInputChange,\n    error: formErrors.confirmPassword,\n    required: true\n  }),\n  /*#__PURE__*/\n  // Submit button\n  React.createElement('button', {\n    type: 'submit',\n    className: 'btn btn-primary w-full',\n    disabled: isSubmitting\n  }, isSubmitting && /*#__PURE__*/React.createElement('div', {\n    className: 'loading-spinner w-4 h-4 mr-2'\n  }), isSubmitting ? 'Processing...' : isLoginMode ? 'Sign In' : 'Create Account')),\n  /*#__PURE__*/\n  // Toggle mode\n  React.createElement('div', {\n    className: 'mt-6 text-center'\n  }, /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, isLoginMode ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/React.createElement('button', {\n    type: 'button',\n    className: 'text-primary hover:underline font-medium',\n    onClick: toggleMode\n  }, isLoginMode ? 'Sign up' : 'Sign in')))),\n  /*#__PURE__*/\n  // Back to home link\n  React.createElement('div', {\n    className: 'text-center mt-6'\n  }, /*#__PURE__*/React.createElement('a', {\n    href: '/',\n    className: 'text-white opacity-75 hover:opacity-100 transition-opacity'\n  }, '‚Üê Back to Home'))));\n};\n_s(AuthPage, \"XyqJXDQlyaq4vptPEwLNacvZ2Gc=\", false, function () {\n  return [useAuth];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","FormInput","LoadingSpinner","AuthPage","_s","login","register","isLoading","error","clearError","isLoginMode","setIsLoginMode","formData","setFormData","email","password","firstName","lastName","phone","dateOfBirth","address","confirmPassword","formErrors","setFormErrors","isSubmitting","setIsSubmitting","handleInputChange","e","name","value","target","prev","validateForm","errors","test","length","birthDate","Date","today","Object","keys","handleSubmit","preventDefault","result","success","submit","alert","message","err","toggleMode","createElement","size","text","className","onSubmit","Fragment","label","onChange","required","type","disabled","onClick","href","_c","$RefreshReg$"],"sources":["C:/Project/HopewellClinic/src/pages/AuthPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport FormInput from '../components/forms/FormInput';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nconst AuthPage = () => {\r\n  const { login, register, isLoading, error, clearError } = useAuth();\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    phone: '',\r\n    dateOfBirth: '',\r\n    address: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Clear errors when switching modes\r\n  useEffect(() => {\r\n    clearError();\r\n    setFormErrors({});\r\n  }, [isLoginMode, clearError]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Clear field error when user starts typing\r\n    if (formErrors[name]) {\r\n      setFormErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n\r\n    // Common validations\r\n    if (!formData.email) {\r\n      errors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      errors.email = 'Email is invalid';\r\n    }\r\n\r\n    if (!formData.password) {\r\n      errors.password = 'Password is required';\r\n    } else if (formData.password.length < 6) {\r\n      errors.password = 'Password must be at least 6 characters';\r\n    }\r\n\r\n    // Registration specific validations\r\n    if (!isLoginMode) {\r\n      if (!formData.firstName) {\r\n        errors.firstName = 'First name is required';\r\n      }\r\n\r\n      if (!formData.lastName) {\r\n        errors.lastName = 'Last name is required';\r\n      }\r\n\r\n      if (!formData.phone) {\r\n        errors.phone = 'Phone number is required';\r\n      }\r\n\r\n      if (!formData.dateOfBirth) {\r\n        errors.dateOfBirth = 'Date of birth is required';\r\n      } else {\r\n        const birthDate = new Date(formData.dateOfBirth);\r\n        const today = new Date();\r\n        if (birthDate >= today) {\r\n          errors.dateOfBirth = 'Date of birth must be in the past';\r\n        }\r\n      }\r\n\r\n      if (!formData.address) {\r\n        errors.address = 'Address is required';\r\n      }\r\n\r\n      if (!formData.confirmPassword) {\r\n        errors.confirmPassword = 'Please confirm your password';\r\n      } else if (formData.password !== formData.confirmPassword) {\r\n        errors.confirmPassword = 'Passwords do not match';\r\n      }\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      if (isLoginMode) {\r\n        const result = await login({\r\n          email: formData.email,\r\n          password: formData.password\r\n        });\r\n\r\n        if (result.success) {\r\n          // Redirect will be handled by the router\r\n        } else {\r\n          setFormErrors({ submit: result.error });\r\n        }\r\n      } else {\r\n        const result = await register({\r\n          firstName: formData.firstName,\r\n          lastName: formData.lastName,\r\n          email: formData.email,\r\n          password: formData.password,\r\n          phone: formData.phone,\r\n          dateOfBirth: formData.dateOfBirth,\r\n          address: formData.address\r\n        });\r\n\r\n        if (result.success) {\r\n          // Show success message and switch to login\r\n          alert(result.message || 'Registration successful! Please login.');\r\n          setIsLoginMode(true);\r\n          setFormData({\r\n            email: formData.email,\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phone: '',\r\n            dateOfBirth: '',\r\n            address: '',\r\n            confirmPassword: ''\r\n          });\r\n        } else {\r\n          setFormErrors({ submit: result.error });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setFormErrors({ submit: 'An unexpected error occurred' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    setIsLoginMode(!isLoginMode);\r\n    setFormData({\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      phone: '',\r\n      dateOfBirth: '',\r\n      address: '',\r\n      confirmPassword: ''\r\n    });\r\n    setFormErrors({});\r\n  };\r\n\r\n  if (isLoading) {\r\n    return React.createElement(LoadingSpinner, {\r\n      size: 'lg',\r\n      text: 'Loading...'\r\n    });\r\n  }\r\n\r\n  return React.createElement('div', {\r\n    className: 'min-h-screen bg-gradient-to-br from-primary to-blue-600 flex items-center justify-center p-4'\r\n  },\r\n    React.createElement('div', {\r\n      className: 'w-full max-w-md'\r\n    },\r\n      // Logo and title\r\n      React.createElement('div', {\r\n        className: 'text-center mb-8'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'w-16 h-16 bg-white bg-opacity-20 rounded-full flex items-center justify-center text-3xl mx-auto mb-4'\r\n        }, 'üíö'),\r\n        React.createElement('h1', {\r\n          className: 'text-3xl font-bold text-white mb-2'\r\n        }, 'Hopewell Clinic'),\r\n        React.createElement('p', {\r\n          className: 'text-white opacity-90'\r\n        }, isLoginMode ? 'Welcome back!' : 'Create your account')\r\n      ),\r\n\r\n      // Auth form\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-xl p-8'\r\n      },\r\n        React.createElement('form', {\r\n          onSubmit: handleSubmit\r\n        },\r\n          // Error message\r\n          (error || formErrors.submit) && React.createElement('div', {\r\n            className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\r\n          }, error || formErrors.submit),\r\n\r\n          // Registration fields\r\n          !isLoginMode && React.createElement(React.Fragment, null,\r\n            React.createElement('div', {\r\n              className: 'grid grid-cols-2 gap-4'\r\n            },\r\n              React.createElement(FormInput, {\r\n                label: 'First Name',\r\n                name: 'firstName',\r\n                value: formData.firstName,\r\n                onChange: handleInputChange,\r\n                error: formErrors.firstName,\r\n                required: true\r\n              }),\r\n              React.createElement(FormInput, {\r\n                label: 'Last Name',\r\n                name: 'lastName',\r\n                value: formData.lastName,\r\n                onChange: handleInputChange,\r\n                error: formErrors.lastName,\r\n                required: true\r\n              })\r\n            ),\r\n            React.createElement(FormInput, {\r\n              label: 'Phone Number',\r\n              name: 'phone',\r\n              type: 'tel',\r\n              value: formData.phone,\r\n              onChange: handleInputChange,\r\n              error: formErrors.phone,\r\n              required: true\r\n            }),\r\n            React.createElement(FormInput, {\r\n              label: 'Date of Birth',\r\n              name: 'dateOfBirth',\r\n              type: 'date',\r\n              value: formData.dateOfBirth,\r\n              onChange: handleInputChange,\r\n              error: formErrors.dateOfBirth,\r\n              required: true\r\n            }),\r\n            React.createElement(FormInput, {\r\n              label: 'Address',\r\n              name: 'address',\r\n              value: formData.address,\r\n              onChange: handleInputChange,\r\n              error: formErrors.address,\r\n              required: true\r\n            })\r\n          ),\r\n\r\n          // Common fields\r\n          React.createElement(FormInput, {\r\n            label: 'Email',\r\n            name: 'email',\r\n            type: 'email',\r\n            value: formData.email,\r\n            onChange: handleInputChange,\r\n            error: formErrors.email,\r\n            required: true\r\n          }),\r\n          React.createElement(FormInput, {\r\n            label: 'Password',\r\n            name: 'password',\r\n            type: 'password',\r\n            value: formData.password,\r\n            onChange: handleInputChange,\r\n            error: formErrors.password,\r\n            required: true\r\n          }),\r\n\r\n          // Confirm password for registration\r\n          !isLoginMode && React.createElement(FormInput, {\r\n            label: 'Confirm Password',\r\n            name: 'confirmPassword',\r\n            type: 'password',\r\n            value: formData.confirmPassword,\r\n            onChange: handleInputChange,\r\n            error: formErrors.confirmPassword,\r\n            required: true\r\n          }),\r\n\r\n          // Submit button\r\n          React.createElement('button', {\r\n            type: 'submit',\r\n            className: 'btn btn-primary w-full',\r\n            disabled: isSubmitting\r\n          },\r\n            isSubmitting && React.createElement('div', {\r\n              className: 'loading-spinner w-4 h-4 mr-2'\r\n            }),\r\n            isSubmitting ? 'Processing...' : (isLoginMode ? 'Sign In' : 'Create Account')\r\n          )\r\n        ),\r\n\r\n        // Toggle mode\r\n        React.createElement('div', {\r\n          className: 'mt-6 text-center'\r\n        },\r\n          React.createElement('p', {\r\n            className: 'text-secondary'\r\n          },\r\n            isLoginMode ? \"Don't have an account? \" : \"Already have an account? \",\r\n            React.createElement('button', {\r\n              type: 'button',\r\n              className: 'text-primary hover:underline font-medium',\r\n              onClick: toggleMode\r\n            }, isLoginMode ? 'Sign up' : 'Sign in')\r\n          )\r\n        )\r\n      ),\r\n\r\n      // Back to home link\r\n      React.createElement('div', {\r\n        className: 'text-center mt-6'\r\n      },\r\n        React.createElement('a', {\r\n          href: '/',\r\n          className: 'text-white opacity-75 hover:opacity-100 transition-opacity'\r\n        }, '‚Üê Back to Home')\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}