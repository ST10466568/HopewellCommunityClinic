{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { appointmentsAPI, staffAPI, servicesAPI, doctorAPI } from '../services/api';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport Modal from '../components/Modal';\nimport FormSelect from '../components/forms/FormSelect';\nimport FormInput from '../components/forms/FormInput';\nimport FormTextarea from '../components/forms/FormTextarea';\nconst DoctorDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [appointments, setAppointments] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [services, setServices] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showWalkinModal, setShowWalkinModal] = useState(false);\n  const [walkinData, setWalkinData] = useState({\n    patientFirstName: '',\n    patientLastName: '',\n    patientPhone: '',\n    serviceId: '',\n    appointmentDate: '',\n    startTime: ''\n  });\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n  const loadDashboardData = async () => {\n    try {\n      setIsLoading(true);\n      const [appointmentsData, patientsData, servicesData] = await Promise.all([doctorAPI.getUpcomingAppointments(user.id), doctorAPI.getPatients(user.id), servicesAPI.getAll()]);\n      setAppointments(appointmentsData);\n      setPatients(patientsData);\n      setServices(servicesData);\n    } catch (error) {\n      console.error('Error loading dashboard data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleWalkinInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setWalkinData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n\n    // Load available slots when date is selected\n    if (name === 'appointmentDate' && value) {\n      loadAvailableSlots(value);\n    }\n  };\n  const loadAvailableSlots = async date => {\n    try {\n      const slots = await staffAPI.getAvailability(user.id, date);\n      setAvailableSlots(slots);\n    } catch (error) {\n      console.error('Error loading available slots:', error);\n    }\n  };\n  const handleCreateWalkinAppointment = async e => {\n    e.preventDefault();\n    if (!walkinData.patientFirstName || !walkinData.patientLastName || !walkinData.patientPhone || !walkinData.serviceId || !walkinData.appointmentDate || !walkinData.startTime) {\n      setError('Please fill in all required fields');\n      return;\n    }\n    setIsSubmitting(true);\n    setError('');\n    try {\n      await doctorAPI.createWalkinAppointment({\n        ...walkinData,\n        doctorId: user.id\n      });\n\n      // Refresh appointments\n      await loadDashboardData();\n\n      // Close modal and reset form\n      setShowWalkinModal(false);\n      setWalkinData({\n        patientFirstName: '',\n        patientLastName: '',\n        patientPhone: '',\n        serviceId: '',\n        appointmentDate: '',\n        startTime: ''\n      });\n      setAvailableSlots([]);\n      alert('Walk-in appointment created successfully!');\n    } catch (error) {\n      setError(error.error || error.message || 'Failed to create walk-in appointment');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleUpdateAppointmentStatus = async (appointmentId, status) => {\n    try {\n      await appointmentsAPI.updateStatus(appointmentId, status);\n      await loadDashboardData();\n      alert(`Appointment marked as ${status}!`);\n    } catch (error) {\n      alert('Failed to update appointment status: ' + (error.error || error.message));\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const formatTime = timeString => {\n    return new Date(`2000-01-01T${timeString}`).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'confirmed':\n        return 'text-success';\n      case 'scheduled':\n        return 'text-primary';\n      case 'cancelled':\n        return 'text-error';\n      case 'completed':\n        return 'text-secondary';\n      case 'in-progress':\n        return 'text-warning';\n      default:\n        return 'text-secondary';\n    }\n  };\n  const getStatusBadgeColor = status => {\n    switch (status.toLowerCase()) {\n      case 'confirmed':\n        return 'bg-green-100 text-green-800';\n      case 'scheduled':\n        return 'bg-blue-100 text-blue-800';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800';\n      case 'completed':\n        return 'bg-gray-100 text-gray-800';\n      case 'in-progress':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  const todayAppointments = appointments.filter(apt => {\n    const appointmentDate = new Date(apt.appointmentDate).toDateString();\n    const today = new Date().toDateString();\n    return appointmentDate === today;\n  });\n  const upcomingAppointments = appointments.filter(apt => {\n    const appointmentDate = new Date(apt.appointmentDate);\n    const today = new Date();\n    return appointmentDate > today && apt.status !== 'cancelled' && apt.status !== 'completed';\n  });\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner, {\n      size: 'lg',\n      text: 'Loading your dashboard...'\n    });\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'space-y-6'\n  },\n  /*#__PURE__*/\n  // Welcome section\n  React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6'\n  }, /*#__PURE__*/React.createElement('h1', {\n    className: 'text-3xl font-bold text-primary mb-2'\n  }, `Welcome, Dr. ${user.lastName}!`), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Here\\'s your schedule and patient information.')),\n  /*#__PURE__*/\n  // Quick stats\n  React.createElement('div', {\n    className: 'grid grid-cols-1 md:grid-cols-4 gap-6'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-primary mb-2'\n  }, todayAppointments.length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Today\\'s Appointments')), /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-success mb-2'\n  }, upcomingAppointments.length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Upcoming Appointments')), /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-warning mb-2'\n  }, patients.length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Total Patients')), /*#__PURE__*/React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md p-6 text-center'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'text-3xl font-bold text-error mb-2'\n  }, appointments.filter(apt => apt.status === 'completed').length), /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary'\n  }, 'Completed Today'))),\n  /*#__PURE__*/\n  // Action buttons\n  React.createElement('div', {\n    className: 'flex flex-wrap gap-4'\n  }, /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-primary',\n    onClick: () => setShowWalkinModal(true)\n  }, 'ðŸš¶ Create Walk-in Appointment'), /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-secondary',\n    onClick: loadDashboardData\n  }, 'ðŸ”„ Refresh Schedule')),\n  /*#__PURE__*/\n  // Today's appointments\n  React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'p-6 border-b border-light'\n  }, /*#__PURE__*/React.createElement('h2', {\n    className: 'text-2xl font-semibold text-primary'\n  }, 'Today\\'s Appointments')), /*#__PURE__*/React.createElement('div', {\n    className: 'p-6'\n  }, todayAppointments.length === 0 ? /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary text-center py-8'\n  }, 'No appointments scheduled for today.') : /*#__PURE__*/React.createElement('div', {\n    className: 'space-y-4'\n  }, todayAppointments.map(appointment => {\n    var _appointment$service, _appointment$patient, _appointment$patient2;\n    return /*#__PURE__*/React.createElement('div', {\n      key: appointment.id,\n      className: 'border border-light rounded-lg p-4 hover:shadow-md transition-shadow'\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4'\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'flex-1'\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'flex items-center gap-3 mb-2'\n    }, /*#__PURE__*/React.createElement('h3', {\n      className: 'text-lg font-semibold text-primary'\n    }, ((_appointment$service = appointment.service) === null || _appointment$service === void 0 ? void 0 : _appointment$service.name) || 'Service'), /*#__PURE__*/React.createElement('span', {\n      className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(appointment.status)}`\n    }, appointment.status)), /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary mb-1'\n    }, `Patient: ${(_appointment$patient = appointment.patient) === null || _appointment$patient === void 0 ? void 0 : _appointment$patient.firstName} ${(_appointment$patient2 = appointment.patient) === null || _appointment$patient2 === void 0 ? void 0 : _appointment$patient2.lastName}`), /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary mb-1'\n    }, `Time: ${formatTime(appointment.startTime)} - ${formatTime(appointment.endTime)}`), appointment.notes && /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary text-sm'\n    }, `Notes: ${appointment.notes}`)), /*#__PURE__*/React.createElement('div', {\n      className: 'flex flex-wrap gap-2'\n    }, appointment.status === 'confirmed' && /*#__PURE__*/React.createElement('button', {\n      className: 'btn btn-warning btn-sm',\n      onClick: () => handleUpdateAppointmentStatus(appointment.id, 'in-progress')\n    }, 'Start'), appointment.status === 'in-progress' && /*#__PURE__*/React.createElement('button', {\n      className: 'btn btn-success btn-sm',\n      onClick: () => handleUpdateAppointmentStatus(appointment.id, 'completed')\n    }, 'Complete'))));\n  })))),\n  /*#__PURE__*/\n  // Upcoming appointments\n  React.createElement('div', {\n    className: 'bg-white rounded-lg shadow-md'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'p-6 border-b border-light'\n  }, /*#__PURE__*/React.createElement('h2', {\n    className: 'text-2xl font-semibold text-primary'\n  }, 'Upcoming Appointments')), /*#__PURE__*/React.createElement('div', {\n    className: 'p-6'\n  }, upcomingAppointments.length === 0 ? /*#__PURE__*/React.createElement('p', {\n    className: 'text-secondary text-center py-8'\n  }, 'No upcoming appointments scheduled.') : /*#__PURE__*/React.createElement('div', {\n    className: 'space-y-4'\n  }, upcomingAppointments.map(appointment => {\n    var _appointment$service2, _appointment$patient3, _appointment$patient4;\n    return /*#__PURE__*/React.createElement('div', {\n      key: appointment.id,\n      className: 'border border-light rounded-lg p-4'\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'flex flex-col md:flex-row md:items-center md:justify-between gap-4'\n    }, /*#__PURE__*/React.createElement('div', null, /*#__PURE__*/React.createElement('h3', {\n      className: 'text-lg font-semibold text-primary'\n    }, ((_appointment$service2 = appointment.service) === null || _appointment$service2 === void 0 ? void 0 : _appointment$service2.name) || 'Service'), /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary'\n    }, formatDate(appointment.appointmentDate)), /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary'\n    }, `Time: ${formatTime(appointment.startTime)} - ${formatTime(appointment.endTime)}`), /*#__PURE__*/React.createElement('p', {\n      className: 'text-secondary'\n    }, `Patient: ${(_appointment$patient3 = appointment.patient) === null || _appointment$patient3 === void 0 ? void 0 : _appointment$patient3.firstName} ${(_appointment$patient4 = appointment.patient) === null || _appointment$patient4 === void 0 ? void 0 : _appointment$patient4.lastName}`)), /*#__PURE__*/React.createElement('span', {\n      className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(appointment.status)}`\n    }, appointment.status)));\n  })))),\n  /*#__PURE__*/\n  // Walk-in appointment modal\n  React.createElement(Modal, {\n    isOpen: showWalkinModal,\n    onClose: () => setShowWalkinModal(false),\n    title: 'Create Walk-in Appointment',\n    size: 'lg'\n  }, /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleCreateWalkinAppointment\n  }, error && /*#__PURE__*/React.createElement('div', {\n    className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\n  }, error), /*#__PURE__*/React.createElement('div', {\n    className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Patient First Name',\n    name: 'patientFirstName',\n    value: walkinData.patientFirstName,\n    onChange: handleWalkinInputChange,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Patient Last Name',\n    name: 'patientLastName',\n    value: walkinData.patientLastName,\n    onChange: handleWalkinInputChange,\n    required: true\n  })), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Patient Phone',\n    name: 'patientPhone',\n    type: 'tel',\n    value: walkinData.patientPhone,\n    onChange: handleWalkinInputChange,\n    required: true\n  }), /*#__PURE__*/React.createElement('div', {\n    className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    label: 'Service',\n    name: 'serviceId',\n    value: walkinData.serviceId,\n    onChange: handleWalkinInputChange,\n    options: services.map(service => ({\n      value: service.id,\n      label: service.name\n    })),\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: 'Date',\n    name: 'appointmentDate',\n    type: 'date',\n    value: walkinData.appointmentDate,\n    onChange: handleWalkinInputChange,\n    required: true,\n    min: new Date().toISOString().split('T')[0]\n  })), walkinData.appointmentDate && availableSlots.length > 0 && /*#__PURE__*/React.createElement(FormSelect, {\n    label: 'Available Time',\n    name: 'startTime',\n    value: walkinData.startTime,\n    onChange: handleWalkinInputChange,\n    options: availableSlots.map(slot => ({\n      value: slot.startTime,\n      label: formatTime(slot.startTime)\n    })),\n    required: true\n  }), /*#__PURE__*/React.createElement('div', {\n    className: 'flex gap-4 justify-end mt-6'\n  }, /*#__PURE__*/React.createElement('button', {\n    type: 'button',\n    className: 'btn btn-secondary',\n    onClick: () => setShowWalkinModal(false)\n  }, 'Cancel'), /*#__PURE__*/React.createElement('button', {\n    type: 'submit',\n    className: 'btn btn-primary',\n    disabled: isSubmitting\n  }, isSubmitting && /*#__PURE__*/React.createElement('div', {\n    className: 'loading-spinner w-4 h-4 mr-2'\n  }), isSubmitting ? 'Creating...' : 'Create Appointment')))));\n};\n_s(DoctorDashboard, \"tNZ4FHovdpMIbItv+0+EUnb9lLo=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","appointmentsAPI","staffAPI","servicesAPI","doctorAPI","LoadingSpinner","Modal","FormSelect","FormInput","FormTextarea","DoctorDashboard","_s","user","appointments","setAppointments","patients","setPatients","services","setServices","isLoading","setIsLoading","showWalkinModal","setShowWalkinModal","walkinData","setWalkinData","patientFirstName","patientLastName","patientPhone","serviceId","appointmentDate","startTime","availableSlots","setAvailableSlots","isSubmitting","setIsSubmitting","error","setError","loadDashboardData","appointmentsData","patientsData","servicesData","Promise","all","getUpcomingAppointments","id","getPatients","getAll","console","handleWalkinInputChange","e","name","value","target","prev","loadAvailableSlots","date","slots","getAvailability","handleCreateWalkinAppointment","preventDefault","createWalkinAppointment","doctorId","alert","message","handleUpdateAppointmentStatus","appointmentId","status","updateStatus","formatDate","dateString","Date","toLocaleDateString","weekday","year","month","day","formatTime","timeString","toLocaleTimeString","hour","minute","hour12","getStatusColor","toLowerCase","getStatusBadgeColor","todayAppointments","filter","apt","toDateString","today","upcomingAppointments","createElement","size","text","className","lastName","length","onClick","map","appointment","_appointment$service","_appointment$patient","_appointment$patient2","key","service","patient","firstName","endTime","notes","_appointment$service2","_appointment$patient3","_appointment$patient4","isOpen","onClose","title","onSubmit","label","onChange","required","type","options","min","toISOString","split","slot","disabled","_c","$RefreshReg$"],"sources":["C:/Project/HopewellClinic/src/pages/DoctorDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { appointmentsAPI, staffAPI, servicesAPI, doctorAPI } from '../services/api';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport Modal from '../components/Modal';\r\nimport FormSelect from '../components/forms/FormSelect';\r\nimport FormInput from '../components/forms/FormInput';\r\nimport FormTextarea from '../components/forms/FormTextarea';\r\n\r\nconst DoctorDashboard = () => {\r\n  const { user } = useAuth();\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showWalkinModal, setShowWalkinModal] = useState(false);\r\n  const [walkinData, setWalkinData] = useState({\r\n    patientFirstName: '',\r\n    patientLastName: '',\r\n    patientPhone: '',\r\n    serviceId: '',\r\n    appointmentDate: '',\r\n    startTime: ''\r\n  });\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const [appointmentsData, patientsData, servicesData] = await Promise.all([\r\n        doctorAPI.getUpcomingAppointments(user.id),\r\n        doctorAPI.getPatients(user.id),\r\n        servicesAPI.getAll()\r\n      ]);\r\n      setAppointments(appointmentsData);\r\n      setPatients(patientsData);\r\n      setServices(servicesData);\r\n    } catch (error) {\r\n      console.error('Error loading dashboard data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWalkinInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setWalkinData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    setError('');\r\n\r\n    // Load available slots when date is selected\r\n    if (name === 'appointmentDate' && value) {\r\n      loadAvailableSlots(value);\r\n    }\r\n  };\r\n\r\n  const loadAvailableSlots = async (date) => {\r\n    try {\r\n      const slots = await staffAPI.getAvailability(user.id, date);\r\n      setAvailableSlots(slots);\r\n    } catch (error) {\r\n      console.error('Error loading available slots:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateWalkinAppointment = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!walkinData.patientFirstName || !walkinData.patientLastName || \r\n        !walkinData.patientPhone || !walkinData.serviceId || \r\n        !walkinData.appointmentDate || !walkinData.startTime) {\r\n      setError('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setError('');\r\n\r\n    try {\r\n      await doctorAPI.createWalkinAppointment({\r\n        ...walkinData,\r\n        doctorId: user.id\r\n      });\r\n\r\n      // Refresh appointments\r\n      await loadDashboardData();\r\n      \r\n      // Close modal and reset form\r\n      setShowWalkinModal(false);\r\n      setWalkinData({\r\n        patientFirstName: '',\r\n        patientLastName: '',\r\n        patientPhone: '',\r\n        serviceId: '',\r\n        appointmentDate: '',\r\n        startTime: ''\r\n      });\r\n      setAvailableSlots([]);\r\n      \r\n      alert('Walk-in appointment created successfully!');\r\n    } catch (error) {\r\n      setError(error.error || error.message || 'Failed to create walk-in appointment');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateAppointmentStatus = async (appointmentId, status) => {\r\n    try {\r\n      await appointmentsAPI.updateStatus(appointmentId, status);\r\n      await loadDashboardData();\r\n      alert(`Appointment marked as ${status}!`);\r\n    } catch (error) {\r\n      alert('Failed to update appointment status: ' + (error.error || error.message));\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatTime = (timeString) => {\r\n    return new Date(`2000-01-01T${timeString}`).toLocaleTimeString('en-US', {\r\n      hour: 'numeric',\r\n      minute: '2-digit',\r\n      hour12: true\r\n    });\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'confirmed': return 'text-success';\r\n      case 'scheduled': return 'text-primary';\r\n      case 'cancelled': return 'text-error';\r\n      case 'completed': return 'text-secondary';\r\n      case 'in-progress': return 'text-warning';\r\n      default: return 'text-secondary';\r\n    }\r\n  };\r\n\r\n  const getStatusBadgeColor = (status) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'confirmed': return 'bg-green-100 text-green-800';\r\n      case 'scheduled': return 'bg-blue-100 text-blue-800';\r\n      case 'cancelled': return 'bg-red-100 text-red-800';\r\n      case 'completed': return 'bg-gray-100 text-gray-800';\r\n      case 'in-progress': return 'bg-yellow-100 text-yellow-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const todayAppointments = appointments.filter(apt => {\r\n    const appointmentDate = new Date(apt.appointmentDate).toDateString();\r\n    const today = new Date().toDateString();\r\n    return appointmentDate === today;\r\n  });\r\n\r\n  const upcomingAppointments = appointments.filter(apt => {\r\n    const appointmentDate = new Date(apt.appointmentDate);\r\n    const today = new Date();\r\n    return appointmentDate > today && apt.status !== 'cancelled' && apt.status !== 'completed';\r\n  });\r\n\r\n  if (isLoading) {\r\n    return React.createElement(LoadingSpinner, {\r\n      size: 'lg',\r\n      text: 'Loading your dashboard...'\r\n    });\r\n  }\r\n\r\n  return React.createElement('div', {\r\n    className: 'space-y-6'\r\n  },\r\n    // Welcome section\r\n    React.createElement('div', {\r\n      className: 'bg-white rounded-lg shadow-md p-6'\r\n    },\r\n      React.createElement('h1', {\r\n        className: 'text-3xl font-bold text-primary mb-2'\r\n      }, `Welcome, Dr. ${user.lastName}!`),\r\n      React.createElement('p', {\r\n        className: 'text-secondary'\r\n      }, 'Here\\'s your schedule and patient information.')\r\n    ),\r\n\r\n    // Quick stats\r\n    React.createElement('div', {\r\n      className: 'grid grid-cols-1 md:grid-cols-4 gap-6'\r\n    },\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-primary mb-2'\r\n        }, todayAppointments.length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Today\\'s Appointments')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-success mb-2'\r\n        }, upcomingAppointments.length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Upcoming Appointments')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-warning mb-2'\r\n        }, patients.length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Total Patients')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'bg-white rounded-lg shadow-md p-6 text-center'\r\n      },\r\n        React.createElement('div', {\r\n          className: 'text-3xl font-bold text-error mb-2'\r\n        }, appointments.filter(apt => apt.status === 'completed').length),\r\n        React.createElement('p', {\r\n          className: 'text-secondary'\r\n        }, 'Completed Today')\r\n      )\r\n    ),\r\n\r\n    // Action buttons\r\n    React.createElement('div', {\r\n      className: 'flex flex-wrap gap-4'\r\n    },\r\n      React.createElement('button', {\r\n        className: 'btn btn-primary',\r\n        onClick: () => setShowWalkinModal(true)\r\n      }, 'ðŸš¶ Create Walk-in Appointment'),\r\n      React.createElement('button', {\r\n        className: 'btn btn-secondary',\r\n        onClick: loadDashboardData\r\n      }, 'ðŸ”„ Refresh Schedule')\r\n    ),\r\n\r\n    // Today's appointments\r\n    React.createElement('div', {\r\n      className: 'bg-white rounded-lg shadow-md'\r\n    },\r\n      React.createElement('div', {\r\n        className: 'p-6 border-b border-light'\r\n      },\r\n        React.createElement('h2', {\r\n          className: 'text-2xl font-semibold text-primary'\r\n        }, 'Today\\'s Appointments')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'p-6'\r\n      },\r\n        todayAppointments.length === 0 ? \r\n          React.createElement('p', {\r\n            className: 'text-secondary text-center py-8'\r\n          }, 'No appointments scheduled for today.') :\r\n          React.createElement('div', {\r\n            className: 'space-y-4'\r\n          },\r\n            todayAppointments.map(appointment =>\r\n              React.createElement('div', {\r\n                key: appointment.id,\r\n                className: 'border border-light rounded-lg p-4 hover:shadow-md transition-shadow'\r\n              },\r\n                React.createElement('div', {\r\n                  className: 'flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4'\r\n                },\r\n                  React.createElement('div', {\r\n                    className: 'flex-1'\r\n                  },\r\n                    React.createElement('div', {\r\n                      className: 'flex items-center gap-3 mb-2'\r\n                    },\r\n                      React.createElement('h3', {\r\n                        className: 'text-lg font-semibold text-primary'\r\n                      }, appointment.service?.name || 'Service'),\r\n                      React.createElement('span', {\r\n                        className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(appointment.status)}`\r\n                      }, appointment.status)\r\n                    ),\r\n                    React.createElement('p', {\r\n                      className: 'text-secondary mb-1'\r\n                    }, `Patient: ${appointment.patient?.firstName} ${appointment.patient?.lastName}`),\r\n                    React.createElement('p', {\r\n                      className: 'text-secondary mb-1'\r\n                    }, `Time: ${formatTime(appointment.startTime)} - ${formatTime(appointment.endTime)}`),\r\n                    appointment.notes && React.createElement('p', {\r\n                      className: 'text-secondary text-sm'\r\n                    }, `Notes: ${appointment.notes}`)\r\n                  ),\r\n                  React.createElement('div', {\r\n                    className: 'flex flex-wrap gap-2'\r\n                  },\r\n                    appointment.status === 'confirmed' && React.createElement('button', {\r\n                      className: 'btn btn-warning btn-sm',\r\n                      onClick: () => handleUpdateAppointmentStatus(appointment.id, 'in-progress')\r\n                    }, 'Start'),\r\n                    appointment.status === 'in-progress' && React.createElement('button', {\r\n                      className: 'btn btn-success btn-sm',\r\n                      onClick: () => handleUpdateAppointmentStatus(appointment.id, 'completed')\r\n                    }, 'Complete')\r\n                  )\r\n                )\r\n              )\r\n            )\r\n          )\r\n      )\r\n    ),\r\n\r\n    // Upcoming appointments\r\n    React.createElement('div', {\r\n      className: 'bg-white rounded-lg shadow-md'\r\n    },\r\n      React.createElement('div', {\r\n        className: 'p-6 border-b border-light'\r\n      },\r\n        React.createElement('h2', {\r\n          className: 'text-2xl font-semibold text-primary'\r\n        }, 'Upcoming Appointments')\r\n      ),\r\n      React.createElement('div', {\r\n        className: 'p-6'\r\n      },\r\n        upcomingAppointments.length === 0 ? \r\n          React.createElement('p', {\r\n            className: 'text-secondary text-center py-8'\r\n          }, 'No upcoming appointments scheduled.') :\r\n          React.createElement('div', {\r\n            className: 'space-y-4'\r\n          },\r\n            upcomingAppointments.map(appointment =>\r\n              React.createElement('div', {\r\n                key: appointment.id,\r\n                className: 'border border-light rounded-lg p-4'\r\n              },\r\n                React.createElement('div', {\r\n                  className: 'flex flex-col md:flex-row md:items-center md:justify-between gap-4'\r\n                },\r\n                  React.createElement('div', null,\r\n                    React.createElement('h3', {\r\n                      className: 'text-lg font-semibold text-primary'\r\n                    }, appointment.service?.name || 'Service'),\r\n                    React.createElement('p', {\r\n                      className: 'text-secondary'\r\n                    }, formatDate(appointment.appointmentDate)),\r\n                    React.createElement('p', {\r\n                      className: 'text-secondary'\r\n                    }, `Time: ${formatTime(appointment.startTime)} - ${formatTime(appointment.endTime)}`),\r\n                    React.createElement('p', {\r\n                      className: 'text-secondary'\r\n                    }, `Patient: ${appointment.patient?.firstName} ${appointment.patient?.lastName}`)\r\n                  ),\r\n                  React.createElement('span', {\r\n                    className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(appointment.status)}`\r\n                  }, appointment.status)\r\n                )\r\n              )\r\n            )\r\n          )\r\n      )\r\n    ),\r\n\r\n    // Walk-in appointment modal\r\n    React.createElement(Modal, {\r\n      isOpen: showWalkinModal,\r\n      onClose: () => setShowWalkinModal(false),\r\n      title: 'Create Walk-in Appointment',\r\n      size: 'lg'\r\n    },\r\n      React.createElement('form', {\r\n        onSubmit: handleCreateWalkinAppointment\r\n      },\r\n        error && React.createElement('div', {\r\n          className: 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6'\r\n        }, error),\r\n\r\n        React.createElement('div', {\r\n          className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\r\n        },\r\n          React.createElement(FormInput, {\r\n            label: 'Patient First Name',\r\n            name: 'patientFirstName',\r\n            value: walkinData.patientFirstName,\r\n            onChange: handleWalkinInputChange,\r\n            required: true\r\n          }),\r\n          React.createElement(FormInput, {\r\n            label: 'Patient Last Name',\r\n            name: 'patientLastName',\r\n            value: walkinData.patientLastName,\r\n            onChange: handleWalkinInputChange,\r\n            required: true\r\n          })\r\n        ),\r\n\r\n        React.createElement(FormInput, {\r\n          label: 'Patient Phone',\r\n          name: 'patientPhone',\r\n          type: 'tel',\r\n          value: walkinData.patientPhone,\r\n          onChange: handleWalkinInputChange,\r\n          required: true\r\n        }),\r\n\r\n        React.createElement('div', {\r\n          className: 'grid grid-cols-1 md:grid-cols-2 gap-4'\r\n        },\r\n          React.createElement(FormSelect, {\r\n            label: 'Service',\r\n            name: 'serviceId',\r\n            value: walkinData.serviceId,\r\n            onChange: handleWalkinInputChange,\r\n            options: services.map(service => ({\r\n              value: service.id,\r\n              label: service.name\r\n            })),\r\n            required: true\r\n          }),\r\n          React.createElement(FormInput, {\r\n            label: 'Date',\r\n            name: 'appointmentDate',\r\n            type: 'date',\r\n            value: walkinData.appointmentDate,\r\n            onChange: handleWalkinInputChange,\r\n            required: true,\r\n            min: new Date().toISOString().split('T')[0]\r\n          })\r\n        ),\r\n\r\n        walkinData.appointmentDate && availableSlots.length > 0 && React.createElement(FormSelect, {\r\n          label: 'Available Time',\r\n          name: 'startTime',\r\n          value: walkinData.startTime,\r\n          onChange: handleWalkinInputChange,\r\n          options: availableSlots.map(slot => ({\r\n            value: slot.startTime,\r\n            label: formatTime(slot.startTime)\r\n          })),\r\n          required: true\r\n        }),\r\n\r\n        React.createElement('div', {\r\n          className: 'flex gap-4 justify-end mt-6'\r\n        },\r\n          React.createElement('button', {\r\n            type: 'button',\r\n            className: 'btn btn-secondary',\r\n            onClick: () => setShowWalkinModal(false)\r\n          }, 'Cancel'),\r\n          React.createElement('button', {\r\n            type: 'submit',\r\n            className: 'btn btn-primary',\r\n            disabled: isSubmitting\r\n          },\r\n            isSubmitting && React.createElement('div', {\r\n              className: 'loading-spinner w-4 h-4 mr-2'\r\n            }),\r\n            isSubmitting ? 'Creating...' : 'Create Appointment'\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}